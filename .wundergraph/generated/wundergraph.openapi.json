{
  "openapi": "3.1.0",
  "info": {
    "title": "WunderGraph Application",
    "version": "0"
  },
  "servers": [
    {
      "url": "https://d2vp238439bu7d.cloudfront.net/operations"
    }
  ],
  "paths": {
    "/clientPortal/AggregateActivity": {
      "get": {
        "operationId": "ClientPortalAggregateActivity",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "clientPortal_aggregateActivity": {
                          "type": "object",
                          "properties": {
                            "_count": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer"
                                },
                                "activityType": {
                                  "type": "integer"
                                },
                                "timestamp": {
                                  "type": "integer"
                                },
                                "details": {
                                  "type": "integer"
                                },
                                "clientId": {
                                  "type": "integer"
                                },
                                "_all": {
                                  "type": "integer"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "activityType",
                                "timestamp",
                                "details",
                                "clientId",
                                "_all"
                              ]
                            },
                            "_min": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "activityType": {
                                  "type": "string",
                                  "enum": [
                                    "LOGIN",
                                    "LOGOUT",
                                    "SERVICE_ACCESS",
                                    "QUOTE_REQUEST",
                                    "TRANSACTION"
                                  ]
                                },
                                "timestamp": {
                                  "type": "string"
                                },
                                "clientId": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "_max": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "activityType": {
                                  "type": "string",
                                  "enum": [
                                    "LOGIN",
                                    "LOGOUT",
                                    "SERVICE_ACCESS",
                                    "QUOTE_REQUEST",
                                    "TRANSACTION"
                                  ]
                                },
                                "timestamp": {
                                  "type": "string"
                                },
                                "clientId": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "clientPortal_aggregateActivity"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/clientPortal/AggregateClient": {
      "get": {
        "operationId": "ClientPortalAggregateClient",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "clientPortal_aggregateClient": {
                          "type": "object",
                          "properties": {
                            "_count": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer"
                                },
                                "username": {
                                  "type": "integer"
                                },
                                "password": {
                                  "type": "integer"
                                },
                                "_all": {
                                  "type": "integer"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "username",
                                "password",
                                "_all"
                              ]
                            },
                            "_min": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "username": {
                                  "type": "string"
                                },
                                "password": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "_max": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "username": {
                                  "type": "string"
                                },
                                "password": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "clientPortal_aggregateClient"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/clientPortal/AggregateService": {
      "get": {
        "operationId": "ClientPortalAggregateService",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "clientPortal_aggregateService": {
                          "type": "object",
                          "properties": {
                            "_count": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer"
                                },
                                "serviceType": {
                                  "type": "integer"
                                },
                                "content": {
                                  "type": "integer"
                                },
                                "clientId": {
                                  "type": "integer"
                                },
                                "_all": {
                                  "type": "integer"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "serviceType",
                                "content",
                                "clientId",
                                "_all"
                              ]
                            },
                            "_min": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "serviceType": {
                                  "type": "string",
                                  "enum": [
                                    "GENERAL_ACCESS",
                                    "QUOTES",
                                    "TRANSACTIONS"
                                  ]
                                },
                                "clientId": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "_max": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "serviceType": {
                                  "type": "string",
                                  "enum": [
                                    "GENERAL_ACCESS",
                                    "QUOTES",
                                    "TRANSACTIONS"
                                  ]
                                },
                                "clientId": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "clientPortal_aggregateService"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/clientPortal/CreateManyActivity": {
      "post": {
        "operationId": "ClientPortalCreateManyActivity",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/clientPortal_ActivityCreateManyInput"
                    }
                  },
                  "skipDuplicates": {
                    "type": [
                      "boolean",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "clientPortal_createManyActivity": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/clientPortal/CreateManyClient": {
      "post": {
        "operationId": "ClientPortalCreateManyClient",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/clientPortal_ClientCreateManyInput"
                    }
                  },
                  "skipDuplicates": {
                    "type": [
                      "boolean",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "clientPortal_createManyClient": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/clientPortal/CreateManyService": {
      "post": {
        "operationId": "ClientPortalCreateManyService",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/clientPortal_ServiceCreateManyInput"
                    }
                  },
                  "skipDuplicates": {
                    "type": [
                      "boolean",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "clientPortal_createManyService": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/clientPortal/CreateOneActivity": {
      "post": {
        "operationId": "ClientPortalCreateOneActivity",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/clientPortal_ActivityCreateInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "clientPortal_createOneActivity": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "activityType": {
                              "type": "string",
                              "enum": [
                                "LOGIN",
                                "LOGOUT",
                                "SERVICE_ACCESS",
                                "QUOTE_REQUEST",
                                "TRANSACTION"
                              ]
                            },
                            "timestamp": {
                              "type": "string"
                            },
                            "details": {},
                            "clientId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "activityType",
                            "timestamp",
                            "details",
                            "clientId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/clientPortal/CreateOneClient": {
      "post": {
        "operationId": "ClientPortalCreateOneClient",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/clientPortal_ClientCreateInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "clientPortal_createOneClient": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "password": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "username",
                            "password"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/clientPortal/CreateOneService": {
      "post": {
        "operationId": "ClientPortalCreateOneService",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/clientPortal_ServiceCreateInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "clientPortal_createOneService": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "serviceType": {
                              "type": "string",
                              "enum": [
                                "GENERAL_ACCESS",
                                "QUOTES",
                                "TRANSACTIONS"
                              ]
                            },
                            "content": {},
                            "clientId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "serviceType",
                            "content",
                            "clientId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/clientPortal/DeleteManyActivity": {
      "post": {
        "operationId": "ClientPortalDeleteManyActivity",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/clientPortal_ActivityWhereInput"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "clientPortal_deleteManyActivity": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/clientPortal/DeleteManyClient": {
      "post": {
        "operationId": "ClientPortalDeleteManyClient",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/clientPortal_ClientWhereInput"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "clientPortal_deleteManyClient": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/clientPortal/DeleteManyService": {
      "post": {
        "operationId": "ClientPortalDeleteManyService",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/clientPortal_ServiceWhereInput"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "clientPortal_deleteManyService": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/clientPortal/DeleteOneActivity": {
      "post": {
        "operationId": "ClientPortalDeleteOneActivity",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/clientPortal_ActivityWhereUniqueInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "where"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "clientPortal_deleteOneActivity": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "activityType": {
                              "type": "string",
                              "enum": [
                                "LOGIN",
                                "LOGOUT",
                                "SERVICE_ACCESS",
                                "QUOTE_REQUEST",
                                "TRANSACTION"
                              ]
                            },
                            "timestamp": {
                              "type": "string"
                            },
                            "details": {},
                            "clientId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "activityType",
                            "timestamp",
                            "details",
                            "clientId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/clientPortal/DeleteOneClient": {
      "post": {
        "operationId": "ClientPortalDeleteOneClient",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/clientPortal_ClientWhereUniqueInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "where"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "clientPortal_deleteOneClient": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "password": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "username",
                            "password"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/clientPortal/DeleteOneService": {
      "post": {
        "operationId": "ClientPortalDeleteOneService",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/clientPortal_ServiceWhereUniqueInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "where"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "clientPortal_deleteOneService": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "serviceType": {
                              "type": "string",
                              "enum": [
                                "GENERAL_ACCESS",
                                "QUOTES",
                                "TRANSACTIONS"
                              ]
                            },
                            "content": {},
                            "clientId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "serviceType",
                            "content",
                            "clientId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/clientPortal/ExecuteRaw": {
      "post": {
        "operationId": "ClientPortalExecuteRaw",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "query": {
                    "type": "string"
                  },
                  "parameters": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                },
                "additionalProperties": false,
                "required": [
                  "query"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "clientPortal_executeRaw": {
                          "type": "integer"
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "clientPortal_executeRaw"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/clientPortal/FindFirstActivity": {
      "get": {
        "operationId": "ClientPortalFindFirstActivity",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "clientPortal_findFirstActivity": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "activityType": {
                              "type": "string",
                              "enum": [
                                "LOGIN",
                                "LOGOUT",
                                "SERVICE_ACCESS",
                                "QUOTE_REQUEST",
                                "TRANSACTION"
                              ]
                            },
                            "timestamp": {
                              "type": "string"
                            },
                            "details": {},
                            "clientId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "activityType",
                            "timestamp",
                            "details",
                            "clientId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/clientPortal/FindFirstActivityOrThrow": {
      "get": {
        "operationId": "ClientPortalFindFirstActivityOrThrow",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "clientPortal_findFirstActivityOrThrow": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "activityType": {
                              "type": "string",
                              "enum": [
                                "LOGIN",
                                "LOGOUT",
                                "SERVICE_ACCESS",
                                "QUOTE_REQUEST",
                                "TRANSACTION"
                              ]
                            },
                            "timestamp": {
                              "type": "string"
                            },
                            "details": {},
                            "clientId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "activityType",
                            "timestamp",
                            "details",
                            "clientId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/clientPortal/FindFirstClient": {
      "get": {
        "operationId": "ClientPortalFindFirstClient",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "clientPortal_findFirstClient": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "password": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "username",
                            "password"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/clientPortal/FindFirstClientOrThrow": {
      "get": {
        "operationId": "ClientPortalFindFirstClientOrThrow",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "clientPortal_findFirstClientOrThrow": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "password": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "username",
                            "password"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/clientPortal/FindFirstService": {
      "get": {
        "operationId": "ClientPortalFindFirstService",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "clientPortal_findFirstService": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "serviceType": {
                              "type": "string",
                              "enum": [
                                "GENERAL_ACCESS",
                                "QUOTES",
                                "TRANSACTIONS"
                              ]
                            },
                            "content": {},
                            "clientId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "serviceType",
                            "content",
                            "clientId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/clientPortal/FindFirstServiceOrThrow": {
      "get": {
        "operationId": "ClientPortalFindFirstServiceOrThrow",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "clientPortal_findFirstServiceOrThrow": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "serviceType": {
                              "type": "string",
                              "enum": [
                                "GENERAL_ACCESS",
                                "QUOTES",
                                "TRANSACTIONS"
                              ]
                            },
                            "content": {},
                            "clientId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "serviceType",
                            "content",
                            "clientId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/clientPortal/FindManyActivity": {
      "get": {
        "operationId": "ClientPortalFindManyActivity",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "clientPortal_findManyActivity": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "activityType": {
                                "type": "string",
                                "enum": [
                                  "LOGIN",
                                  "LOGOUT",
                                  "SERVICE_ACCESS",
                                  "QUOTE_REQUEST",
                                  "TRANSACTION"
                                ]
                              },
                              "timestamp": {
                                "type": "string"
                              },
                              "details": {},
                              "clientId": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "id",
                              "activityType",
                              "timestamp",
                              "details",
                              "clientId"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "clientPortal_findManyActivity"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/clientPortal/FindManyClient": {
      "get": {
        "operationId": "ClientPortalFindManyClient",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "clientPortal_findManyClient": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "username": {
                                "type": "string"
                              },
                              "password": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "id",
                              "username",
                              "password"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "clientPortal_findManyClient"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/clientPortal/FindManyService": {
      "get": {
        "operationId": "ClientPortalFindManyService",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "clientPortal_findManyService": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "serviceType": {
                                "type": "string",
                                "enum": [
                                  "GENERAL_ACCESS",
                                  "QUOTES",
                                  "TRANSACTIONS"
                                ]
                              },
                              "content": {},
                              "clientId": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "id",
                              "serviceType",
                              "content",
                              "clientId"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "clientPortal_findManyService"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/clientPortal/FindUniqueActivity": {
      "get": {
        "operationId": "ClientPortalFindUniqueActivity",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "clientPortal_findUniqueActivity": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "activityType": {
                              "type": "string",
                              "enum": [
                                "LOGIN",
                                "LOGOUT",
                                "SERVICE_ACCESS",
                                "QUOTE_REQUEST",
                                "TRANSACTION"
                              ]
                            },
                            "timestamp": {
                              "type": "string"
                            },
                            "details": {},
                            "clientId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "activityType",
                            "timestamp",
                            "details",
                            "clientId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/clientPortal/FindUniqueActivityOrThrow": {
      "get": {
        "operationId": "ClientPortalFindUniqueActivityOrThrow",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "clientPortal_findUniqueActivityOrThrow": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "activityType": {
                              "type": "string",
                              "enum": [
                                "LOGIN",
                                "LOGOUT",
                                "SERVICE_ACCESS",
                                "QUOTE_REQUEST",
                                "TRANSACTION"
                              ]
                            },
                            "timestamp": {
                              "type": "string"
                            },
                            "details": {},
                            "clientId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "activityType",
                            "timestamp",
                            "details",
                            "clientId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/clientPortal/FindUniqueClient": {
      "get": {
        "operationId": "ClientPortalFindUniqueClient",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "clientPortal_findUniqueClient": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "password": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "username",
                            "password"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/clientPortal/FindUniqueClientOrThrow": {
      "get": {
        "operationId": "ClientPortalFindUniqueClientOrThrow",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "clientPortal_findUniqueClientOrThrow": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "password": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "username",
                            "password"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/clientPortal/FindUniqueService": {
      "get": {
        "operationId": "ClientPortalFindUniqueService",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "clientPortal_findUniqueService": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "serviceType": {
                              "type": "string",
                              "enum": [
                                "GENERAL_ACCESS",
                                "QUOTES",
                                "TRANSACTIONS"
                              ]
                            },
                            "content": {},
                            "clientId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "serviceType",
                            "content",
                            "clientId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/clientPortal/FindUniqueServiceOrThrow": {
      "get": {
        "operationId": "ClientPortalFindUniqueServiceOrThrow",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "clientPortal_findUniqueServiceOrThrow": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "serviceType": {
                              "type": "string",
                              "enum": [
                                "GENERAL_ACCESS",
                                "QUOTES",
                                "TRANSACTIONS"
                              ]
                            },
                            "content": {},
                            "clientId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "serviceType",
                            "content",
                            "clientId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/clientPortal/GroupByActivity": {
      "get": {
        "operationId": "ClientPortalGroupByActivity",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "by.0",
            "description": "Type: string,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "clientPortal_groupByActivity": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "activityType": {
                                "type": "string",
                                "enum": [
                                  "LOGIN",
                                  "LOGOUT",
                                  "SERVICE_ACCESS",
                                  "QUOTE_REQUEST",
                                  "TRANSACTION"
                                ]
                              },
                              "timestamp": {
                                "type": "string"
                              },
                              "details": {},
                              "clientId": {
                                "type": "string"
                              },
                              "_count": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer"
                                  },
                                  "activityType": {
                                    "type": "integer"
                                  },
                                  "timestamp": {
                                    "type": "integer"
                                  },
                                  "details": {
                                    "type": "integer"
                                  },
                                  "clientId": {
                                    "type": "integer"
                                  },
                                  "_all": {
                                    "type": "integer"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "activityType",
                                  "timestamp",
                                  "details",
                                  "clientId",
                                  "_all"
                                ]
                              },
                              "_min": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "activityType": {
                                    "type": "string",
                                    "enum": [
                                      "LOGIN",
                                      "LOGOUT",
                                      "SERVICE_ACCESS",
                                      "QUOTE_REQUEST",
                                      "TRANSACTION"
                                    ]
                                  },
                                  "timestamp": {
                                    "type": "string"
                                  },
                                  "clientId": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "_max": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "activityType": {
                                    "type": "string",
                                    "enum": [
                                      "LOGIN",
                                      "LOGOUT",
                                      "SERVICE_ACCESS",
                                      "QUOTE_REQUEST",
                                      "TRANSACTION"
                                    ]
                                  },
                                  "timestamp": {
                                    "type": "string"
                                  },
                                  "clientId": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "id",
                              "activityType",
                              "timestamp",
                              "details",
                              "clientId"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "clientPortal_groupByActivity"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/clientPortal/GroupByClient": {
      "get": {
        "operationId": "ClientPortalGroupByClient",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "by.0",
            "description": "Type: string,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "clientPortal_groupByClient": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "username": {
                                "type": "string"
                              },
                              "password": {
                                "type": "string"
                              },
                              "_count": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer"
                                  },
                                  "username": {
                                    "type": "integer"
                                  },
                                  "password": {
                                    "type": "integer"
                                  },
                                  "_all": {
                                    "type": "integer"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "username",
                                  "password",
                                  "_all"
                                ]
                              },
                              "_min": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "username": {
                                    "type": "string"
                                  },
                                  "password": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "_max": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "username": {
                                    "type": "string"
                                  },
                                  "password": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "id",
                              "username",
                              "password"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "clientPortal_groupByClient"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/clientPortal/GroupByService": {
      "get": {
        "operationId": "ClientPortalGroupByService",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "by.0",
            "description": "Type: string,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "clientPortal_groupByService": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "serviceType": {
                                "type": "string",
                                "enum": [
                                  "GENERAL_ACCESS",
                                  "QUOTES",
                                  "TRANSACTIONS"
                                ]
                              },
                              "content": {},
                              "clientId": {
                                "type": "string"
                              },
                              "_count": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer"
                                  },
                                  "serviceType": {
                                    "type": "integer"
                                  },
                                  "content": {
                                    "type": "integer"
                                  },
                                  "clientId": {
                                    "type": "integer"
                                  },
                                  "_all": {
                                    "type": "integer"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "serviceType",
                                  "content",
                                  "clientId",
                                  "_all"
                                ]
                              },
                              "_min": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "serviceType": {
                                    "type": "string",
                                    "enum": [
                                      "GENERAL_ACCESS",
                                      "QUOTES",
                                      "TRANSACTIONS"
                                    ]
                                  },
                                  "clientId": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "_max": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "serviceType": {
                                    "type": "string",
                                    "enum": [
                                      "GENERAL_ACCESS",
                                      "QUOTES",
                                      "TRANSACTIONS"
                                    ]
                                  },
                                  "clientId": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "id",
                              "serviceType",
                              "content",
                              "clientId"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "clientPortal_groupByService"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/clientPortal/QueryRaw": {
      "get": {
        "operationId": "ClientPortalQueryRaw",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "query",
            "description": "Type: string",
            "in": "query",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parameters",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "clientPortal_queryRaw": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "ID": {
                                "type": "string"
                              },
                              "Int": {
                                "type": "integer"
                              },
                              "Float": {
                                "type": "number"
                              },
                              "String": {
                                "type": "string"
                              },
                              "Boolean": {
                                "type": "boolean"
                              },
                              "DateTime": {
                                "type": "string"
                              },
                              "JSON": {},
                              "Object": {
                                "type": "object",
                                "properties": {
                                  "ID": {
                                    "type": "string"
                                  },
                                  "Int": {
                                    "type": "integer"
                                  },
                                  "Float": {
                                    "type": "number"
                                  },
                                  "String": {
                                    "type": "string"
                                  },
                                  "Boolean": {
                                    "type": "boolean"
                                  },
                                  "DateTime": {
                                    "type": "string"
                                  },
                                  "JSON": {},
                                  "OptionalID": {
                                    "type": "string"
                                  },
                                  "OptionalInt": {
                                    "type": "integer"
                                  },
                                  "OptionalFloat": {
                                    "type": "number"
                                  },
                                  "OptionalString": {
                                    "type": "string"
                                  },
                                  "OptionalBoolean": {
                                    "type": "boolean"
                                  },
                                  "OptionalDateTime": {
                                    "type": "string"
                                  },
                                  "OptionalJSON": {}
                                },
                                "additionalProperties": false,
                                "required": [
                                  "ID",
                                  "Int",
                                  "Float",
                                  "String",
                                  "Boolean",
                                  "DateTime",
                                  "JSON"
                                ]
                              },
                              "Array": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "ID": {
                                      "type": "string"
                                    },
                                    "Int": {
                                      "type": "integer"
                                    },
                                    "Float": {
                                      "type": "number"
                                    },
                                    "String": {
                                      "type": "string"
                                    },
                                    "Boolean": {
                                      "type": "boolean"
                                    },
                                    "DateTime": {
                                      "type": "string"
                                    },
                                    "JSON": {},
                                    "OptionalID": {
                                      "type": "string"
                                    },
                                    "OptionalInt": {
                                      "type": "integer"
                                    },
                                    "OptionalFloat": {
                                      "type": "number"
                                    },
                                    "OptionalString": {
                                      "type": "string"
                                    },
                                    "OptionalBoolean": {
                                      "type": "boolean"
                                    },
                                    "OptionalDateTime": {
                                      "type": "string"
                                    },
                                    "OptionalJSON": {}
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "ID",
                                    "Int",
                                    "Float",
                                    "String",
                                    "Boolean",
                                    "DateTime",
                                    "JSON"
                                  ]
                                }
                              },
                              "OptionalID": {
                                "type": "string"
                              },
                              "OptionalInt": {
                                "type": "integer"
                              },
                              "OptionalFloat": {
                                "type": "number"
                              },
                              "OptionalString": {
                                "type": "string"
                              },
                              "OptionalBoolean": {
                                "type": "boolean"
                              },
                              "OptionalDateTime": {
                                "type": "string"
                              },
                              "OptionalJSON": {},
                              "OptionalObject": {
                                "type": "object",
                                "properties": {
                                  "ID": {
                                    "type": "string"
                                  },
                                  "Int": {
                                    "type": "integer"
                                  },
                                  "Float": {
                                    "type": "number"
                                  },
                                  "String": {
                                    "type": "string"
                                  },
                                  "Boolean": {
                                    "type": "boolean"
                                  },
                                  "DateTime": {
                                    "type": "string"
                                  },
                                  "JSON": {},
                                  "OptionalID": {
                                    "type": "string"
                                  },
                                  "OptionalInt": {
                                    "type": "integer"
                                  },
                                  "OptionalFloat": {
                                    "type": "number"
                                  },
                                  "OptionalString": {
                                    "type": "string"
                                  },
                                  "OptionalBoolean": {
                                    "type": "boolean"
                                  },
                                  "OptionalDateTime": {
                                    "type": "string"
                                  },
                                  "OptionalJSON": {}
                                },
                                "additionalProperties": false,
                                "required": [
                                  "ID",
                                  "Int",
                                  "Float",
                                  "String",
                                  "Boolean",
                                  "DateTime",
                                  "JSON"
                                ]
                              },
                              "OptionalArray": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "ID": {
                                      "type": "string"
                                    },
                                    "Int": {
                                      "type": "integer"
                                    },
                                    "Float": {
                                      "type": "number"
                                    },
                                    "String": {
                                      "type": "string"
                                    },
                                    "Boolean": {
                                      "type": "boolean"
                                    },
                                    "DateTime": {
                                      "type": "string"
                                    },
                                    "JSON": {},
                                    "OptionalID": {
                                      "type": "string"
                                    },
                                    "OptionalInt": {
                                      "type": "integer"
                                    },
                                    "OptionalFloat": {
                                      "type": "number"
                                    },
                                    "OptionalString": {
                                      "type": "string"
                                    },
                                    "OptionalBoolean": {
                                      "type": "boolean"
                                    },
                                    "OptionalDateTime": {
                                      "type": "string"
                                    },
                                    "OptionalJSON": {}
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "ID",
                                    "Int",
                                    "Float",
                                    "String",
                                    "Boolean",
                                    "DateTime",
                                    "JSON"
                                  ]
                                }
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "ID",
                              "Int",
                              "Float",
                              "String",
                              "Boolean",
                              "DateTime",
                              "JSON",
                              "Object",
                              "Array",
                              "OptionalArray"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "clientPortal_queryRaw"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/clientPortal/QueryRawJSON": {
      "get": {
        "operationId": "ClientPortalQueryRawJSON",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "query",
            "description": "Type: string",
            "in": "query",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parameters",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "clientPortal_queryRawJSON": {}
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/clientPortal/UpdateManyActivity": {
      "post": {
        "operationId": "ClientPortalUpdateManyActivity",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/clientPortal_ActivityUpdateManyMutationInput"
                  },
                  "where": {
                    "$ref": "#/components/schemas/clientPortal_ActivityWhereInput_2"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "clientPortal_updateManyActivity": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/clientPortal/UpdateManyClient": {
      "post": {
        "operationId": "ClientPortalUpdateManyClient",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/clientPortal_ClientUpdateManyMutationInput"
                  },
                  "where": {
                    "$ref": "#/components/schemas/clientPortal_ClientWhereInput_2"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "clientPortal_updateManyClient": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/clientPortal/UpdateManyService": {
      "post": {
        "operationId": "ClientPortalUpdateManyService",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/clientPortal_ServiceUpdateManyMutationInput"
                  },
                  "where": {
                    "$ref": "#/components/schemas/clientPortal_ServiceWhereInput_2"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "clientPortal_updateManyService": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/clientPortal/UpdateOneActivity": {
      "post": {
        "operationId": "ClientPortalUpdateOneActivity",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/clientPortal_ActivityUpdateInput"
                  },
                  "where": {
                    "$ref": "#/components/schemas/clientPortal_ActivityWhereUniqueInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data",
                  "where"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "clientPortal_updateOneActivity": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "activityType": {
                              "type": "string",
                              "enum": [
                                "LOGIN",
                                "LOGOUT",
                                "SERVICE_ACCESS",
                                "QUOTE_REQUEST",
                                "TRANSACTION"
                              ]
                            },
                            "timestamp": {
                              "type": "string"
                            },
                            "details": {},
                            "clientId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "activityType",
                            "timestamp",
                            "details",
                            "clientId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/clientPortal/UpdateOneClient": {
      "post": {
        "operationId": "ClientPortalUpdateOneClient",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/clientPortal_ClientUpdateInput"
                  },
                  "where": {
                    "$ref": "#/components/schemas/clientPortal_ClientWhereUniqueInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data",
                  "where"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "clientPortal_updateOneClient": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "password": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "username",
                            "password"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/clientPortal/UpdateOneService": {
      "post": {
        "operationId": "ClientPortalUpdateOneService",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/clientPortal_ServiceUpdateInput"
                  },
                  "where": {
                    "$ref": "#/components/schemas/clientPortal_ServiceWhereUniqueInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data",
                  "where"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "clientPortal_updateOneService": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "serviceType": {
                              "type": "string",
                              "enum": [
                                "GENERAL_ACCESS",
                                "QUOTES",
                                "TRANSACTIONS"
                              ]
                            },
                            "content": {},
                            "clientId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "serviceType",
                            "content",
                            "clientId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/clientPortal/UpsertOneActivity": {
      "post": {
        "operationId": "ClientPortalUpsertOneActivity",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/clientPortal_ActivityWhereUniqueInput"
                  },
                  "create": {
                    "$ref": "#/components/schemas/clientPortal_ActivityCreateInput"
                  },
                  "update": {
                    "$ref": "#/components/schemas/clientPortal_ActivityUpdateInput_2"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "where",
                  "create",
                  "update"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "clientPortal_upsertOneActivity": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "activityType": {
                              "type": "string",
                              "enum": [
                                "LOGIN",
                                "LOGOUT",
                                "SERVICE_ACCESS",
                                "QUOTE_REQUEST",
                                "TRANSACTION"
                              ]
                            },
                            "timestamp": {
                              "type": "string"
                            },
                            "details": {},
                            "clientId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "activityType",
                            "timestamp",
                            "details",
                            "clientId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/clientPortal/UpsertOneClient": {
      "post": {
        "operationId": "ClientPortalUpsertOneClient",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/clientPortal_ClientWhereUniqueInput"
                  },
                  "create": {
                    "$ref": "#/components/schemas/clientPortal_ClientCreateInput"
                  },
                  "update": {
                    "$ref": "#/components/schemas/clientPortal_ClientUpdateInput_2"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "where",
                  "create",
                  "update"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "clientPortal_upsertOneClient": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "password": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "username",
                            "password"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/clientPortal/UpsertOneService": {
      "post": {
        "operationId": "ClientPortalUpsertOneService",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/clientPortal_ServiceWhereUniqueInput"
                  },
                  "create": {
                    "$ref": "#/components/schemas/clientPortal_ServiceCreateInput"
                  },
                  "update": {
                    "$ref": "#/components/schemas/clientPortal_ServiceUpdateInput_2"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "where",
                  "create",
                  "update"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "clientPortal_upsertOneService": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "serviceType": {
                              "type": "string",
                              "enum": [
                                "GENERAL_ACCESS",
                                "QUOTES",
                                "TRANSACTIONS"
                              ]
                            },
                            "content": {},
                            "clientId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "serviceType",
                            "content",
                            "clientId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/countries/Continent": {
      "get": {
        "operationId": "CountriesContinent",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "code",
            "description": "Type: string",
            "in": "query",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "countries_continent_countries_countries_name_lang",
            "description": "Type: string,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "countries_continent": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "countries": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "awsRegion": {
                                    "type": "string"
                                  },
                                  "capital": {
                                    "type": "string"
                                  },
                                  "code": {
                                    "type": "string"
                                  },
                                  "currencies": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "currency": {
                                    "type": "string"
                                  },
                                  "emoji": {
                                    "type": "string"
                                  },
                                  "emojiU": {
                                    "type": "string"
                                  },
                                  "languages": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "code": {
                                          "type": "string"
                                        },
                                        "name": {
                                          "type": "string"
                                        },
                                        "native": {
                                          "type": "string"
                                        },
                                        "rtl": {
                                          "type": "boolean"
                                        }
                                      },
                                      "additionalProperties": false,
                                      "required": [
                                        "code",
                                        "name",
                                        "native",
                                        "rtl"
                                      ]
                                    }
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "native": {
                                    "type": "string"
                                  },
                                  "phone": {
                                    "type": "string"
                                  },
                                  "phones": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "states": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "code": {
                                          "type": "string"
                                        },
                                        "name": {
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false,
                                      "required": [
                                        "name"
                                      ]
                                    }
                                  },
                                  "subdivisions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "code": {
                                          "type": "string"
                                        },
                                        "emoji": {
                                          "type": "string"
                                        },
                                        "name": {
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false,
                                      "required": [
                                        "code",
                                        "name"
                                      ]
                                    }
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "awsRegion",
                                  "code",
                                  "currencies",
                                  "emoji",
                                  "emojiU",
                                  "languages",
                                  "name",
                                  "native",
                                  "phone",
                                  "phones",
                                  "states",
                                  "subdivisions"
                                ]
                              }
                            },
                            "name": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "code",
                            "countries",
                            "name"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/countries/Continents": {
      "get": {
        "operationId": "CountriesContinents",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "countries_continents_countries_countries_name_lang",
            "description": "Type: string,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "countries_continents": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "countries": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "awsRegion": {
                                      "type": "string"
                                    },
                                    "capital": {
                                      "type": "string"
                                    },
                                    "code": {
                                      "type": "string"
                                    },
                                    "currencies": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "currency": {
                                      "type": "string"
                                    },
                                    "emoji": {
                                      "type": "string"
                                    },
                                    "emojiU": {
                                      "type": "string"
                                    },
                                    "languages": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "code": {
                                            "type": "string"
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "native": {
                                            "type": "string"
                                          },
                                          "rtl": {
                                            "type": "boolean"
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "code",
                                          "name",
                                          "native",
                                          "rtl"
                                        ]
                                      }
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "native": {
                                      "type": "string"
                                    },
                                    "phone": {
                                      "type": "string"
                                    },
                                    "phones": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "states": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "code": {
                                            "type": "string"
                                          },
                                          "name": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "name"
                                        ]
                                      }
                                    },
                                    "subdivisions": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "code": {
                                            "type": "string"
                                          },
                                          "emoji": {
                                            "type": "string"
                                          },
                                          "name": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "code",
                                          "name"
                                        ]
                                      }
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "awsRegion",
                                    "code",
                                    "currencies",
                                    "emoji",
                                    "emojiU",
                                    "languages",
                                    "name",
                                    "native",
                                    "phone",
                                    "phones",
                                    "states",
                                    "subdivisions"
                                  ]
                                }
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "code",
                              "countries",
                              "name"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "countries_continents"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/countries/Countries": {
      "get": {
        "operationId": "CountriesCountries",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "countries_countries_name_lang",
            "description": "Type: string,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "countries_countries": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "awsRegion": {
                                "type": "string"
                              },
                              "capital": {
                                "type": "string"
                              },
                              "code": {
                                "type": "string"
                              },
                              "continent": {
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "code",
                                  "name"
                                ]
                              },
                              "currencies": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "currency": {
                                "type": "string"
                              },
                              "emoji": {
                                "type": "string"
                              },
                              "emojiU": {
                                "type": "string"
                              },
                              "languages": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "native": {
                                      "type": "string"
                                    },
                                    "rtl": {
                                      "type": "boolean"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "code",
                                    "name",
                                    "native",
                                    "rtl"
                                  ]
                                }
                              },
                              "name": {
                                "type": "string"
                              },
                              "native": {
                                "type": "string"
                              },
                              "phone": {
                                "type": "string"
                              },
                              "phones": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "states": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "name"
                                  ]
                                }
                              },
                              "subdivisions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "code": {
                                      "type": "string"
                                    },
                                    "emoji": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "code",
                                    "name"
                                  ]
                                }
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "awsRegion",
                              "code",
                              "continent",
                              "currencies",
                              "emoji",
                              "emojiU",
                              "languages",
                              "name",
                              "native",
                              "phone",
                              "phones",
                              "states",
                              "subdivisions"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "countries_countries"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/countries/Country": {
      "get": {
        "operationId": "CountriesCountry",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "code",
            "description": "Type: string",
            "in": "query",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "countries_country_name_lang",
            "description": "Type: string,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "countries_country": {
                          "type": "object",
                          "properties": {
                            "awsRegion": {
                              "type": "string"
                            },
                            "capital": {
                              "type": "string"
                            },
                            "code": {
                              "type": "string"
                            },
                            "continent": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "code",
                                "name"
                              ]
                            },
                            "currencies": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "currency": {
                              "type": "string"
                            },
                            "emoji": {
                              "type": "string"
                            },
                            "emojiU": {
                              "type": "string"
                            },
                            "languages": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "native": {
                                    "type": "string"
                                  },
                                  "rtl": {
                                    "type": "boolean"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "code",
                                  "name",
                                  "native",
                                  "rtl"
                                ]
                              }
                            },
                            "name": {
                              "type": "string"
                            },
                            "native": {
                              "type": "string"
                            },
                            "phone": {
                              "type": "string"
                            },
                            "phones": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "states": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "name"
                                ]
                              }
                            },
                            "subdivisions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "string"
                                  },
                                  "emoji": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "code",
                                  "name"
                                ]
                              }
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "awsRegion",
                            "code",
                            "continent",
                            "currencies",
                            "emoji",
                            "emojiU",
                            "languages",
                            "name",
                            "native",
                            "phone",
                            "phones",
                            "states",
                            "subdivisions"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/countries/CountryByCode": {
      "get": {
        "operationId": "CountriesCountryByCode",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "code",
            "description": "Type: string",
            "in": "query",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "countries_country": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "currencies": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "capital": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "code",
                            "name",
                            "currencies"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/countries/Language": {
      "get": {
        "operationId": "CountriesLanguage",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "code",
            "description": "Type: string",
            "in": "query",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "countries_language": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "native": {
                              "type": "string"
                            },
                            "rtl": {
                              "type": "boolean"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "code",
                            "name",
                            "native",
                            "rtl"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/countries/Languages": {
      "get": {
        "operationId": "CountriesLanguages",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "countries_languages": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "native": {
                                "type": "string"
                              },
                              "rtl": {
                                "type": "boolean"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "code",
                              "name",
                              "native",
                              "rtl"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "countries_languages"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/AggregateAccount": {
      "get": {
        "operationId": "CustomerCommunicationAggregateAccount",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_aggregateAccount": {
                          "type": "object",
                          "properties": {
                            "_count": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer"
                                },
                                "userId": {
                                  "type": "integer"
                                },
                                "type": {
                                  "type": "integer"
                                },
                                "provider": {
                                  "type": "integer"
                                },
                                "providerAccountId": {
                                  "type": "integer"
                                },
                                "refresh_token": {
                                  "type": "integer"
                                },
                                "access_token": {
                                  "type": "integer"
                                },
                                "expires_at": {
                                  "type": "integer"
                                },
                                "token_type": {
                                  "type": "integer"
                                },
                                "scope": {
                                  "type": "integer"
                                },
                                "id_token": {
                                  "type": "integer"
                                },
                                "session_state": {
                                  "type": "integer"
                                },
                                "createdAt": {
                                  "type": "integer"
                                },
                                "updatedAt": {
                                  "type": "integer"
                                },
                                "_all": {
                                  "type": "integer"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "userId",
                                "type",
                                "provider",
                                "providerAccountId",
                                "refresh_token",
                                "access_token",
                                "expires_at",
                                "token_type",
                                "scope",
                                "id_token",
                                "session_state",
                                "createdAt",
                                "updatedAt",
                                "_all"
                              ]
                            },
                            "_avg": {
                              "type": "object",
                              "properties": {
                                "expires_at": {
                                  "type": "number"
                                }
                              },
                              "additionalProperties": false
                            },
                            "_sum": {
                              "type": "object",
                              "properties": {
                                "expires_at": {
                                  "type": "integer"
                                }
                              },
                              "additionalProperties": false
                            },
                            "_min": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "userId": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string"
                                },
                                "provider": {
                                  "type": "string"
                                },
                                "providerAccountId": {
                                  "type": "string"
                                },
                                "refresh_token": {
                                  "type": "string"
                                },
                                "access_token": {
                                  "type": "string"
                                },
                                "expires_at": {
                                  "type": "integer"
                                },
                                "token_type": {
                                  "type": "string"
                                },
                                "scope": {
                                  "type": "string"
                                },
                                "id_token": {
                                  "type": "string"
                                },
                                "session_state": {
                                  "type": "string"
                                },
                                "createdAt": {
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "_max": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "userId": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string"
                                },
                                "provider": {
                                  "type": "string"
                                },
                                "providerAccountId": {
                                  "type": "string"
                                },
                                "refresh_token": {
                                  "type": "string"
                                },
                                "access_token": {
                                  "type": "string"
                                },
                                "expires_at": {
                                  "type": "integer"
                                },
                                "token_type": {
                                  "type": "string"
                                },
                                "scope": {
                                  "type": "string"
                                },
                                "id_token": {
                                  "type": "string"
                                },
                                "session_state": {
                                  "type": "string"
                                },
                                "createdAt": {
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "customerCommunication_aggregateAccount"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/AggregateFilter": {
      "get": {
        "operationId": "CustomerCommunicationAggregateFilter",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_aggregateFilter": {
                          "type": "object",
                          "properties": {
                            "_count": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer"
                                },
                                "audience": {
                                  "type": "integer"
                                },
                                "output": {
                                  "type": "integer"
                                },
                                "_all": {
                                  "type": "integer"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "audience",
                                "output",
                                "_all"
                              ]
                            },
                            "_min": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "audience": {
                                  "type": "string",
                                  "enum": [
                                    "CALL_CENTER",
                                    "CLIENT_PORTAL",
                                    "GUARDIAN_ONLINE",
                                    "GPAC",
                                    "SMART_OFFICE",
                                    "LIVING_BALANCE_SHEET"
                                  ]
                                },
                                "output": {
                                  "type": "string",
                                  "enum": [
                                    "CALLS",
                                    "CHATS",
                                    "EMAILS",
                                    "WEB_USAGE",
                                    "IVR_HUGO_USAGE",
                                    "OUTBOUND_CORRESPONDENCE",
                                    "MARKETING_MATERIALS",
                                    "TEXTS"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            },
                            "_max": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "audience": {
                                  "type": "string",
                                  "enum": [
                                    "CALL_CENTER",
                                    "CLIENT_PORTAL",
                                    "GUARDIAN_ONLINE",
                                    "GPAC",
                                    "SMART_OFFICE",
                                    "LIVING_BALANCE_SHEET"
                                  ]
                                },
                                "output": {
                                  "type": "string",
                                  "enum": [
                                    "CALLS",
                                    "CHATS",
                                    "EMAILS",
                                    "WEB_USAGE",
                                    "IVR_HUGO_USAGE",
                                    "OUTBOUND_CORRESPONDENCE",
                                    "MARKETING_MATERIALS",
                                    "TEXTS"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "customerCommunication_aggregateFilter"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/AggregateInteraction": {
      "get": {
        "operationId": "CustomerCommunicationAggregateInteraction",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_aggregateInteraction": {
                          "type": "object",
                          "properties": {
                            "_count": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer"
                                },
                                "interactionType": {
                                  "type": "integer"
                                },
                                "content": {
                                  "type": "integer"
                                },
                                "timestamp": {
                                  "type": "integer"
                                },
                                "userId": {
                                  "type": "integer"
                                },
                                "widgetId": {
                                  "type": "integer"
                                },
                                "_all": {
                                  "type": "integer"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "interactionType",
                                "content",
                                "timestamp",
                                "userId",
                                "widgetId",
                                "_all"
                              ]
                            },
                            "_min": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "interactionType": {
                                  "type": "string",
                                  "enum": [
                                    "CALL",
                                    "CHAT",
                                    "EMAIL",
                                    "WEB_USAGE",
                                    "IVR_HUGO_USAGE",
                                    "OUTBOUND_CORRESPONDENCE",
                                    "MARKETING_MATERIAL",
                                    "TEXT"
                                  ]
                                },
                                "content": {
                                  "type": "string"
                                },
                                "timestamp": {
                                  "type": "string"
                                },
                                "userId": {
                                  "type": "string"
                                },
                                "widgetId": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "_max": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "interactionType": {
                                  "type": "string",
                                  "enum": [
                                    "CALL",
                                    "CHAT",
                                    "EMAIL",
                                    "WEB_USAGE",
                                    "IVR_HUGO_USAGE",
                                    "OUTBOUND_CORRESPONDENCE",
                                    "MARKETING_MATERIAL",
                                    "TEXT"
                                  ]
                                },
                                "content": {
                                  "type": "string"
                                },
                                "timestamp": {
                                  "type": "string"
                                },
                                "userId": {
                                  "type": "string"
                                },
                                "widgetId": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "customerCommunication_aggregateInteraction"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/AggregateSession": {
      "get": {
        "operationId": "CustomerCommunicationAggregateSession",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_aggregateSession": {
                          "type": "object",
                          "properties": {
                            "_count": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer"
                                },
                                "sessionToken": {
                                  "type": "integer"
                                },
                                "userId": {
                                  "type": "integer"
                                },
                                "expires": {
                                  "type": "integer"
                                },
                                "_all": {
                                  "type": "integer"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "sessionToken",
                                "userId",
                                "expires",
                                "_all"
                              ]
                            },
                            "_min": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "sessionToken": {
                                  "type": "string"
                                },
                                "userId": {
                                  "type": "string"
                                },
                                "expires": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "_max": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "sessionToken": {
                                  "type": "string"
                                },
                                "userId": {
                                  "type": "string"
                                },
                                "expires": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "customerCommunication_aggregateSession"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/AggregateUser": {
      "get": {
        "operationId": "CustomerCommunicationAggregateUser",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_aggregateUser": {
                          "type": "object",
                          "properties": {
                            "_count": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer"
                                },
                                "name": {
                                  "type": "integer"
                                },
                                "email": {
                                  "type": "integer"
                                },
                                "emailVerified": {
                                  "type": "integer"
                                },
                                "image": {
                                  "type": "integer"
                                },
                                "createdAt": {
                                  "type": "integer"
                                },
                                "updatedAt": {
                                  "type": "integer"
                                },
                                "userType": {
                                  "type": "integer"
                                },
                                "stripeCustomerId": {
                                  "type": "integer"
                                },
                                "stripeSubscriptionId": {
                                  "type": "integer"
                                },
                                "stripePriceId": {
                                  "type": "integer"
                                },
                                "stripeCurrentPeriodEnd": {
                                  "type": "integer"
                                },
                                "_all": {
                                  "type": "integer"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "name",
                                "email",
                                "emailVerified",
                                "image",
                                "createdAt",
                                "updatedAt",
                                "userType",
                                "stripeCustomerId",
                                "stripeSubscriptionId",
                                "stripePriceId",
                                "stripeCurrentPeriodEnd",
                                "_all"
                              ]
                            },
                            "_min": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "email": {
                                  "type": "string"
                                },
                                "emailVerified": {
                                  "type": "string"
                                },
                                "image": {
                                  "type": "string"
                                },
                                "createdAt": {
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "type": "string"
                                },
                                "userType": {
                                  "type": "string",
                                  "enum": [
                                    "CALL_CENTER_REP",
                                    "CUSTOMER",
                                    "FINANCIAL_REP"
                                  ]
                                },
                                "stripeCustomerId": {
                                  "type": "string"
                                },
                                "stripeSubscriptionId": {
                                  "type": "string"
                                },
                                "stripePriceId": {
                                  "type": "string"
                                },
                                "stripeCurrentPeriodEnd": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "_max": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "email": {
                                  "type": "string"
                                },
                                "emailVerified": {
                                  "type": "string"
                                },
                                "image": {
                                  "type": "string"
                                },
                                "createdAt": {
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "type": "string"
                                },
                                "userType": {
                                  "type": "string",
                                  "enum": [
                                    "CALL_CENTER_REP",
                                    "CUSTOMER",
                                    "FINANCIAL_REP"
                                  ]
                                },
                                "stripeCustomerId": {
                                  "type": "string"
                                },
                                "stripeSubscriptionId": {
                                  "type": "string"
                                },
                                "stripePriceId": {
                                  "type": "string"
                                },
                                "stripeCurrentPeriodEnd": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "customerCommunication_aggregateUser"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/AggregateVerificationToken": {
      "get": {
        "operationId": "CustomerCommunicationAggregateVerificationToken",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_aggregateVerificationToken": {
                          "type": "object",
                          "properties": {
                            "_count": {
                              "type": "object",
                              "properties": {
                                "identifier": {
                                  "type": "integer"
                                },
                                "token": {
                                  "type": "integer"
                                },
                                "expires": {
                                  "type": "integer"
                                },
                                "_all": {
                                  "type": "integer"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "identifier",
                                "token",
                                "expires",
                                "_all"
                              ]
                            },
                            "_min": {
                              "type": "object",
                              "properties": {
                                "identifier": {
                                  "type": "string"
                                },
                                "token": {
                                  "type": "string"
                                },
                                "expires": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "_max": {
                              "type": "object",
                              "properties": {
                                "identifier": {
                                  "type": "string"
                                },
                                "token": {
                                  "type": "string"
                                },
                                "expires": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "customerCommunication_aggregateVerificationToken"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/AggregateWidget": {
      "get": {
        "operationId": "CustomerCommunicationAggregateWidget",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_aggregateWidget": {
                          "type": "object",
                          "properties": {
                            "_count": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer"
                                },
                                "embeddedIn": {
                                  "type": "integer"
                                },
                                "_all": {
                                  "type": "integer"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "embeddedIn",
                                "_all"
                              ]
                            },
                            "_min": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "embeddedIn": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "_max": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "embeddedIn": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "customerCommunication_aggregateWidget"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/CreateManyAccount": {
      "post": {
        "operationId": "CustomerCommunicationCreateManyAccount",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_AccountCreateManyInput"
                    }
                  },
                  "skipDuplicates": {
                    "type": [
                      "boolean",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_createManyAccount": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/CreateManyFilter": {
      "post": {
        "operationId": "CustomerCommunicationCreateManyFilter",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_FilterCreateManyInput"
                    }
                  },
                  "skipDuplicates": {
                    "type": [
                      "boolean",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_createManyFilter": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/CreateManyInteraction": {
      "post": {
        "operationId": "CustomerCommunicationCreateManyInteraction",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_InteractionCreateManyInput"
                    }
                  },
                  "skipDuplicates": {
                    "type": [
                      "boolean",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_createManyInteraction": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/CreateManySession": {
      "post": {
        "operationId": "CustomerCommunicationCreateManySession",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_SessionCreateManyInput"
                    }
                  },
                  "skipDuplicates": {
                    "type": [
                      "boolean",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_createManySession": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/CreateManyUser": {
      "post": {
        "operationId": "CustomerCommunicationCreateManyUser",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_UserCreateManyInput"
                    }
                  },
                  "skipDuplicates": {
                    "type": [
                      "boolean",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_createManyUser": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/CreateManyVerificationToken": {
      "post": {
        "operationId": "CustomerCommunicationCreateManyVerificationToken",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_VerificationTokenCreateManyInput"
                    }
                  },
                  "skipDuplicates": {
                    "type": [
                      "boolean",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_createManyVerificationToken": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/CreateManyWidget": {
      "post": {
        "operationId": "CustomerCommunicationCreateManyWidget",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_WidgetCreateManyInput"
                    }
                  },
                  "skipDuplicates": {
                    "type": [
                      "boolean",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_createManyWidget": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/CreateOneAccount": {
      "post": {
        "operationId": "CustomerCommunicationCreateOneAccount",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/customerCommunication_AccountCreateInput"
                  },
                  "customerCommunication_createOneAccount_user_user_interactions_where": {
                    "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput"
                  },
                  "customerCommunication_createOneAccount_user_user_interactions_orderBy": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_InteractionOrderByWithRelationInput"
                    }
                  },
                  "customerCommunication_createOneAccount_user_user_interactions_cursor": {
                    "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
                  },
                  "customerCommunication_createOneAccount_user_user_interactions_take": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_createOneAccount_user_user_interactions_skip": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_createOneAccount_user_user_interactions_distinct": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
                      "enum": [
                        "id",
                        "interactionType",
                        "content",
                        "timestamp",
                        "userId",
                        "widgetId"
                      ]
                    }
                  },
                  "customerCommunication_createOneAccount_user_user_sessions_where": {
                    "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
                  },
                  "customerCommunication_createOneAccount_user_user_sessions_orderBy": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_SessionOrderByWithRelationInput"
                    }
                  },
                  "customerCommunication_createOneAccount_user_user_sessions_cursor": {
                    "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
                  },
                  "customerCommunication_createOneAccount_user_user_sessions_take": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_createOneAccount_user_user_sessions_skip": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_createOneAccount_user_user_sessions_distinct": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
                      "enum": [
                        "id",
                        "sessionToken",
                        "userId",
                        "expires"
                      ]
                    }
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_createOneAccount": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "provider": {
                              "type": "string"
                            },
                            "providerAccountId": {
                              "type": "string"
                            },
                            "refresh_token": {
                              "type": "string"
                            },
                            "access_token": {
                              "type": "string"
                            },
                            "expires_at": {
                              "type": "integer"
                            },
                            "token_type": {
                              "type": "string"
                            },
                            "scope": {
                              "type": "string"
                            },
                            "id_token": {
                              "type": "string"
                            },
                            "session_state": {
                              "type": "string"
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            },
                            "user": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "email": {
                                  "type": "string"
                                },
                                "emailVerified": {
                                  "type": "string"
                                },
                                "image": {
                                  "type": "string"
                                },
                                "createdAt": {
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "type": "string"
                                },
                                "userType": {
                                  "type": "string",
                                  "enum": [
                                    "CALL_CENTER_REP",
                                    "CUSTOMER",
                                    "FINANCIAL_REP"
                                  ]
                                },
                                "stripeCustomerId": {
                                  "type": "string"
                                },
                                "stripeSubscriptionId": {
                                  "type": "string"
                                },
                                "stripePriceId": {
                                  "type": "string"
                                },
                                "stripeCurrentPeriodEnd": {
                                  "type": "string"
                                },
                                "interactions": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "interactionType": {
                                        "type": "string",
                                        "enum": [
                                          "CALL",
                                          "CHAT",
                                          "EMAIL",
                                          "WEB_USAGE",
                                          "IVR_HUGO_USAGE",
                                          "OUTBOUND_CORRESPONDENCE",
                                          "MARKETING_MATERIAL",
                                          "TEXT"
                                        ]
                                      },
                                      "content": {
                                        "type": "string"
                                      },
                                      "timestamp": {
                                        "type": "string"
                                      },
                                      "userId": {
                                        "type": "string"
                                      },
                                      "widgetId": {
                                        "type": "string"
                                      },
                                      "Widget": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "embeddedIn": {
                                            "type": "string"
                                          },
                                          "_count": {
                                            "type": "object",
                                            "properties": {
                                              "interactions": {
                                                "type": "integer"
                                              }
                                            },
                                            "additionalProperties": false,
                                            "required": [
                                              "interactions"
                                            ]
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "id",
                                          "embeddedIn",
                                          "_count"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "interactionType",
                                      "content",
                                      "timestamp",
                                      "userId"
                                    ]
                                  }
                                },
                                "sessions": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "sessionToken": {
                                        "type": "string"
                                      },
                                      "userId": {
                                        "type": "string"
                                      },
                                      "expires": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "sessionToken",
                                      "userId",
                                      "expires"
                                    ]
                                  }
                                },
                                "_count": {
                                  "type": "object",
                                  "properties": {
                                    "interactions": {
                                      "type": "integer"
                                    },
                                    "accounts": {
                                      "type": "integer"
                                    },
                                    "sessions": {
                                      "type": "integer"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "interactions",
                                    "accounts",
                                    "sessions"
                                  ]
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "createdAt",
                                "updatedAt",
                                "_count"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "userId",
                            "type",
                            "provider",
                            "providerAccountId",
                            "createdAt",
                            "updatedAt",
                            "user"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/CreateOneFilter": {
      "post": {
        "operationId": "CustomerCommunicationCreateOneFilter",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/customerCommunication_FilterCreateInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_createOneFilter": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "audience": {
                              "type": "string",
                              "enum": [
                                "CALL_CENTER",
                                "CLIENT_PORTAL",
                                "GUARDIAN_ONLINE",
                                "GPAC",
                                "SMART_OFFICE",
                                "LIVING_BALANCE_SHEET"
                              ]
                            },
                            "output": {
                              "type": "string",
                              "enum": [
                                "CALLS",
                                "CHATS",
                                "EMAILS",
                                "WEB_USAGE",
                                "IVR_HUGO_USAGE",
                                "OUTBOUND_CORRESPONDENCE",
                                "MARKETING_MATERIALS",
                                "TEXTS"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "audience",
                            "output"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/CreateOneInteraction": {
      "post": {
        "operationId": "CustomerCommunicationCreateOneInteraction",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/customerCommunication_InteractionCreateInput"
                  },
                  "customerCommunication_createOneInteraction_user_user_accounts_where": {
                    "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_2"
                  },
                  "customerCommunication_createOneInteraction_user_user_accounts_orderBy": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_AccountOrderByWithRelationInput"
                    }
                  },
                  "customerCommunication_createOneInteraction_user_user_accounts_cursor": {
                    "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput"
                  },
                  "customerCommunication_createOneInteraction_user_user_accounts_take": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_createOneInteraction_user_user_accounts_skip": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_createOneInteraction_user_user_accounts_distinct": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
                      "enum": [
                        "id",
                        "userId",
                        "type",
                        "provider",
                        "providerAccountId",
                        "refresh_token",
                        "access_token",
                        "expires_at",
                        "token_type",
                        "scope",
                        "id_token",
                        "session_state",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  },
                  "customerCommunication_createOneInteraction_user_user_sessions_where": {
                    "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_2"
                  },
                  "customerCommunication_createOneInteraction_user_user_sessions_orderBy": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_SessionOrderByWithRelationInput_2"
                    }
                  },
                  "customerCommunication_createOneInteraction_user_user_sessions_cursor": {
                    "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
                  },
                  "customerCommunication_createOneInteraction_user_user_sessions_take": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_createOneInteraction_user_user_sessions_skip": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_createOneInteraction_user_user_sessions_distinct": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
                      "enum": [
                        "id",
                        "sessionToken",
                        "userId",
                        "expires"
                      ]
                    }
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_createOneInteraction": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "interactionType": {
                              "type": "string",
                              "enum": [
                                "CALL",
                                "CHAT",
                                "EMAIL",
                                "WEB_USAGE",
                                "IVR_HUGO_USAGE",
                                "OUTBOUND_CORRESPONDENCE",
                                "MARKETING_MATERIAL",
                                "TEXT"
                              ]
                            },
                            "content": {
                              "type": "string"
                            },
                            "timestamp": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            },
                            "widgetId": {
                              "type": "string"
                            },
                            "user": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "email": {
                                  "type": "string"
                                },
                                "emailVerified": {
                                  "type": "string"
                                },
                                "image": {
                                  "type": "string"
                                },
                                "createdAt": {
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "type": "string"
                                },
                                "userType": {
                                  "type": "string",
                                  "enum": [
                                    "CALL_CENTER_REP",
                                    "CUSTOMER",
                                    "FINANCIAL_REP"
                                  ]
                                },
                                "stripeCustomerId": {
                                  "type": "string"
                                },
                                "stripeSubscriptionId": {
                                  "type": "string"
                                },
                                "stripePriceId": {
                                  "type": "string"
                                },
                                "stripeCurrentPeriodEnd": {
                                  "type": "string"
                                },
                                "accounts": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "userId": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      },
                                      "provider": {
                                        "type": "string"
                                      },
                                      "providerAccountId": {
                                        "type": "string"
                                      },
                                      "refresh_token": {
                                        "type": "string"
                                      },
                                      "access_token": {
                                        "type": "string"
                                      },
                                      "expires_at": {
                                        "type": "integer"
                                      },
                                      "token_type": {
                                        "type": "string"
                                      },
                                      "scope": {
                                        "type": "string"
                                      },
                                      "id_token": {
                                        "type": "string"
                                      },
                                      "session_state": {
                                        "type": "string"
                                      },
                                      "createdAt": {
                                        "type": "string"
                                      },
                                      "updatedAt": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "userId",
                                      "type",
                                      "provider",
                                      "providerAccountId",
                                      "createdAt",
                                      "updatedAt"
                                    ]
                                  }
                                },
                                "sessions": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "sessionToken": {
                                        "type": "string"
                                      },
                                      "userId": {
                                        "type": "string"
                                      },
                                      "expires": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "sessionToken",
                                      "userId",
                                      "expires"
                                    ]
                                  }
                                },
                                "_count": {
                                  "type": "object",
                                  "properties": {
                                    "interactions": {
                                      "type": "integer"
                                    },
                                    "accounts": {
                                      "type": "integer"
                                    },
                                    "sessions": {
                                      "type": "integer"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "interactions",
                                    "accounts",
                                    "sessions"
                                  ]
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "createdAt",
                                "updatedAt",
                                "_count"
                              ]
                            },
                            "Widget": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "embeddedIn": {
                                  "type": "string"
                                },
                                "_count": {
                                  "type": "object",
                                  "properties": {
                                    "interactions": {
                                      "type": "integer"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "interactions"
                                  ]
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "embeddedIn",
                                "_count"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "interactionType",
                            "content",
                            "timestamp",
                            "userId",
                            "user"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/CreateOneSession": {
      "post": {
        "operationId": "CustomerCommunicationCreateOneSession",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/customerCommunication_SessionCreateInput"
                  },
                  "customerCommunication_createOneSession_user_user_interactions_where": {
                    "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_3"
                  },
                  "customerCommunication_createOneSession_user_user_interactions_orderBy": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_InteractionOrderByWithRelationInput_2"
                    }
                  },
                  "customerCommunication_createOneSession_user_user_interactions_cursor": {
                    "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
                  },
                  "customerCommunication_createOneSession_user_user_interactions_take": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_createOneSession_user_user_interactions_skip": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_createOneSession_user_user_interactions_distinct": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
                      "enum": [
                        "id",
                        "interactionType",
                        "content",
                        "timestamp",
                        "userId",
                        "widgetId"
                      ]
                    }
                  },
                  "customerCommunication_createOneSession_user_user_accounts_where": {
                    "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_3"
                  },
                  "customerCommunication_createOneSession_user_user_accounts_orderBy": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_AccountOrderByWithRelationInput_2"
                    }
                  },
                  "customerCommunication_createOneSession_user_user_accounts_cursor": {
                    "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_2"
                  },
                  "customerCommunication_createOneSession_user_user_accounts_take": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_createOneSession_user_user_accounts_skip": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_createOneSession_user_user_accounts_distinct": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
                      "enum": [
                        "id",
                        "userId",
                        "type",
                        "provider",
                        "providerAccountId",
                        "refresh_token",
                        "access_token",
                        "expires_at",
                        "token_type",
                        "scope",
                        "id_token",
                        "session_state",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_createOneSession": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "sessionToken": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            },
                            "expires": {
                              "type": "string"
                            },
                            "user": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "email": {
                                  "type": "string"
                                },
                                "emailVerified": {
                                  "type": "string"
                                },
                                "image": {
                                  "type": "string"
                                },
                                "createdAt": {
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "type": "string"
                                },
                                "userType": {
                                  "type": "string",
                                  "enum": [
                                    "CALL_CENTER_REP",
                                    "CUSTOMER",
                                    "FINANCIAL_REP"
                                  ]
                                },
                                "stripeCustomerId": {
                                  "type": "string"
                                },
                                "stripeSubscriptionId": {
                                  "type": "string"
                                },
                                "stripePriceId": {
                                  "type": "string"
                                },
                                "stripeCurrentPeriodEnd": {
                                  "type": "string"
                                },
                                "interactions": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "interactionType": {
                                        "type": "string",
                                        "enum": [
                                          "CALL",
                                          "CHAT",
                                          "EMAIL",
                                          "WEB_USAGE",
                                          "IVR_HUGO_USAGE",
                                          "OUTBOUND_CORRESPONDENCE",
                                          "MARKETING_MATERIAL",
                                          "TEXT"
                                        ]
                                      },
                                      "content": {
                                        "type": "string"
                                      },
                                      "timestamp": {
                                        "type": "string"
                                      },
                                      "userId": {
                                        "type": "string"
                                      },
                                      "widgetId": {
                                        "type": "string"
                                      },
                                      "Widget": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "embeddedIn": {
                                            "type": "string"
                                          },
                                          "_count": {
                                            "type": "object",
                                            "properties": {
                                              "interactions": {
                                                "type": "integer"
                                              }
                                            },
                                            "additionalProperties": false,
                                            "required": [
                                              "interactions"
                                            ]
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "id",
                                          "embeddedIn",
                                          "_count"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "interactionType",
                                      "content",
                                      "timestamp",
                                      "userId"
                                    ]
                                  }
                                },
                                "accounts": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "userId": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      },
                                      "provider": {
                                        "type": "string"
                                      },
                                      "providerAccountId": {
                                        "type": "string"
                                      },
                                      "refresh_token": {
                                        "type": "string"
                                      },
                                      "access_token": {
                                        "type": "string"
                                      },
                                      "expires_at": {
                                        "type": "integer"
                                      },
                                      "token_type": {
                                        "type": "string"
                                      },
                                      "scope": {
                                        "type": "string"
                                      },
                                      "id_token": {
                                        "type": "string"
                                      },
                                      "session_state": {
                                        "type": "string"
                                      },
                                      "createdAt": {
                                        "type": "string"
                                      },
                                      "updatedAt": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "userId",
                                      "type",
                                      "provider",
                                      "providerAccountId",
                                      "createdAt",
                                      "updatedAt"
                                    ]
                                  }
                                },
                                "_count": {
                                  "type": "object",
                                  "properties": {
                                    "interactions": {
                                      "type": "integer"
                                    },
                                    "accounts": {
                                      "type": "integer"
                                    },
                                    "sessions": {
                                      "type": "integer"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "interactions",
                                    "accounts",
                                    "sessions"
                                  ]
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "createdAt",
                                "updatedAt",
                                "_count"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "sessionToken",
                            "userId",
                            "expires",
                            "user"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/CreateOneUser": {
      "post": {
        "operationId": "CustomerCommunicationCreateOneUser",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/customerCommunication_UserCreateInput"
                  },
                  "customerCommunication_createOneUser_interactions_where": {
                    "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_4"
                  },
                  "customerCommunication_createOneUser_interactions_orderBy": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_InteractionOrderByWithRelationInput_3"
                    }
                  },
                  "customerCommunication_createOneUser_interactions_cursor": {
                    "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
                  },
                  "customerCommunication_createOneUser_interactions_take": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_createOneUser_interactions_skip": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_createOneUser_interactions_distinct": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
                      "enum": [
                        "id",
                        "interactionType",
                        "content",
                        "timestamp",
                        "userId",
                        "widgetId"
                      ]
                    }
                  },
                  "customerCommunication_createOneUser_accounts_where": {
                    "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_4"
                  },
                  "customerCommunication_createOneUser_accounts_orderBy": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_AccountOrderByWithRelationInput_3"
                    }
                  },
                  "customerCommunication_createOneUser_accounts_cursor": {
                    "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_3"
                  },
                  "customerCommunication_createOneUser_accounts_take": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_createOneUser_accounts_skip": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_createOneUser_accounts_distinct": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
                      "enum": [
                        "id",
                        "userId",
                        "type",
                        "provider",
                        "providerAccountId",
                        "refresh_token",
                        "access_token",
                        "expires_at",
                        "token_type",
                        "scope",
                        "id_token",
                        "session_state",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  },
                  "customerCommunication_createOneUser_sessions_where": {
                    "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_4"
                  },
                  "customerCommunication_createOneUser_sessions_orderBy": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_SessionOrderByWithRelationInput_3"
                    }
                  },
                  "customerCommunication_createOneUser_sessions_cursor": {
                    "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
                  },
                  "customerCommunication_createOneUser_sessions_take": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_createOneUser_sessions_skip": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_createOneUser_sessions_distinct": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
                      "enum": [
                        "id",
                        "sessionToken",
                        "userId",
                        "expires"
                      ]
                    }
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_createOneUser": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            },
                            "emailVerified": {
                              "type": "string"
                            },
                            "image": {
                              "type": "string"
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            },
                            "userType": {
                              "type": "string",
                              "enum": [
                                "CALL_CENTER_REP",
                                "CUSTOMER",
                                "FINANCIAL_REP"
                              ]
                            },
                            "stripeCustomerId": {
                              "type": "string"
                            },
                            "stripeSubscriptionId": {
                              "type": "string"
                            },
                            "stripePriceId": {
                              "type": "string"
                            },
                            "stripeCurrentPeriodEnd": {
                              "type": "string"
                            },
                            "interactions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "interactionType": {
                                    "type": "string",
                                    "enum": [
                                      "CALL",
                                      "CHAT",
                                      "EMAIL",
                                      "WEB_USAGE",
                                      "IVR_HUGO_USAGE",
                                      "OUTBOUND_CORRESPONDENCE",
                                      "MARKETING_MATERIAL",
                                      "TEXT"
                                    ]
                                  },
                                  "content": {
                                    "type": "string"
                                  },
                                  "timestamp": {
                                    "type": "string"
                                  },
                                  "userId": {
                                    "type": "string"
                                  },
                                  "widgetId": {
                                    "type": "string"
                                  },
                                  "Widget": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "embeddedIn": {
                                        "type": "string"
                                      },
                                      "_count": {
                                        "type": "object",
                                        "properties": {
                                          "interactions": {
                                            "type": "integer"
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "interactions"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "embeddedIn",
                                      "_count"
                                    ]
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "interactionType",
                                  "content",
                                  "timestamp",
                                  "userId"
                                ]
                              }
                            },
                            "accounts": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "userId": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  },
                                  "provider": {
                                    "type": "string"
                                  },
                                  "providerAccountId": {
                                    "type": "string"
                                  },
                                  "refresh_token": {
                                    "type": "string"
                                  },
                                  "access_token": {
                                    "type": "string"
                                  },
                                  "expires_at": {
                                    "type": "integer"
                                  },
                                  "token_type": {
                                    "type": "string"
                                  },
                                  "scope": {
                                    "type": "string"
                                  },
                                  "id_token": {
                                    "type": "string"
                                  },
                                  "session_state": {
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "userId",
                                  "type",
                                  "provider",
                                  "providerAccountId",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              }
                            },
                            "sessions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "sessionToken": {
                                    "type": "string"
                                  },
                                  "userId": {
                                    "type": "string"
                                  },
                                  "expires": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "sessionToken",
                                  "userId",
                                  "expires"
                                ]
                              }
                            },
                            "_count": {
                              "type": "object",
                              "properties": {
                                "interactions": {
                                  "type": "integer"
                                },
                                "accounts": {
                                  "type": "integer"
                                },
                                "sessions": {
                                  "type": "integer"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "interactions",
                                "accounts",
                                "sessions"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "createdAt",
                            "updatedAt",
                            "_count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/CreateOneVerificationToken": {
      "post": {
        "operationId": "CustomerCommunicationCreateOneVerificationToken",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/customerCommunication_VerificationTokenCreateInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_createOneVerificationToken": {
                          "type": "object",
                          "properties": {
                            "identifier": {
                              "type": "string"
                            },
                            "token": {
                              "type": "string"
                            },
                            "expires": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "identifier",
                            "token",
                            "expires"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/CreateOneWidget": {
      "post": {
        "operationId": "CustomerCommunicationCreateOneWidget",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/customerCommunication_WidgetCreateInput"
                  },
                  "customerCommunication_createOneWidget_interactions_where": {
                    "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_5"
                  },
                  "customerCommunication_createOneWidget_interactions_orderBy": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_InteractionOrderByWithRelationInput_4"
                    }
                  },
                  "customerCommunication_createOneWidget_interactions_cursor": {
                    "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
                  },
                  "customerCommunication_createOneWidget_interactions_take": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_createOneWidget_interactions_skip": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_createOneWidget_interactions_distinct": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
                      "enum": [
                        "id",
                        "interactionType",
                        "content",
                        "timestamp",
                        "userId",
                        "widgetId"
                      ]
                    }
                  },
                  "customerCommunication_createOneWidget_interactions_interactions_user_user_accounts_where": {
                    "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_5"
                  },
                  "customerCommunication_createOneWidget_interactions_interactions_user_user_accounts_orderBy": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_AccountOrderByWithRelationInput_4"
                    }
                  },
                  "customerCommunication_createOneWidget_interactions_interactions_user_user_accounts_cursor": {
                    "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_4"
                  },
                  "customerCommunication_createOneWidget_interactions_interactions_user_user_accounts_take": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_createOneWidget_interactions_interactions_user_user_accounts_skip": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_createOneWidget_interactions_interactions_user_user_accounts_distinct": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
                      "enum": [
                        "id",
                        "userId",
                        "type",
                        "provider",
                        "providerAccountId",
                        "refresh_token",
                        "access_token",
                        "expires_at",
                        "token_type",
                        "scope",
                        "id_token",
                        "session_state",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  },
                  "customerCommunication_createOneWidget_interactions_interactions_user_user_sessions_where": {
                    "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_5"
                  },
                  "customerCommunication_createOneWidget_interactions_interactions_user_user_sessions_orderBy": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_SessionOrderByWithRelationInput_4"
                    }
                  },
                  "customerCommunication_createOneWidget_interactions_interactions_user_user_sessions_cursor": {
                    "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
                  },
                  "customerCommunication_createOneWidget_interactions_interactions_user_user_sessions_take": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_createOneWidget_interactions_interactions_user_user_sessions_skip": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_createOneWidget_interactions_interactions_user_user_sessions_distinct": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
                      "enum": [
                        "id",
                        "sessionToken",
                        "userId",
                        "expires"
                      ]
                    }
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_createOneWidget": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "embeddedIn": {
                              "type": "string"
                            },
                            "interactions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "interactionType": {
                                    "type": "string",
                                    "enum": [
                                      "CALL",
                                      "CHAT",
                                      "EMAIL",
                                      "WEB_USAGE",
                                      "IVR_HUGO_USAGE",
                                      "OUTBOUND_CORRESPONDENCE",
                                      "MARKETING_MATERIAL",
                                      "TEXT"
                                    ]
                                  },
                                  "content": {
                                    "type": "string"
                                  },
                                  "timestamp": {
                                    "type": "string"
                                  },
                                  "userId": {
                                    "type": "string"
                                  },
                                  "widgetId": {
                                    "type": "string"
                                  },
                                  "user": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "email": {
                                        "type": "string"
                                      },
                                      "emailVerified": {
                                        "type": "string"
                                      },
                                      "image": {
                                        "type": "string"
                                      },
                                      "createdAt": {
                                        "type": "string"
                                      },
                                      "updatedAt": {
                                        "type": "string"
                                      },
                                      "userType": {
                                        "type": "string",
                                        "enum": [
                                          "CALL_CENTER_REP",
                                          "CUSTOMER",
                                          "FINANCIAL_REP"
                                        ]
                                      },
                                      "stripeCustomerId": {
                                        "type": "string"
                                      },
                                      "stripeSubscriptionId": {
                                        "type": "string"
                                      },
                                      "stripePriceId": {
                                        "type": "string"
                                      },
                                      "stripeCurrentPeriodEnd": {
                                        "type": "string"
                                      },
                                      "accounts": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "userId": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string"
                                            },
                                            "provider": {
                                              "type": "string"
                                            },
                                            "providerAccountId": {
                                              "type": "string"
                                            },
                                            "refresh_token": {
                                              "type": "string"
                                            },
                                            "access_token": {
                                              "type": "string"
                                            },
                                            "expires_at": {
                                              "type": "integer"
                                            },
                                            "token_type": {
                                              "type": "string"
                                            },
                                            "scope": {
                                              "type": "string"
                                            },
                                            "id_token": {
                                              "type": "string"
                                            },
                                            "session_state": {
                                              "type": "string"
                                            },
                                            "createdAt": {
                                              "type": "string"
                                            },
                                            "updatedAt": {
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false,
                                          "required": [
                                            "id",
                                            "userId",
                                            "type",
                                            "provider",
                                            "providerAccountId",
                                            "createdAt",
                                            "updatedAt"
                                          ]
                                        }
                                      },
                                      "sessions": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "sessionToken": {
                                              "type": "string"
                                            },
                                            "userId": {
                                              "type": "string"
                                            },
                                            "expires": {
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false,
                                          "required": [
                                            "id",
                                            "sessionToken",
                                            "userId",
                                            "expires"
                                          ]
                                        }
                                      },
                                      "_count": {
                                        "type": "object",
                                        "properties": {
                                          "interactions": {
                                            "type": "integer"
                                          },
                                          "accounts": {
                                            "type": "integer"
                                          },
                                          "sessions": {
                                            "type": "integer"
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "interactions",
                                          "accounts",
                                          "sessions"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "createdAt",
                                      "updatedAt",
                                      "_count"
                                    ]
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "interactionType",
                                  "content",
                                  "timestamp",
                                  "userId",
                                  "user"
                                ]
                              }
                            },
                            "_count": {
                              "type": "object",
                              "properties": {
                                "interactions": {
                                  "type": "integer"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "interactions"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "embeddedIn",
                            "_count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/DeleteManyAccount": {
      "post": {
        "operationId": "CustomerCommunicationDeleteManyAccount",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_6"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_deleteManyAccount": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/DeleteManyFilter": {
      "post": {
        "operationId": "CustomerCommunicationDeleteManyFilter",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/customerCommunication_FilterWhereInput"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_deleteManyFilter": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/DeleteManyInteraction": {
      "post": {
        "operationId": "CustomerCommunicationDeleteManyInteraction",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_7"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_deleteManyInteraction": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/DeleteManySession": {
      "post": {
        "operationId": "CustomerCommunicationDeleteManySession",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_8"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_deleteManySession": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/DeleteManyUser": {
      "post": {
        "operationId": "CustomerCommunicationDeleteManyUser",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/customerCommunication_UserWhereInput_9"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_deleteManyUser": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/DeleteManyVerificationToken": {
      "post": {
        "operationId": "CustomerCommunicationDeleteManyVerificationToken",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/customerCommunication_VerificationTokenWhereInput"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_deleteManyVerificationToken": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/DeleteManyWidget": {
      "post": {
        "operationId": "CustomerCommunicationDeleteManyWidget",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_10"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_deleteManyWidget": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/DeleteOneAccount": {
      "post": {
        "operationId": "CustomerCommunicationDeleteOneAccount",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_5"
                  },
                  "customerCommunication_deleteOneAccount_user_user_interactions_where": {
                    "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_11"
                  },
                  "customerCommunication_deleteOneAccount_user_user_interactions_orderBy": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_InteractionOrderByWithRelationInput_5"
                    }
                  },
                  "customerCommunication_deleteOneAccount_user_user_interactions_cursor": {
                    "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput_2"
                  },
                  "customerCommunication_deleteOneAccount_user_user_interactions_take": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_deleteOneAccount_user_user_interactions_skip": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_deleteOneAccount_user_user_interactions_distinct": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
                      "enum": [
                        "id",
                        "interactionType",
                        "content",
                        "timestamp",
                        "userId",
                        "widgetId"
                      ]
                    }
                  },
                  "customerCommunication_deleteOneAccount_user_user_sessions_where": {
                    "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_11"
                  },
                  "customerCommunication_deleteOneAccount_user_user_sessions_orderBy": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_SessionOrderByWithRelationInput_5"
                    }
                  },
                  "customerCommunication_deleteOneAccount_user_user_sessions_cursor": {
                    "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput_2"
                  },
                  "customerCommunication_deleteOneAccount_user_user_sessions_take": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_deleteOneAccount_user_user_sessions_skip": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_deleteOneAccount_user_user_sessions_distinct": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
                      "enum": [
                        "id",
                        "sessionToken",
                        "userId",
                        "expires"
                      ]
                    }
                  }
                },
                "additionalProperties": false,
                "required": [
                  "where"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_deleteOneAccount": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "provider": {
                              "type": "string"
                            },
                            "providerAccountId": {
                              "type": "string"
                            },
                            "refresh_token": {
                              "type": "string"
                            },
                            "access_token": {
                              "type": "string"
                            },
                            "expires_at": {
                              "type": "integer"
                            },
                            "token_type": {
                              "type": "string"
                            },
                            "scope": {
                              "type": "string"
                            },
                            "id_token": {
                              "type": "string"
                            },
                            "session_state": {
                              "type": "string"
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            },
                            "user": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "email": {
                                  "type": "string"
                                },
                                "emailVerified": {
                                  "type": "string"
                                },
                                "image": {
                                  "type": "string"
                                },
                                "createdAt": {
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "type": "string"
                                },
                                "userType": {
                                  "type": "string",
                                  "enum": [
                                    "CALL_CENTER_REP",
                                    "CUSTOMER",
                                    "FINANCIAL_REP"
                                  ]
                                },
                                "stripeCustomerId": {
                                  "type": "string"
                                },
                                "stripeSubscriptionId": {
                                  "type": "string"
                                },
                                "stripePriceId": {
                                  "type": "string"
                                },
                                "stripeCurrentPeriodEnd": {
                                  "type": "string"
                                },
                                "interactions": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "interactionType": {
                                        "type": "string",
                                        "enum": [
                                          "CALL",
                                          "CHAT",
                                          "EMAIL",
                                          "WEB_USAGE",
                                          "IVR_HUGO_USAGE",
                                          "OUTBOUND_CORRESPONDENCE",
                                          "MARKETING_MATERIAL",
                                          "TEXT"
                                        ]
                                      },
                                      "content": {
                                        "type": "string"
                                      },
                                      "timestamp": {
                                        "type": "string"
                                      },
                                      "userId": {
                                        "type": "string"
                                      },
                                      "widgetId": {
                                        "type": "string"
                                      },
                                      "Widget": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "embeddedIn": {
                                            "type": "string"
                                          },
                                          "_count": {
                                            "type": "object",
                                            "properties": {
                                              "interactions": {
                                                "type": "integer"
                                              }
                                            },
                                            "additionalProperties": false,
                                            "required": [
                                              "interactions"
                                            ]
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "id",
                                          "embeddedIn",
                                          "_count"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "interactionType",
                                      "content",
                                      "timestamp",
                                      "userId"
                                    ]
                                  }
                                },
                                "sessions": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "sessionToken": {
                                        "type": "string"
                                      },
                                      "userId": {
                                        "type": "string"
                                      },
                                      "expires": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "sessionToken",
                                      "userId",
                                      "expires"
                                    ]
                                  }
                                },
                                "_count": {
                                  "type": "object",
                                  "properties": {
                                    "interactions": {
                                      "type": "integer"
                                    },
                                    "accounts": {
                                      "type": "integer"
                                    },
                                    "sessions": {
                                      "type": "integer"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "interactions",
                                    "accounts",
                                    "sessions"
                                  ]
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "createdAt",
                                "updatedAt",
                                "_count"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "userId",
                            "type",
                            "provider",
                            "providerAccountId",
                            "createdAt",
                            "updatedAt",
                            "user"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/DeleteOneFilter": {
      "post": {
        "operationId": "CustomerCommunicationDeleteOneFilter",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/customerCommunication_FilterWhereUniqueInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "where"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_deleteOneFilter": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "audience": {
                              "type": "string",
                              "enum": [
                                "CALL_CENTER",
                                "CLIENT_PORTAL",
                                "GUARDIAN_ONLINE",
                                "GPAC",
                                "SMART_OFFICE",
                                "LIVING_BALANCE_SHEET"
                              ]
                            },
                            "output": {
                              "type": "string",
                              "enum": [
                                "CALLS",
                                "CHATS",
                                "EMAILS",
                                "WEB_USAGE",
                                "IVR_HUGO_USAGE",
                                "OUTBOUND_CORRESPONDENCE",
                                "MARKETING_MATERIALS",
                                "TEXTS"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "audience",
                            "output"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/DeleteOneInteraction": {
      "post": {
        "operationId": "CustomerCommunicationDeleteOneInteraction",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
                  },
                  "customerCommunication_deleteOneInteraction_user_user_accounts_where": {
                    "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_12"
                  },
                  "customerCommunication_deleteOneInteraction_user_user_accounts_orderBy": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_AccountOrderByWithRelationInput_5"
                    }
                  },
                  "customerCommunication_deleteOneInteraction_user_user_accounts_cursor": {
                    "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_6"
                  },
                  "customerCommunication_deleteOneInteraction_user_user_accounts_take": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_deleteOneInteraction_user_user_accounts_skip": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_deleteOneInteraction_user_user_accounts_distinct": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
                      "enum": [
                        "id",
                        "userId",
                        "type",
                        "provider",
                        "providerAccountId",
                        "refresh_token",
                        "access_token",
                        "expires_at",
                        "token_type",
                        "scope",
                        "id_token",
                        "session_state",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  },
                  "customerCommunication_deleteOneInteraction_user_user_sessions_where": {
                    "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_12"
                  },
                  "customerCommunication_deleteOneInteraction_user_user_sessions_orderBy": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_SessionOrderByWithRelationInput_6"
                    }
                  },
                  "customerCommunication_deleteOneInteraction_user_user_sessions_cursor": {
                    "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput_2"
                  },
                  "customerCommunication_deleteOneInteraction_user_user_sessions_take": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_deleteOneInteraction_user_user_sessions_skip": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_deleteOneInteraction_user_user_sessions_distinct": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
                      "enum": [
                        "id",
                        "sessionToken",
                        "userId",
                        "expires"
                      ]
                    }
                  }
                },
                "additionalProperties": false,
                "required": [
                  "where"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_deleteOneInteraction": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "interactionType": {
                              "type": "string",
                              "enum": [
                                "CALL",
                                "CHAT",
                                "EMAIL",
                                "WEB_USAGE",
                                "IVR_HUGO_USAGE",
                                "OUTBOUND_CORRESPONDENCE",
                                "MARKETING_MATERIAL",
                                "TEXT"
                              ]
                            },
                            "content": {
                              "type": "string"
                            },
                            "timestamp": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            },
                            "widgetId": {
                              "type": "string"
                            },
                            "user": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "email": {
                                  "type": "string"
                                },
                                "emailVerified": {
                                  "type": "string"
                                },
                                "image": {
                                  "type": "string"
                                },
                                "createdAt": {
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "type": "string"
                                },
                                "userType": {
                                  "type": "string",
                                  "enum": [
                                    "CALL_CENTER_REP",
                                    "CUSTOMER",
                                    "FINANCIAL_REP"
                                  ]
                                },
                                "stripeCustomerId": {
                                  "type": "string"
                                },
                                "stripeSubscriptionId": {
                                  "type": "string"
                                },
                                "stripePriceId": {
                                  "type": "string"
                                },
                                "stripeCurrentPeriodEnd": {
                                  "type": "string"
                                },
                                "accounts": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "userId": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      },
                                      "provider": {
                                        "type": "string"
                                      },
                                      "providerAccountId": {
                                        "type": "string"
                                      },
                                      "refresh_token": {
                                        "type": "string"
                                      },
                                      "access_token": {
                                        "type": "string"
                                      },
                                      "expires_at": {
                                        "type": "integer"
                                      },
                                      "token_type": {
                                        "type": "string"
                                      },
                                      "scope": {
                                        "type": "string"
                                      },
                                      "id_token": {
                                        "type": "string"
                                      },
                                      "session_state": {
                                        "type": "string"
                                      },
                                      "createdAt": {
                                        "type": "string"
                                      },
                                      "updatedAt": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "userId",
                                      "type",
                                      "provider",
                                      "providerAccountId",
                                      "createdAt",
                                      "updatedAt"
                                    ]
                                  }
                                },
                                "sessions": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "sessionToken": {
                                        "type": "string"
                                      },
                                      "userId": {
                                        "type": "string"
                                      },
                                      "expires": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "sessionToken",
                                      "userId",
                                      "expires"
                                    ]
                                  }
                                },
                                "_count": {
                                  "type": "object",
                                  "properties": {
                                    "interactions": {
                                      "type": "integer"
                                    },
                                    "accounts": {
                                      "type": "integer"
                                    },
                                    "sessions": {
                                      "type": "integer"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "interactions",
                                    "accounts",
                                    "sessions"
                                  ]
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "createdAt",
                                "updatedAt",
                                "_count"
                              ]
                            },
                            "Widget": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "embeddedIn": {
                                  "type": "string"
                                },
                                "_count": {
                                  "type": "object",
                                  "properties": {
                                    "interactions": {
                                      "type": "integer"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "interactions"
                                  ]
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "embeddedIn",
                                "_count"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "interactionType",
                            "content",
                            "timestamp",
                            "userId",
                            "user"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/DeleteOneSession": {
      "post": {
        "operationId": "CustomerCommunicationDeleteOneSession",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
                  },
                  "customerCommunication_deleteOneSession_user_user_interactions_where": {
                    "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_13"
                  },
                  "customerCommunication_deleteOneSession_user_user_interactions_orderBy": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_InteractionOrderByWithRelationInput_6"
                    }
                  },
                  "customerCommunication_deleteOneSession_user_user_interactions_cursor": {
                    "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput_2"
                  },
                  "customerCommunication_deleteOneSession_user_user_interactions_take": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_deleteOneSession_user_user_interactions_skip": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_deleteOneSession_user_user_interactions_distinct": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
                      "enum": [
                        "id",
                        "interactionType",
                        "content",
                        "timestamp",
                        "userId",
                        "widgetId"
                      ]
                    }
                  },
                  "customerCommunication_deleteOneSession_user_user_accounts_where": {
                    "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_13"
                  },
                  "customerCommunication_deleteOneSession_user_user_accounts_orderBy": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_AccountOrderByWithRelationInput_6"
                    }
                  },
                  "customerCommunication_deleteOneSession_user_user_accounts_cursor": {
                    "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_7"
                  },
                  "customerCommunication_deleteOneSession_user_user_accounts_take": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_deleteOneSession_user_user_accounts_skip": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_deleteOneSession_user_user_accounts_distinct": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
                      "enum": [
                        "id",
                        "userId",
                        "type",
                        "provider",
                        "providerAccountId",
                        "refresh_token",
                        "access_token",
                        "expires_at",
                        "token_type",
                        "scope",
                        "id_token",
                        "session_state",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  }
                },
                "additionalProperties": false,
                "required": [
                  "where"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_deleteOneSession": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "sessionToken": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            },
                            "expires": {
                              "type": "string"
                            },
                            "user": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "email": {
                                  "type": "string"
                                },
                                "emailVerified": {
                                  "type": "string"
                                },
                                "image": {
                                  "type": "string"
                                },
                                "createdAt": {
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "type": "string"
                                },
                                "userType": {
                                  "type": "string",
                                  "enum": [
                                    "CALL_CENTER_REP",
                                    "CUSTOMER",
                                    "FINANCIAL_REP"
                                  ]
                                },
                                "stripeCustomerId": {
                                  "type": "string"
                                },
                                "stripeSubscriptionId": {
                                  "type": "string"
                                },
                                "stripePriceId": {
                                  "type": "string"
                                },
                                "stripeCurrentPeriodEnd": {
                                  "type": "string"
                                },
                                "interactions": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "interactionType": {
                                        "type": "string",
                                        "enum": [
                                          "CALL",
                                          "CHAT",
                                          "EMAIL",
                                          "WEB_USAGE",
                                          "IVR_HUGO_USAGE",
                                          "OUTBOUND_CORRESPONDENCE",
                                          "MARKETING_MATERIAL",
                                          "TEXT"
                                        ]
                                      },
                                      "content": {
                                        "type": "string"
                                      },
                                      "timestamp": {
                                        "type": "string"
                                      },
                                      "userId": {
                                        "type": "string"
                                      },
                                      "widgetId": {
                                        "type": "string"
                                      },
                                      "Widget": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "embeddedIn": {
                                            "type": "string"
                                          },
                                          "_count": {
                                            "type": "object",
                                            "properties": {
                                              "interactions": {
                                                "type": "integer"
                                              }
                                            },
                                            "additionalProperties": false,
                                            "required": [
                                              "interactions"
                                            ]
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "id",
                                          "embeddedIn",
                                          "_count"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "interactionType",
                                      "content",
                                      "timestamp",
                                      "userId"
                                    ]
                                  }
                                },
                                "accounts": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "userId": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      },
                                      "provider": {
                                        "type": "string"
                                      },
                                      "providerAccountId": {
                                        "type": "string"
                                      },
                                      "refresh_token": {
                                        "type": "string"
                                      },
                                      "access_token": {
                                        "type": "string"
                                      },
                                      "expires_at": {
                                        "type": "integer"
                                      },
                                      "token_type": {
                                        "type": "string"
                                      },
                                      "scope": {
                                        "type": "string"
                                      },
                                      "id_token": {
                                        "type": "string"
                                      },
                                      "session_state": {
                                        "type": "string"
                                      },
                                      "createdAt": {
                                        "type": "string"
                                      },
                                      "updatedAt": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "userId",
                                      "type",
                                      "provider",
                                      "providerAccountId",
                                      "createdAt",
                                      "updatedAt"
                                    ]
                                  }
                                },
                                "_count": {
                                  "type": "object",
                                  "properties": {
                                    "interactions": {
                                      "type": "integer"
                                    },
                                    "accounts": {
                                      "type": "integer"
                                    },
                                    "sessions": {
                                      "type": "integer"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "interactions",
                                    "accounts",
                                    "sessions"
                                  ]
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "createdAt",
                                "updatedAt",
                                "_count"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "sessionToken",
                            "userId",
                            "expires",
                            "user"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/DeleteOneUser": {
      "post": {
        "operationId": "CustomerCommunicationDeleteOneUser",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/customerCommunication_UserWhereUniqueInput"
                  },
                  "customerCommunication_deleteOneUser_interactions_where": {
                    "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_14"
                  },
                  "customerCommunication_deleteOneUser_interactions_orderBy": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_InteractionOrderByWithRelationInput_7"
                    }
                  },
                  "customerCommunication_deleteOneUser_interactions_cursor": {
                    "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput_2"
                  },
                  "customerCommunication_deleteOneUser_interactions_take": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_deleteOneUser_interactions_skip": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_deleteOneUser_interactions_distinct": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
                      "enum": [
                        "id",
                        "interactionType",
                        "content",
                        "timestamp",
                        "userId",
                        "widgetId"
                      ]
                    }
                  },
                  "customerCommunication_deleteOneUser_accounts_where": {
                    "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_14"
                  },
                  "customerCommunication_deleteOneUser_accounts_orderBy": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_AccountOrderByWithRelationInput_7"
                    }
                  },
                  "customerCommunication_deleteOneUser_accounts_cursor": {
                    "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_8"
                  },
                  "customerCommunication_deleteOneUser_accounts_take": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_deleteOneUser_accounts_skip": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_deleteOneUser_accounts_distinct": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
                      "enum": [
                        "id",
                        "userId",
                        "type",
                        "provider",
                        "providerAccountId",
                        "refresh_token",
                        "access_token",
                        "expires_at",
                        "token_type",
                        "scope",
                        "id_token",
                        "session_state",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  },
                  "customerCommunication_deleteOneUser_sessions_where": {
                    "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_14"
                  },
                  "customerCommunication_deleteOneUser_sessions_orderBy": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_SessionOrderByWithRelationInput_7"
                    }
                  },
                  "customerCommunication_deleteOneUser_sessions_cursor": {
                    "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput_2"
                  },
                  "customerCommunication_deleteOneUser_sessions_take": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_deleteOneUser_sessions_skip": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_deleteOneUser_sessions_distinct": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
                      "enum": [
                        "id",
                        "sessionToken",
                        "userId",
                        "expires"
                      ]
                    }
                  }
                },
                "additionalProperties": false,
                "required": [
                  "where"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_deleteOneUser": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            },
                            "emailVerified": {
                              "type": "string"
                            },
                            "image": {
                              "type": "string"
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            },
                            "userType": {
                              "type": "string",
                              "enum": [
                                "CALL_CENTER_REP",
                                "CUSTOMER",
                                "FINANCIAL_REP"
                              ]
                            },
                            "stripeCustomerId": {
                              "type": "string"
                            },
                            "stripeSubscriptionId": {
                              "type": "string"
                            },
                            "stripePriceId": {
                              "type": "string"
                            },
                            "stripeCurrentPeriodEnd": {
                              "type": "string"
                            },
                            "interactions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "interactionType": {
                                    "type": "string",
                                    "enum": [
                                      "CALL",
                                      "CHAT",
                                      "EMAIL",
                                      "WEB_USAGE",
                                      "IVR_HUGO_USAGE",
                                      "OUTBOUND_CORRESPONDENCE",
                                      "MARKETING_MATERIAL",
                                      "TEXT"
                                    ]
                                  },
                                  "content": {
                                    "type": "string"
                                  },
                                  "timestamp": {
                                    "type": "string"
                                  },
                                  "userId": {
                                    "type": "string"
                                  },
                                  "widgetId": {
                                    "type": "string"
                                  },
                                  "Widget": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "embeddedIn": {
                                        "type": "string"
                                      },
                                      "_count": {
                                        "type": "object",
                                        "properties": {
                                          "interactions": {
                                            "type": "integer"
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "interactions"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "embeddedIn",
                                      "_count"
                                    ]
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "interactionType",
                                  "content",
                                  "timestamp",
                                  "userId"
                                ]
                              }
                            },
                            "accounts": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "userId": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  },
                                  "provider": {
                                    "type": "string"
                                  },
                                  "providerAccountId": {
                                    "type": "string"
                                  },
                                  "refresh_token": {
                                    "type": "string"
                                  },
                                  "access_token": {
                                    "type": "string"
                                  },
                                  "expires_at": {
                                    "type": "integer"
                                  },
                                  "token_type": {
                                    "type": "string"
                                  },
                                  "scope": {
                                    "type": "string"
                                  },
                                  "id_token": {
                                    "type": "string"
                                  },
                                  "session_state": {
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "userId",
                                  "type",
                                  "provider",
                                  "providerAccountId",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              }
                            },
                            "sessions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "sessionToken": {
                                    "type": "string"
                                  },
                                  "userId": {
                                    "type": "string"
                                  },
                                  "expires": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "sessionToken",
                                  "userId",
                                  "expires"
                                ]
                              }
                            },
                            "_count": {
                              "type": "object",
                              "properties": {
                                "interactions": {
                                  "type": "integer"
                                },
                                "accounts": {
                                  "type": "integer"
                                },
                                "sessions": {
                                  "type": "integer"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "interactions",
                                "accounts",
                                "sessions"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "createdAt",
                            "updatedAt",
                            "_count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/DeleteOneVerificationToken": {
      "post": {
        "operationId": "CustomerCommunicationDeleteOneVerificationToken",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/customerCommunication_VerificationTokenWhereUniqueInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "where"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_deleteOneVerificationToken": {
                          "type": "object",
                          "properties": {
                            "identifier": {
                              "type": "string"
                            },
                            "token": {
                              "type": "string"
                            },
                            "expires": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "identifier",
                            "token",
                            "expires"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/DeleteOneWidget": {
      "post": {
        "operationId": "CustomerCommunicationDeleteOneWidget",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/customerCommunication_WidgetWhereUniqueInput"
                  },
                  "customerCommunication_deleteOneWidget_interactions_where": {
                    "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_15"
                  },
                  "customerCommunication_deleteOneWidget_interactions_orderBy": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_InteractionOrderByWithRelationInput_8"
                    }
                  },
                  "customerCommunication_deleteOneWidget_interactions_cursor": {
                    "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput_2"
                  },
                  "customerCommunication_deleteOneWidget_interactions_take": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_deleteOneWidget_interactions_skip": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_deleteOneWidget_interactions_distinct": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
                      "enum": [
                        "id",
                        "interactionType",
                        "content",
                        "timestamp",
                        "userId",
                        "widgetId"
                      ]
                    }
                  },
                  "customerCommunication_deleteOneWidget_interactions_interactions_user_user_accounts_where": {
                    "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_15"
                  },
                  "customerCommunication_deleteOneWidget_interactions_interactions_user_user_accounts_orderBy": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_AccountOrderByWithRelationInput_8"
                    }
                  },
                  "customerCommunication_deleteOneWidget_interactions_interactions_user_user_accounts_cursor": {
                    "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_9"
                  },
                  "customerCommunication_deleteOneWidget_interactions_interactions_user_user_accounts_take": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_deleteOneWidget_interactions_interactions_user_user_accounts_skip": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_deleteOneWidget_interactions_interactions_user_user_accounts_distinct": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
                      "enum": [
                        "id",
                        "userId",
                        "type",
                        "provider",
                        "providerAccountId",
                        "refresh_token",
                        "access_token",
                        "expires_at",
                        "token_type",
                        "scope",
                        "id_token",
                        "session_state",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  },
                  "customerCommunication_deleteOneWidget_interactions_interactions_user_user_sessions_where": {
                    "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_15"
                  },
                  "customerCommunication_deleteOneWidget_interactions_interactions_user_user_sessions_orderBy": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_SessionOrderByWithRelationInput_8"
                    }
                  },
                  "customerCommunication_deleteOneWidget_interactions_interactions_user_user_sessions_cursor": {
                    "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput_2"
                  },
                  "customerCommunication_deleteOneWidget_interactions_interactions_user_user_sessions_take": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_deleteOneWidget_interactions_interactions_user_user_sessions_skip": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_deleteOneWidget_interactions_interactions_user_user_sessions_distinct": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
                      "enum": [
                        "id",
                        "sessionToken",
                        "userId",
                        "expires"
                      ]
                    }
                  }
                },
                "additionalProperties": false,
                "required": [
                  "where"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_deleteOneWidget": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "embeddedIn": {
                              "type": "string"
                            },
                            "interactions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "interactionType": {
                                    "type": "string",
                                    "enum": [
                                      "CALL",
                                      "CHAT",
                                      "EMAIL",
                                      "WEB_USAGE",
                                      "IVR_HUGO_USAGE",
                                      "OUTBOUND_CORRESPONDENCE",
                                      "MARKETING_MATERIAL",
                                      "TEXT"
                                    ]
                                  },
                                  "content": {
                                    "type": "string"
                                  },
                                  "timestamp": {
                                    "type": "string"
                                  },
                                  "userId": {
                                    "type": "string"
                                  },
                                  "widgetId": {
                                    "type": "string"
                                  },
                                  "user": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "email": {
                                        "type": "string"
                                      },
                                      "emailVerified": {
                                        "type": "string"
                                      },
                                      "image": {
                                        "type": "string"
                                      },
                                      "createdAt": {
                                        "type": "string"
                                      },
                                      "updatedAt": {
                                        "type": "string"
                                      },
                                      "userType": {
                                        "type": "string",
                                        "enum": [
                                          "CALL_CENTER_REP",
                                          "CUSTOMER",
                                          "FINANCIAL_REP"
                                        ]
                                      },
                                      "stripeCustomerId": {
                                        "type": "string"
                                      },
                                      "stripeSubscriptionId": {
                                        "type": "string"
                                      },
                                      "stripePriceId": {
                                        "type": "string"
                                      },
                                      "stripeCurrentPeriodEnd": {
                                        "type": "string"
                                      },
                                      "accounts": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "userId": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string"
                                            },
                                            "provider": {
                                              "type": "string"
                                            },
                                            "providerAccountId": {
                                              "type": "string"
                                            },
                                            "refresh_token": {
                                              "type": "string"
                                            },
                                            "access_token": {
                                              "type": "string"
                                            },
                                            "expires_at": {
                                              "type": "integer"
                                            },
                                            "token_type": {
                                              "type": "string"
                                            },
                                            "scope": {
                                              "type": "string"
                                            },
                                            "id_token": {
                                              "type": "string"
                                            },
                                            "session_state": {
                                              "type": "string"
                                            },
                                            "createdAt": {
                                              "type": "string"
                                            },
                                            "updatedAt": {
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false,
                                          "required": [
                                            "id",
                                            "userId",
                                            "type",
                                            "provider",
                                            "providerAccountId",
                                            "createdAt",
                                            "updatedAt"
                                          ]
                                        }
                                      },
                                      "sessions": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "sessionToken": {
                                              "type": "string"
                                            },
                                            "userId": {
                                              "type": "string"
                                            },
                                            "expires": {
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false,
                                          "required": [
                                            "id",
                                            "sessionToken",
                                            "userId",
                                            "expires"
                                          ]
                                        }
                                      },
                                      "_count": {
                                        "type": "object",
                                        "properties": {
                                          "interactions": {
                                            "type": "integer"
                                          },
                                          "accounts": {
                                            "type": "integer"
                                          },
                                          "sessions": {
                                            "type": "integer"
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "interactions",
                                          "accounts",
                                          "sessions"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "createdAt",
                                      "updatedAt",
                                      "_count"
                                    ]
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "interactionType",
                                  "content",
                                  "timestamp",
                                  "userId",
                                  "user"
                                ]
                              }
                            },
                            "_count": {
                              "type": "object",
                              "properties": {
                                "interactions": {
                                  "type": "integer"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "interactions"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "embeddedIn",
                            "_count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/ExecuteRaw": {
      "post": {
        "operationId": "CustomerCommunicationExecuteRaw",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "query": {
                    "type": "string"
                  },
                  "parameters": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                },
                "additionalProperties": false,
                "required": [
                  "query"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_executeRaw": {
                          "type": "integer"
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "customerCommunication_executeRaw"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/FindFirstAccount": {
      "get": {
        "operationId": "CustomerCommunicationFindFirstAccount",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstAccount_user_user_interactions_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstAccount_user_user_interactions_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstAccount_user_user_interactions_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstAccount_user_user_interactions_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstAccount_user_user_sessions_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstAccount_user_user_sessions_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstAccount_user_user_sessions_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstAccount_user_user_sessions_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_findFirstAccount": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "provider": {
                              "type": "string"
                            },
                            "providerAccountId": {
                              "type": "string"
                            },
                            "refresh_token": {
                              "type": "string"
                            },
                            "access_token": {
                              "type": "string"
                            },
                            "expires_at": {
                              "type": "integer"
                            },
                            "token_type": {
                              "type": "string"
                            },
                            "scope": {
                              "type": "string"
                            },
                            "id_token": {
                              "type": "string"
                            },
                            "session_state": {
                              "type": "string"
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            },
                            "user": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "email": {
                                  "type": "string"
                                },
                                "emailVerified": {
                                  "type": "string"
                                },
                                "image": {
                                  "type": "string"
                                },
                                "createdAt": {
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "type": "string"
                                },
                                "userType": {
                                  "type": "string",
                                  "enum": [
                                    "CALL_CENTER_REP",
                                    "CUSTOMER",
                                    "FINANCIAL_REP"
                                  ]
                                },
                                "stripeCustomerId": {
                                  "type": "string"
                                },
                                "stripeSubscriptionId": {
                                  "type": "string"
                                },
                                "stripePriceId": {
                                  "type": "string"
                                },
                                "stripeCurrentPeriodEnd": {
                                  "type": "string"
                                },
                                "interactions": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "interactionType": {
                                        "type": "string",
                                        "enum": [
                                          "CALL",
                                          "CHAT",
                                          "EMAIL",
                                          "WEB_USAGE",
                                          "IVR_HUGO_USAGE",
                                          "OUTBOUND_CORRESPONDENCE",
                                          "MARKETING_MATERIAL",
                                          "TEXT"
                                        ]
                                      },
                                      "content": {
                                        "type": "string"
                                      },
                                      "timestamp": {
                                        "type": "string"
                                      },
                                      "userId": {
                                        "type": "string"
                                      },
                                      "widgetId": {
                                        "type": "string"
                                      },
                                      "Widget": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "embeddedIn": {
                                            "type": "string"
                                          },
                                          "_count": {
                                            "type": "object",
                                            "properties": {
                                              "interactions": {
                                                "type": "integer"
                                              }
                                            },
                                            "additionalProperties": false,
                                            "required": [
                                              "interactions"
                                            ]
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "id",
                                          "embeddedIn",
                                          "_count"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "interactionType",
                                      "content",
                                      "timestamp",
                                      "userId"
                                    ]
                                  }
                                },
                                "sessions": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "sessionToken": {
                                        "type": "string"
                                      },
                                      "userId": {
                                        "type": "string"
                                      },
                                      "expires": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "sessionToken",
                                      "userId",
                                      "expires"
                                    ]
                                  }
                                },
                                "_count": {
                                  "type": "object",
                                  "properties": {
                                    "interactions": {
                                      "type": "integer"
                                    },
                                    "accounts": {
                                      "type": "integer"
                                    },
                                    "sessions": {
                                      "type": "integer"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "interactions",
                                    "accounts",
                                    "sessions"
                                  ]
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "createdAt",
                                "updatedAt",
                                "_count"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "userId",
                            "type",
                            "provider",
                            "providerAccountId",
                            "createdAt",
                            "updatedAt",
                            "user"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/FindFirstAccountOrThrow": {
      "get": {
        "operationId": "CustomerCommunicationFindFirstAccountOrThrow",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstAccountOrThrow_user_user_interactions_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstAccountOrThrow_user_user_interactions_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstAccountOrThrow_user_user_interactions_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstAccountOrThrow_user_user_interactions_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstAccountOrThrow_user_user_sessions_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstAccountOrThrow_user_user_sessions_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstAccountOrThrow_user_user_sessions_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstAccountOrThrow_user_user_sessions_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_findFirstAccountOrThrow": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "provider": {
                              "type": "string"
                            },
                            "providerAccountId": {
                              "type": "string"
                            },
                            "refresh_token": {
                              "type": "string"
                            },
                            "access_token": {
                              "type": "string"
                            },
                            "expires_at": {
                              "type": "integer"
                            },
                            "token_type": {
                              "type": "string"
                            },
                            "scope": {
                              "type": "string"
                            },
                            "id_token": {
                              "type": "string"
                            },
                            "session_state": {
                              "type": "string"
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            },
                            "user": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "email": {
                                  "type": "string"
                                },
                                "emailVerified": {
                                  "type": "string"
                                },
                                "image": {
                                  "type": "string"
                                },
                                "createdAt": {
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "type": "string"
                                },
                                "userType": {
                                  "type": "string",
                                  "enum": [
                                    "CALL_CENTER_REP",
                                    "CUSTOMER",
                                    "FINANCIAL_REP"
                                  ]
                                },
                                "stripeCustomerId": {
                                  "type": "string"
                                },
                                "stripeSubscriptionId": {
                                  "type": "string"
                                },
                                "stripePriceId": {
                                  "type": "string"
                                },
                                "stripeCurrentPeriodEnd": {
                                  "type": "string"
                                },
                                "interactions": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "interactionType": {
                                        "type": "string",
                                        "enum": [
                                          "CALL",
                                          "CHAT",
                                          "EMAIL",
                                          "WEB_USAGE",
                                          "IVR_HUGO_USAGE",
                                          "OUTBOUND_CORRESPONDENCE",
                                          "MARKETING_MATERIAL",
                                          "TEXT"
                                        ]
                                      },
                                      "content": {
                                        "type": "string"
                                      },
                                      "timestamp": {
                                        "type": "string"
                                      },
                                      "userId": {
                                        "type": "string"
                                      },
                                      "widgetId": {
                                        "type": "string"
                                      },
                                      "Widget": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "embeddedIn": {
                                            "type": "string"
                                          },
                                          "_count": {
                                            "type": "object",
                                            "properties": {
                                              "interactions": {
                                                "type": "integer"
                                              }
                                            },
                                            "additionalProperties": false,
                                            "required": [
                                              "interactions"
                                            ]
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "id",
                                          "embeddedIn",
                                          "_count"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "interactionType",
                                      "content",
                                      "timestamp",
                                      "userId"
                                    ]
                                  }
                                },
                                "sessions": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "sessionToken": {
                                        "type": "string"
                                      },
                                      "userId": {
                                        "type": "string"
                                      },
                                      "expires": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "sessionToken",
                                      "userId",
                                      "expires"
                                    ]
                                  }
                                },
                                "_count": {
                                  "type": "object",
                                  "properties": {
                                    "interactions": {
                                      "type": "integer"
                                    },
                                    "accounts": {
                                      "type": "integer"
                                    },
                                    "sessions": {
                                      "type": "integer"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "interactions",
                                    "accounts",
                                    "sessions"
                                  ]
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "createdAt",
                                "updatedAt",
                                "_count"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "userId",
                            "type",
                            "provider",
                            "providerAccountId",
                            "createdAt",
                            "updatedAt",
                            "user"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/FindFirstFilter": {
      "get": {
        "operationId": "CustomerCommunicationFindFirstFilter",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_findFirstFilter": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "audience": {
                              "type": "string",
                              "enum": [
                                "CALL_CENTER",
                                "CLIENT_PORTAL",
                                "GUARDIAN_ONLINE",
                                "GPAC",
                                "SMART_OFFICE",
                                "LIVING_BALANCE_SHEET"
                              ]
                            },
                            "output": {
                              "type": "string",
                              "enum": [
                                "CALLS",
                                "CHATS",
                                "EMAILS",
                                "WEB_USAGE",
                                "IVR_HUGO_USAGE",
                                "OUTBOUND_CORRESPONDENCE",
                                "MARKETING_MATERIALS",
                                "TEXTS"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "audience",
                            "output"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/FindFirstFilterOrThrow": {
      "get": {
        "operationId": "CustomerCommunicationFindFirstFilterOrThrow",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_findFirstFilterOrThrow": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "audience": {
                              "type": "string",
                              "enum": [
                                "CALL_CENTER",
                                "CLIENT_PORTAL",
                                "GUARDIAN_ONLINE",
                                "GPAC",
                                "SMART_OFFICE",
                                "LIVING_BALANCE_SHEET"
                              ]
                            },
                            "output": {
                              "type": "string",
                              "enum": [
                                "CALLS",
                                "CHATS",
                                "EMAILS",
                                "WEB_USAGE",
                                "IVR_HUGO_USAGE",
                                "OUTBOUND_CORRESPONDENCE",
                                "MARKETING_MATERIALS",
                                "TEXTS"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "audience",
                            "output"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/FindFirstInteraction": {
      "get": {
        "operationId": "CustomerCommunicationFindFirstInteraction",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstInteraction_user_user_accounts_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstInteraction_user_user_accounts_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstInteraction_user_user_accounts_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstInteraction_user_user_accounts_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstInteraction_user_user_sessions_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstInteraction_user_user_sessions_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstInteraction_user_user_sessions_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstInteraction_user_user_sessions_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_findFirstInteraction": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "interactionType": {
                              "type": "string",
                              "enum": [
                                "CALL",
                                "CHAT",
                                "EMAIL",
                                "WEB_USAGE",
                                "IVR_HUGO_USAGE",
                                "OUTBOUND_CORRESPONDENCE",
                                "MARKETING_MATERIAL",
                                "TEXT"
                              ]
                            },
                            "content": {
                              "type": "string"
                            },
                            "timestamp": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            },
                            "widgetId": {
                              "type": "string"
                            },
                            "user": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "email": {
                                  "type": "string"
                                },
                                "emailVerified": {
                                  "type": "string"
                                },
                                "image": {
                                  "type": "string"
                                },
                                "createdAt": {
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "type": "string"
                                },
                                "userType": {
                                  "type": "string",
                                  "enum": [
                                    "CALL_CENTER_REP",
                                    "CUSTOMER",
                                    "FINANCIAL_REP"
                                  ]
                                },
                                "stripeCustomerId": {
                                  "type": "string"
                                },
                                "stripeSubscriptionId": {
                                  "type": "string"
                                },
                                "stripePriceId": {
                                  "type": "string"
                                },
                                "stripeCurrentPeriodEnd": {
                                  "type": "string"
                                },
                                "accounts": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "userId": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      },
                                      "provider": {
                                        "type": "string"
                                      },
                                      "providerAccountId": {
                                        "type": "string"
                                      },
                                      "refresh_token": {
                                        "type": "string"
                                      },
                                      "access_token": {
                                        "type": "string"
                                      },
                                      "expires_at": {
                                        "type": "integer"
                                      },
                                      "token_type": {
                                        "type": "string"
                                      },
                                      "scope": {
                                        "type": "string"
                                      },
                                      "id_token": {
                                        "type": "string"
                                      },
                                      "session_state": {
                                        "type": "string"
                                      },
                                      "createdAt": {
                                        "type": "string"
                                      },
                                      "updatedAt": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "userId",
                                      "type",
                                      "provider",
                                      "providerAccountId",
                                      "createdAt",
                                      "updatedAt"
                                    ]
                                  }
                                },
                                "sessions": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "sessionToken": {
                                        "type": "string"
                                      },
                                      "userId": {
                                        "type": "string"
                                      },
                                      "expires": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "sessionToken",
                                      "userId",
                                      "expires"
                                    ]
                                  }
                                },
                                "_count": {
                                  "type": "object",
                                  "properties": {
                                    "interactions": {
                                      "type": "integer"
                                    },
                                    "accounts": {
                                      "type": "integer"
                                    },
                                    "sessions": {
                                      "type": "integer"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "interactions",
                                    "accounts",
                                    "sessions"
                                  ]
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "createdAt",
                                "updatedAt",
                                "_count"
                              ]
                            },
                            "Widget": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "embeddedIn": {
                                  "type": "string"
                                },
                                "_count": {
                                  "type": "object",
                                  "properties": {
                                    "interactions": {
                                      "type": "integer"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "interactions"
                                  ]
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "embeddedIn",
                                "_count"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "interactionType",
                            "content",
                            "timestamp",
                            "userId",
                            "user"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/FindFirstInteractionOrThrow": {
      "get": {
        "operationId": "CustomerCommunicationFindFirstInteractionOrThrow",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstInteractionOrThrow_user_user_accounts_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstInteractionOrThrow_user_user_accounts_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstInteractionOrThrow_user_user_accounts_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstInteractionOrThrow_user_user_accounts_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstInteractionOrThrow_user_user_sessions_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstInteractionOrThrow_user_user_sessions_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstInteractionOrThrow_user_user_sessions_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstInteractionOrThrow_user_user_sessions_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_findFirstInteractionOrThrow": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "interactionType": {
                              "type": "string",
                              "enum": [
                                "CALL",
                                "CHAT",
                                "EMAIL",
                                "WEB_USAGE",
                                "IVR_HUGO_USAGE",
                                "OUTBOUND_CORRESPONDENCE",
                                "MARKETING_MATERIAL",
                                "TEXT"
                              ]
                            },
                            "content": {
                              "type": "string"
                            },
                            "timestamp": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            },
                            "widgetId": {
                              "type": "string"
                            },
                            "user": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "email": {
                                  "type": "string"
                                },
                                "emailVerified": {
                                  "type": "string"
                                },
                                "image": {
                                  "type": "string"
                                },
                                "createdAt": {
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "type": "string"
                                },
                                "userType": {
                                  "type": "string",
                                  "enum": [
                                    "CALL_CENTER_REP",
                                    "CUSTOMER",
                                    "FINANCIAL_REP"
                                  ]
                                },
                                "stripeCustomerId": {
                                  "type": "string"
                                },
                                "stripeSubscriptionId": {
                                  "type": "string"
                                },
                                "stripePriceId": {
                                  "type": "string"
                                },
                                "stripeCurrentPeriodEnd": {
                                  "type": "string"
                                },
                                "accounts": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "userId": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      },
                                      "provider": {
                                        "type": "string"
                                      },
                                      "providerAccountId": {
                                        "type": "string"
                                      },
                                      "refresh_token": {
                                        "type": "string"
                                      },
                                      "access_token": {
                                        "type": "string"
                                      },
                                      "expires_at": {
                                        "type": "integer"
                                      },
                                      "token_type": {
                                        "type": "string"
                                      },
                                      "scope": {
                                        "type": "string"
                                      },
                                      "id_token": {
                                        "type": "string"
                                      },
                                      "session_state": {
                                        "type": "string"
                                      },
                                      "createdAt": {
                                        "type": "string"
                                      },
                                      "updatedAt": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "userId",
                                      "type",
                                      "provider",
                                      "providerAccountId",
                                      "createdAt",
                                      "updatedAt"
                                    ]
                                  }
                                },
                                "sessions": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "sessionToken": {
                                        "type": "string"
                                      },
                                      "userId": {
                                        "type": "string"
                                      },
                                      "expires": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "sessionToken",
                                      "userId",
                                      "expires"
                                    ]
                                  }
                                },
                                "_count": {
                                  "type": "object",
                                  "properties": {
                                    "interactions": {
                                      "type": "integer"
                                    },
                                    "accounts": {
                                      "type": "integer"
                                    },
                                    "sessions": {
                                      "type": "integer"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "interactions",
                                    "accounts",
                                    "sessions"
                                  ]
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "createdAt",
                                "updatedAt",
                                "_count"
                              ]
                            },
                            "Widget": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "embeddedIn": {
                                  "type": "string"
                                },
                                "_count": {
                                  "type": "object",
                                  "properties": {
                                    "interactions": {
                                      "type": "integer"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "interactions"
                                  ]
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "embeddedIn",
                                "_count"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "interactionType",
                            "content",
                            "timestamp",
                            "userId",
                            "user"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/FindFirstSession": {
      "get": {
        "operationId": "CustomerCommunicationFindFirstSession",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstSession_user_user_interactions_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstSession_user_user_interactions_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstSession_user_user_interactions_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstSession_user_user_interactions_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstSession_user_user_accounts_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstSession_user_user_accounts_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstSession_user_user_accounts_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstSession_user_user_accounts_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_findFirstSession": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "sessionToken": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            },
                            "expires": {
                              "type": "string"
                            },
                            "user": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "email": {
                                  "type": "string"
                                },
                                "emailVerified": {
                                  "type": "string"
                                },
                                "image": {
                                  "type": "string"
                                },
                                "createdAt": {
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "type": "string"
                                },
                                "userType": {
                                  "type": "string",
                                  "enum": [
                                    "CALL_CENTER_REP",
                                    "CUSTOMER",
                                    "FINANCIAL_REP"
                                  ]
                                },
                                "stripeCustomerId": {
                                  "type": "string"
                                },
                                "stripeSubscriptionId": {
                                  "type": "string"
                                },
                                "stripePriceId": {
                                  "type": "string"
                                },
                                "stripeCurrentPeriodEnd": {
                                  "type": "string"
                                },
                                "interactions": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "interactionType": {
                                        "type": "string",
                                        "enum": [
                                          "CALL",
                                          "CHAT",
                                          "EMAIL",
                                          "WEB_USAGE",
                                          "IVR_HUGO_USAGE",
                                          "OUTBOUND_CORRESPONDENCE",
                                          "MARKETING_MATERIAL",
                                          "TEXT"
                                        ]
                                      },
                                      "content": {
                                        "type": "string"
                                      },
                                      "timestamp": {
                                        "type": "string"
                                      },
                                      "userId": {
                                        "type": "string"
                                      },
                                      "widgetId": {
                                        "type": "string"
                                      },
                                      "Widget": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "embeddedIn": {
                                            "type": "string"
                                          },
                                          "_count": {
                                            "type": "object",
                                            "properties": {
                                              "interactions": {
                                                "type": "integer"
                                              }
                                            },
                                            "additionalProperties": false,
                                            "required": [
                                              "interactions"
                                            ]
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "id",
                                          "embeddedIn",
                                          "_count"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "interactionType",
                                      "content",
                                      "timestamp",
                                      "userId"
                                    ]
                                  }
                                },
                                "accounts": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "userId": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      },
                                      "provider": {
                                        "type": "string"
                                      },
                                      "providerAccountId": {
                                        "type": "string"
                                      },
                                      "refresh_token": {
                                        "type": "string"
                                      },
                                      "access_token": {
                                        "type": "string"
                                      },
                                      "expires_at": {
                                        "type": "integer"
                                      },
                                      "token_type": {
                                        "type": "string"
                                      },
                                      "scope": {
                                        "type": "string"
                                      },
                                      "id_token": {
                                        "type": "string"
                                      },
                                      "session_state": {
                                        "type": "string"
                                      },
                                      "createdAt": {
                                        "type": "string"
                                      },
                                      "updatedAt": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "userId",
                                      "type",
                                      "provider",
                                      "providerAccountId",
                                      "createdAt",
                                      "updatedAt"
                                    ]
                                  }
                                },
                                "_count": {
                                  "type": "object",
                                  "properties": {
                                    "interactions": {
                                      "type": "integer"
                                    },
                                    "accounts": {
                                      "type": "integer"
                                    },
                                    "sessions": {
                                      "type": "integer"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "interactions",
                                    "accounts",
                                    "sessions"
                                  ]
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "createdAt",
                                "updatedAt",
                                "_count"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "sessionToken",
                            "userId",
                            "expires",
                            "user"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/FindFirstSessionOrThrow": {
      "get": {
        "operationId": "CustomerCommunicationFindFirstSessionOrThrow",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstSessionOrThrow_user_user_interactions_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstSessionOrThrow_user_user_interactions_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstSessionOrThrow_user_user_interactions_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstSessionOrThrow_user_user_interactions_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstSessionOrThrow_user_user_accounts_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstSessionOrThrow_user_user_accounts_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstSessionOrThrow_user_user_accounts_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstSessionOrThrow_user_user_accounts_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_findFirstSessionOrThrow": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "sessionToken": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            },
                            "expires": {
                              "type": "string"
                            },
                            "user": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "email": {
                                  "type": "string"
                                },
                                "emailVerified": {
                                  "type": "string"
                                },
                                "image": {
                                  "type": "string"
                                },
                                "createdAt": {
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "type": "string"
                                },
                                "userType": {
                                  "type": "string",
                                  "enum": [
                                    "CALL_CENTER_REP",
                                    "CUSTOMER",
                                    "FINANCIAL_REP"
                                  ]
                                },
                                "stripeCustomerId": {
                                  "type": "string"
                                },
                                "stripeSubscriptionId": {
                                  "type": "string"
                                },
                                "stripePriceId": {
                                  "type": "string"
                                },
                                "stripeCurrentPeriodEnd": {
                                  "type": "string"
                                },
                                "interactions": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "interactionType": {
                                        "type": "string",
                                        "enum": [
                                          "CALL",
                                          "CHAT",
                                          "EMAIL",
                                          "WEB_USAGE",
                                          "IVR_HUGO_USAGE",
                                          "OUTBOUND_CORRESPONDENCE",
                                          "MARKETING_MATERIAL",
                                          "TEXT"
                                        ]
                                      },
                                      "content": {
                                        "type": "string"
                                      },
                                      "timestamp": {
                                        "type": "string"
                                      },
                                      "userId": {
                                        "type": "string"
                                      },
                                      "widgetId": {
                                        "type": "string"
                                      },
                                      "Widget": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "embeddedIn": {
                                            "type": "string"
                                          },
                                          "_count": {
                                            "type": "object",
                                            "properties": {
                                              "interactions": {
                                                "type": "integer"
                                              }
                                            },
                                            "additionalProperties": false,
                                            "required": [
                                              "interactions"
                                            ]
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "id",
                                          "embeddedIn",
                                          "_count"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "interactionType",
                                      "content",
                                      "timestamp",
                                      "userId"
                                    ]
                                  }
                                },
                                "accounts": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "userId": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      },
                                      "provider": {
                                        "type": "string"
                                      },
                                      "providerAccountId": {
                                        "type": "string"
                                      },
                                      "refresh_token": {
                                        "type": "string"
                                      },
                                      "access_token": {
                                        "type": "string"
                                      },
                                      "expires_at": {
                                        "type": "integer"
                                      },
                                      "token_type": {
                                        "type": "string"
                                      },
                                      "scope": {
                                        "type": "string"
                                      },
                                      "id_token": {
                                        "type": "string"
                                      },
                                      "session_state": {
                                        "type": "string"
                                      },
                                      "createdAt": {
                                        "type": "string"
                                      },
                                      "updatedAt": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "userId",
                                      "type",
                                      "provider",
                                      "providerAccountId",
                                      "createdAt",
                                      "updatedAt"
                                    ]
                                  }
                                },
                                "_count": {
                                  "type": "object",
                                  "properties": {
                                    "interactions": {
                                      "type": "integer"
                                    },
                                    "accounts": {
                                      "type": "integer"
                                    },
                                    "sessions": {
                                      "type": "integer"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "interactions",
                                    "accounts",
                                    "sessions"
                                  ]
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "createdAt",
                                "updatedAt",
                                "_count"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "sessionToken",
                            "userId",
                            "expires",
                            "user"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/FindFirstUser": {
      "get": {
        "operationId": "CustomerCommunicationFindFirstUser",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstUser_interactions_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstUser_interactions_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstUser_interactions_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstUser_interactions_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstUser_accounts_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstUser_accounts_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstUser_accounts_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstUser_accounts_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstUser_sessions_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstUser_sessions_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstUser_sessions_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstUser_sessions_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_findFirstUser": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            },
                            "emailVerified": {
                              "type": "string"
                            },
                            "image": {
                              "type": "string"
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            },
                            "userType": {
                              "type": "string",
                              "enum": [
                                "CALL_CENTER_REP",
                                "CUSTOMER",
                                "FINANCIAL_REP"
                              ]
                            },
                            "stripeCustomerId": {
                              "type": "string"
                            },
                            "stripeSubscriptionId": {
                              "type": "string"
                            },
                            "stripePriceId": {
                              "type": "string"
                            },
                            "stripeCurrentPeriodEnd": {
                              "type": "string"
                            },
                            "interactions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "interactionType": {
                                    "type": "string",
                                    "enum": [
                                      "CALL",
                                      "CHAT",
                                      "EMAIL",
                                      "WEB_USAGE",
                                      "IVR_HUGO_USAGE",
                                      "OUTBOUND_CORRESPONDENCE",
                                      "MARKETING_MATERIAL",
                                      "TEXT"
                                    ]
                                  },
                                  "content": {
                                    "type": "string"
                                  },
                                  "timestamp": {
                                    "type": "string"
                                  },
                                  "userId": {
                                    "type": "string"
                                  },
                                  "widgetId": {
                                    "type": "string"
                                  },
                                  "Widget": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "embeddedIn": {
                                        "type": "string"
                                      },
                                      "_count": {
                                        "type": "object",
                                        "properties": {
                                          "interactions": {
                                            "type": "integer"
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "interactions"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "embeddedIn",
                                      "_count"
                                    ]
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "interactionType",
                                  "content",
                                  "timestamp",
                                  "userId"
                                ]
                              }
                            },
                            "accounts": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "userId": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  },
                                  "provider": {
                                    "type": "string"
                                  },
                                  "providerAccountId": {
                                    "type": "string"
                                  },
                                  "refresh_token": {
                                    "type": "string"
                                  },
                                  "access_token": {
                                    "type": "string"
                                  },
                                  "expires_at": {
                                    "type": "integer"
                                  },
                                  "token_type": {
                                    "type": "string"
                                  },
                                  "scope": {
                                    "type": "string"
                                  },
                                  "id_token": {
                                    "type": "string"
                                  },
                                  "session_state": {
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "userId",
                                  "type",
                                  "provider",
                                  "providerAccountId",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              }
                            },
                            "sessions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "sessionToken": {
                                    "type": "string"
                                  },
                                  "userId": {
                                    "type": "string"
                                  },
                                  "expires": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "sessionToken",
                                  "userId",
                                  "expires"
                                ]
                              }
                            },
                            "_count": {
                              "type": "object",
                              "properties": {
                                "interactions": {
                                  "type": "integer"
                                },
                                "accounts": {
                                  "type": "integer"
                                },
                                "sessions": {
                                  "type": "integer"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "interactions",
                                "accounts",
                                "sessions"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "createdAt",
                            "updatedAt",
                            "_count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/FindFirstUserOrThrow": {
      "get": {
        "operationId": "CustomerCommunicationFindFirstUserOrThrow",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstUserOrThrow_interactions_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstUserOrThrow_interactions_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstUserOrThrow_interactions_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstUserOrThrow_interactions_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstUserOrThrow_accounts_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstUserOrThrow_accounts_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstUserOrThrow_accounts_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstUserOrThrow_accounts_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstUserOrThrow_sessions_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstUserOrThrow_sessions_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstUserOrThrow_sessions_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstUserOrThrow_sessions_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_findFirstUserOrThrow": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            },
                            "emailVerified": {
                              "type": "string"
                            },
                            "image": {
                              "type": "string"
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            },
                            "userType": {
                              "type": "string",
                              "enum": [
                                "CALL_CENTER_REP",
                                "CUSTOMER",
                                "FINANCIAL_REP"
                              ]
                            },
                            "stripeCustomerId": {
                              "type": "string"
                            },
                            "stripeSubscriptionId": {
                              "type": "string"
                            },
                            "stripePriceId": {
                              "type": "string"
                            },
                            "stripeCurrentPeriodEnd": {
                              "type": "string"
                            },
                            "interactions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "interactionType": {
                                    "type": "string",
                                    "enum": [
                                      "CALL",
                                      "CHAT",
                                      "EMAIL",
                                      "WEB_USAGE",
                                      "IVR_HUGO_USAGE",
                                      "OUTBOUND_CORRESPONDENCE",
                                      "MARKETING_MATERIAL",
                                      "TEXT"
                                    ]
                                  },
                                  "content": {
                                    "type": "string"
                                  },
                                  "timestamp": {
                                    "type": "string"
                                  },
                                  "userId": {
                                    "type": "string"
                                  },
                                  "widgetId": {
                                    "type": "string"
                                  },
                                  "Widget": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "embeddedIn": {
                                        "type": "string"
                                      },
                                      "_count": {
                                        "type": "object",
                                        "properties": {
                                          "interactions": {
                                            "type": "integer"
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "interactions"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "embeddedIn",
                                      "_count"
                                    ]
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "interactionType",
                                  "content",
                                  "timestamp",
                                  "userId"
                                ]
                              }
                            },
                            "accounts": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "userId": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  },
                                  "provider": {
                                    "type": "string"
                                  },
                                  "providerAccountId": {
                                    "type": "string"
                                  },
                                  "refresh_token": {
                                    "type": "string"
                                  },
                                  "access_token": {
                                    "type": "string"
                                  },
                                  "expires_at": {
                                    "type": "integer"
                                  },
                                  "token_type": {
                                    "type": "string"
                                  },
                                  "scope": {
                                    "type": "string"
                                  },
                                  "id_token": {
                                    "type": "string"
                                  },
                                  "session_state": {
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "userId",
                                  "type",
                                  "provider",
                                  "providerAccountId",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              }
                            },
                            "sessions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "sessionToken": {
                                    "type": "string"
                                  },
                                  "userId": {
                                    "type": "string"
                                  },
                                  "expires": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "sessionToken",
                                  "userId",
                                  "expires"
                                ]
                              }
                            },
                            "_count": {
                              "type": "object",
                              "properties": {
                                "interactions": {
                                  "type": "integer"
                                },
                                "accounts": {
                                  "type": "integer"
                                },
                                "sessions": {
                                  "type": "integer"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "interactions",
                                "accounts",
                                "sessions"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "createdAt",
                            "updatedAt",
                            "_count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/FindFirstVerificationToken": {
      "get": {
        "operationId": "CustomerCommunicationFindFirstVerificationToken",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_findFirstVerificationToken": {
                          "type": "object",
                          "properties": {
                            "identifier": {
                              "type": "string"
                            },
                            "token": {
                              "type": "string"
                            },
                            "expires": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "identifier",
                            "token",
                            "expires"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/FindFirstVerificationTokenOrThrow": {
      "get": {
        "operationId": "CustomerCommunicationFindFirstVerificationTokenOrThrow",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_findFirstVerificationTokenOrThrow": {
                          "type": "object",
                          "properties": {
                            "identifier": {
                              "type": "string"
                            },
                            "token": {
                              "type": "string"
                            },
                            "expires": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "identifier",
                            "token",
                            "expires"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/FindFirstWidget": {
      "get": {
        "operationId": "CustomerCommunicationFindFirstWidget",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstWidget_interactions_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstWidget_interactions_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstWidget_interactions_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstWidget_interactions_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstWidget_interactions_interactions_user_user_accounts_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstWidget_interactions_interactions_user_user_accounts_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstWidget_interactions_interactions_user_user_accounts_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstWidget_interactions_interactions_user_user_accounts_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstWidget_interactions_interactions_user_user_sessions_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstWidget_interactions_interactions_user_user_sessions_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstWidget_interactions_interactions_user_user_sessions_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstWidget_interactions_interactions_user_user_sessions_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_findFirstWidget": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "embeddedIn": {
                              "type": "string"
                            },
                            "interactions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "interactionType": {
                                    "type": "string",
                                    "enum": [
                                      "CALL",
                                      "CHAT",
                                      "EMAIL",
                                      "WEB_USAGE",
                                      "IVR_HUGO_USAGE",
                                      "OUTBOUND_CORRESPONDENCE",
                                      "MARKETING_MATERIAL",
                                      "TEXT"
                                    ]
                                  },
                                  "content": {
                                    "type": "string"
                                  },
                                  "timestamp": {
                                    "type": "string"
                                  },
                                  "userId": {
                                    "type": "string"
                                  },
                                  "widgetId": {
                                    "type": "string"
                                  },
                                  "user": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "email": {
                                        "type": "string"
                                      },
                                      "emailVerified": {
                                        "type": "string"
                                      },
                                      "image": {
                                        "type": "string"
                                      },
                                      "createdAt": {
                                        "type": "string"
                                      },
                                      "updatedAt": {
                                        "type": "string"
                                      },
                                      "userType": {
                                        "type": "string",
                                        "enum": [
                                          "CALL_CENTER_REP",
                                          "CUSTOMER",
                                          "FINANCIAL_REP"
                                        ]
                                      },
                                      "stripeCustomerId": {
                                        "type": "string"
                                      },
                                      "stripeSubscriptionId": {
                                        "type": "string"
                                      },
                                      "stripePriceId": {
                                        "type": "string"
                                      },
                                      "stripeCurrentPeriodEnd": {
                                        "type": "string"
                                      },
                                      "accounts": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "userId": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string"
                                            },
                                            "provider": {
                                              "type": "string"
                                            },
                                            "providerAccountId": {
                                              "type": "string"
                                            },
                                            "refresh_token": {
                                              "type": "string"
                                            },
                                            "access_token": {
                                              "type": "string"
                                            },
                                            "expires_at": {
                                              "type": "integer"
                                            },
                                            "token_type": {
                                              "type": "string"
                                            },
                                            "scope": {
                                              "type": "string"
                                            },
                                            "id_token": {
                                              "type": "string"
                                            },
                                            "session_state": {
                                              "type": "string"
                                            },
                                            "createdAt": {
                                              "type": "string"
                                            },
                                            "updatedAt": {
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false,
                                          "required": [
                                            "id",
                                            "userId",
                                            "type",
                                            "provider",
                                            "providerAccountId",
                                            "createdAt",
                                            "updatedAt"
                                          ]
                                        }
                                      },
                                      "sessions": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "sessionToken": {
                                              "type": "string"
                                            },
                                            "userId": {
                                              "type": "string"
                                            },
                                            "expires": {
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false,
                                          "required": [
                                            "id",
                                            "sessionToken",
                                            "userId",
                                            "expires"
                                          ]
                                        }
                                      },
                                      "_count": {
                                        "type": "object",
                                        "properties": {
                                          "interactions": {
                                            "type": "integer"
                                          },
                                          "accounts": {
                                            "type": "integer"
                                          },
                                          "sessions": {
                                            "type": "integer"
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "interactions",
                                          "accounts",
                                          "sessions"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "createdAt",
                                      "updatedAt",
                                      "_count"
                                    ]
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "interactionType",
                                  "content",
                                  "timestamp",
                                  "userId",
                                  "user"
                                ]
                              }
                            },
                            "_count": {
                              "type": "object",
                              "properties": {
                                "interactions": {
                                  "type": "integer"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "interactions"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "embeddedIn",
                            "_count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/FindFirstWidgetOrThrow": {
      "get": {
        "operationId": "CustomerCommunicationFindFirstWidgetOrThrow",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstWidgetOrThrow_interactions_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstWidgetOrThrow_interactions_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstWidgetOrThrow_interactions_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstWidgetOrThrow_interactions_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstWidgetOrThrow_interactions_interactions_user_user_accounts_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstWidgetOrThrow_interactions_interactions_user_user_accounts_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstWidgetOrThrow_interactions_interactions_user_user_accounts_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstWidgetOrThrow_interactions_interactions_user_user_accounts_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstWidgetOrThrow_interactions_interactions_user_user_sessions_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstWidgetOrThrow_interactions_interactions_user_user_sessions_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstWidgetOrThrow_interactions_interactions_user_user_sessions_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findFirstWidgetOrThrow_interactions_interactions_user_user_sessions_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_findFirstWidgetOrThrow": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "embeddedIn": {
                              "type": "string"
                            },
                            "interactions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "interactionType": {
                                    "type": "string",
                                    "enum": [
                                      "CALL",
                                      "CHAT",
                                      "EMAIL",
                                      "WEB_USAGE",
                                      "IVR_HUGO_USAGE",
                                      "OUTBOUND_CORRESPONDENCE",
                                      "MARKETING_MATERIAL",
                                      "TEXT"
                                    ]
                                  },
                                  "content": {
                                    "type": "string"
                                  },
                                  "timestamp": {
                                    "type": "string"
                                  },
                                  "userId": {
                                    "type": "string"
                                  },
                                  "widgetId": {
                                    "type": "string"
                                  },
                                  "user": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "email": {
                                        "type": "string"
                                      },
                                      "emailVerified": {
                                        "type": "string"
                                      },
                                      "image": {
                                        "type": "string"
                                      },
                                      "createdAt": {
                                        "type": "string"
                                      },
                                      "updatedAt": {
                                        "type": "string"
                                      },
                                      "userType": {
                                        "type": "string",
                                        "enum": [
                                          "CALL_CENTER_REP",
                                          "CUSTOMER",
                                          "FINANCIAL_REP"
                                        ]
                                      },
                                      "stripeCustomerId": {
                                        "type": "string"
                                      },
                                      "stripeSubscriptionId": {
                                        "type": "string"
                                      },
                                      "stripePriceId": {
                                        "type": "string"
                                      },
                                      "stripeCurrentPeriodEnd": {
                                        "type": "string"
                                      },
                                      "accounts": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "userId": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string"
                                            },
                                            "provider": {
                                              "type": "string"
                                            },
                                            "providerAccountId": {
                                              "type": "string"
                                            },
                                            "refresh_token": {
                                              "type": "string"
                                            },
                                            "access_token": {
                                              "type": "string"
                                            },
                                            "expires_at": {
                                              "type": "integer"
                                            },
                                            "token_type": {
                                              "type": "string"
                                            },
                                            "scope": {
                                              "type": "string"
                                            },
                                            "id_token": {
                                              "type": "string"
                                            },
                                            "session_state": {
                                              "type": "string"
                                            },
                                            "createdAt": {
                                              "type": "string"
                                            },
                                            "updatedAt": {
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false,
                                          "required": [
                                            "id",
                                            "userId",
                                            "type",
                                            "provider",
                                            "providerAccountId",
                                            "createdAt",
                                            "updatedAt"
                                          ]
                                        }
                                      },
                                      "sessions": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "sessionToken": {
                                              "type": "string"
                                            },
                                            "userId": {
                                              "type": "string"
                                            },
                                            "expires": {
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false,
                                          "required": [
                                            "id",
                                            "sessionToken",
                                            "userId",
                                            "expires"
                                          ]
                                        }
                                      },
                                      "_count": {
                                        "type": "object",
                                        "properties": {
                                          "interactions": {
                                            "type": "integer"
                                          },
                                          "accounts": {
                                            "type": "integer"
                                          },
                                          "sessions": {
                                            "type": "integer"
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "interactions",
                                          "accounts",
                                          "sessions"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "createdAt",
                                      "updatedAt",
                                      "_count"
                                    ]
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "interactionType",
                                  "content",
                                  "timestamp",
                                  "userId",
                                  "user"
                                ]
                              }
                            },
                            "_count": {
                              "type": "object",
                              "properties": {
                                "interactions": {
                                  "type": "integer"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "interactions"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "embeddedIn",
                            "_count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/FindManyAccount": {
      "get": {
        "operationId": "CustomerCommunicationFindManyAccount",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findManyAccount_user_user_interactions_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findManyAccount_user_user_interactions_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findManyAccount_user_user_interactions_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findManyAccount_user_user_interactions_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findManyAccount_user_user_sessions_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findManyAccount_user_user_sessions_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findManyAccount_user_user_sessions_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findManyAccount_user_user_sessions_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_findManyAccount": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "userId": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "provider": {
                                "type": "string"
                              },
                              "providerAccountId": {
                                "type": "string"
                              },
                              "refresh_token": {
                                "type": "string"
                              },
                              "access_token": {
                                "type": "string"
                              },
                              "expires_at": {
                                "type": "integer"
                              },
                              "token_type": {
                                "type": "string"
                              },
                              "scope": {
                                "type": "string"
                              },
                              "id_token": {
                                "type": "string"
                              },
                              "session_state": {
                                "type": "string"
                              },
                              "createdAt": {
                                "type": "string"
                              },
                              "updatedAt": {
                                "type": "string"
                              },
                              "user": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "email": {
                                    "type": "string"
                                  },
                                  "emailVerified": {
                                    "type": "string"
                                  },
                                  "image": {
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "type": "string"
                                  },
                                  "userType": {
                                    "type": "string",
                                    "enum": [
                                      "CALL_CENTER_REP",
                                      "CUSTOMER",
                                      "FINANCIAL_REP"
                                    ]
                                  },
                                  "stripeCustomerId": {
                                    "type": "string"
                                  },
                                  "stripeSubscriptionId": {
                                    "type": "string"
                                  },
                                  "stripePriceId": {
                                    "type": "string"
                                  },
                                  "stripeCurrentPeriodEnd": {
                                    "type": "string"
                                  },
                                  "interactions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "interactionType": {
                                          "type": "string",
                                          "enum": [
                                            "CALL",
                                            "CHAT",
                                            "EMAIL",
                                            "WEB_USAGE",
                                            "IVR_HUGO_USAGE",
                                            "OUTBOUND_CORRESPONDENCE",
                                            "MARKETING_MATERIAL",
                                            "TEXT"
                                          ]
                                        },
                                        "content": {
                                          "type": "string"
                                        },
                                        "timestamp": {
                                          "type": "string"
                                        },
                                        "userId": {
                                          "type": "string"
                                        },
                                        "widgetId": {
                                          "type": "string"
                                        },
                                        "Widget": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "embeddedIn": {
                                              "type": "string"
                                            },
                                            "_count": {
                                              "type": "object",
                                              "properties": {
                                                "interactions": {
                                                  "type": "integer"
                                                }
                                              },
                                              "additionalProperties": false,
                                              "required": [
                                                "interactions"
                                              ]
                                            }
                                          },
                                          "additionalProperties": false,
                                          "required": [
                                            "id",
                                            "embeddedIn",
                                            "_count"
                                          ]
                                        }
                                      },
                                      "additionalProperties": false,
                                      "required": [
                                        "id",
                                        "interactionType",
                                        "content",
                                        "timestamp",
                                        "userId"
                                      ]
                                    }
                                  },
                                  "sessions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "sessionToken": {
                                          "type": "string"
                                        },
                                        "userId": {
                                          "type": "string"
                                        },
                                        "expires": {
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false,
                                      "required": [
                                        "id",
                                        "sessionToken",
                                        "userId",
                                        "expires"
                                      ]
                                    }
                                  },
                                  "_count": {
                                    "type": "object",
                                    "properties": {
                                      "interactions": {
                                        "type": "integer"
                                      },
                                      "accounts": {
                                        "type": "integer"
                                      },
                                      "sessions": {
                                        "type": "integer"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "interactions",
                                      "accounts",
                                      "sessions"
                                    ]
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "createdAt",
                                  "updatedAt",
                                  "_count"
                                ]
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "id",
                              "userId",
                              "type",
                              "provider",
                              "providerAccountId",
                              "createdAt",
                              "updatedAt",
                              "user"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "customerCommunication_findManyAccount"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/FindManyFilter": {
      "get": {
        "operationId": "CustomerCommunicationFindManyFilter",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_findManyFilter": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "audience": {
                                "type": "string",
                                "enum": [
                                  "CALL_CENTER",
                                  "CLIENT_PORTAL",
                                  "GUARDIAN_ONLINE",
                                  "GPAC",
                                  "SMART_OFFICE",
                                  "LIVING_BALANCE_SHEET"
                                ]
                              },
                              "output": {
                                "type": "string",
                                "enum": [
                                  "CALLS",
                                  "CHATS",
                                  "EMAILS",
                                  "WEB_USAGE",
                                  "IVR_HUGO_USAGE",
                                  "OUTBOUND_CORRESPONDENCE",
                                  "MARKETING_MATERIALS",
                                  "TEXTS"
                                ]
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "id",
                              "audience",
                              "output"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "customerCommunication_findManyFilter"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/FindManyInteraction": {
      "get": {
        "operationId": "CustomerCommunicationFindManyInteraction",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findManyInteraction_user_user_accounts_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findManyInteraction_user_user_accounts_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findManyInteraction_user_user_accounts_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findManyInteraction_user_user_accounts_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findManyInteraction_user_user_sessions_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findManyInteraction_user_user_sessions_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findManyInteraction_user_user_sessions_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findManyInteraction_user_user_sessions_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_findManyInteraction": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "interactionType": {
                                "type": "string",
                                "enum": [
                                  "CALL",
                                  "CHAT",
                                  "EMAIL",
                                  "WEB_USAGE",
                                  "IVR_HUGO_USAGE",
                                  "OUTBOUND_CORRESPONDENCE",
                                  "MARKETING_MATERIAL",
                                  "TEXT"
                                ]
                              },
                              "content": {
                                "type": "string"
                              },
                              "timestamp": {
                                "type": "string"
                              },
                              "userId": {
                                "type": "string"
                              },
                              "widgetId": {
                                "type": "string"
                              },
                              "user": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "email": {
                                    "type": "string"
                                  },
                                  "emailVerified": {
                                    "type": "string"
                                  },
                                  "image": {
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "type": "string"
                                  },
                                  "userType": {
                                    "type": "string",
                                    "enum": [
                                      "CALL_CENTER_REP",
                                      "CUSTOMER",
                                      "FINANCIAL_REP"
                                    ]
                                  },
                                  "stripeCustomerId": {
                                    "type": "string"
                                  },
                                  "stripeSubscriptionId": {
                                    "type": "string"
                                  },
                                  "stripePriceId": {
                                    "type": "string"
                                  },
                                  "stripeCurrentPeriodEnd": {
                                    "type": "string"
                                  },
                                  "accounts": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "userId": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "type": "string"
                                        },
                                        "provider": {
                                          "type": "string"
                                        },
                                        "providerAccountId": {
                                          "type": "string"
                                        },
                                        "refresh_token": {
                                          "type": "string"
                                        },
                                        "access_token": {
                                          "type": "string"
                                        },
                                        "expires_at": {
                                          "type": "integer"
                                        },
                                        "token_type": {
                                          "type": "string"
                                        },
                                        "scope": {
                                          "type": "string"
                                        },
                                        "id_token": {
                                          "type": "string"
                                        },
                                        "session_state": {
                                          "type": "string"
                                        },
                                        "createdAt": {
                                          "type": "string"
                                        },
                                        "updatedAt": {
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false,
                                      "required": [
                                        "id",
                                        "userId",
                                        "type",
                                        "provider",
                                        "providerAccountId",
                                        "createdAt",
                                        "updatedAt"
                                      ]
                                    }
                                  },
                                  "sessions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "sessionToken": {
                                          "type": "string"
                                        },
                                        "userId": {
                                          "type": "string"
                                        },
                                        "expires": {
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false,
                                      "required": [
                                        "id",
                                        "sessionToken",
                                        "userId",
                                        "expires"
                                      ]
                                    }
                                  },
                                  "_count": {
                                    "type": "object",
                                    "properties": {
                                      "interactions": {
                                        "type": "integer"
                                      },
                                      "accounts": {
                                        "type": "integer"
                                      },
                                      "sessions": {
                                        "type": "integer"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "interactions",
                                      "accounts",
                                      "sessions"
                                    ]
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "createdAt",
                                  "updatedAt",
                                  "_count"
                                ]
                              },
                              "Widget": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "embeddedIn": {
                                    "type": "string"
                                  },
                                  "_count": {
                                    "type": "object",
                                    "properties": {
                                      "interactions": {
                                        "type": "integer"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "interactions"
                                    ]
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "embeddedIn",
                                  "_count"
                                ]
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "id",
                              "interactionType",
                              "content",
                              "timestamp",
                              "userId",
                              "user"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "customerCommunication_findManyInteraction"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/FindManySession": {
      "get": {
        "operationId": "CustomerCommunicationFindManySession",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findManySession_user_user_interactions_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findManySession_user_user_interactions_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findManySession_user_user_interactions_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findManySession_user_user_interactions_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findManySession_user_user_accounts_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findManySession_user_user_accounts_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findManySession_user_user_accounts_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findManySession_user_user_accounts_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_findManySession": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "sessionToken": {
                                "type": "string"
                              },
                              "userId": {
                                "type": "string"
                              },
                              "expires": {
                                "type": "string"
                              },
                              "user": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "email": {
                                    "type": "string"
                                  },
                                  "emailVerified": {
                                    "type": "string"
                                  },
                                  "image": {
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "type": "string"
                                  },
                                  "userType": {
                                    "type": "string",
                                    "enum": [
                                      "CALL_CENTER_REP",
                                      "CUSTOMER",
                                      "FINANCIAL_REP"
                                    ]
                                  },
                                  "stripeCustomerId": {
                                    "type": "string"
                                  },
                                  "stripeSubscriptionId": {
                                    "type": "string"
                                  },
                                  "stripePriceId": {
                                    "type": "string"
                                  },
                                  "stripeCurrentPeriodEnd": {
                                    "type": "string"
                                  },
                                  "interactions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "interactionType": {
                                          "type": "string",
                                          "enum": [
                                            "CALL",
                                            "CHAT",
                                            "EMAIL",
                                            "WEB_USAGE",
                                            "IVR_HUGO_USAGE",
                                            "OUTBOUND_CORRESPONDENCE",
                                            "MARKETING_MATERIAL",
                                            "TEXT"
                                          ]
                                        },
                                        "content": {
                                          "type": "string"
                                        },
                                        "timestamp": {
                                          "type": "string"
                                        },
                                        "userId": {
                                          "type": "string"
                                        },
                                        "widgetId": {
                                          "type": "string"
                                        },
                                        "Widget": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "embeddedIn": {
                                              "type": "string"
                                            },
                                            "_count": {
                                              "type": "object",
                                              "properties": {
                                                "interactions": {
                                                  "type": "integer"
                                                }
                                              },
                                              "additionalProperties": false,
                                              "required": [
                                                "interactions"
                                              ]
                                            }
                                          },
                                          "additionalProperties": false,
                                          "required": [
                                            "id",
                                            "embeddedIn",
                                            "_count"
                                          ]
                                        }
                                      },
                                      "additionalProperties": false,
                                      "required": [
                                        "id",
                                        "interactionType",
                                        "content",
                                        "timestamp",
                                        "userId"
                                      ]
                                    }
                                  },
                                  "accounts": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "userId": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "type": "string"
                                        },
                                        "provider": {
                                          "type": "string"
                                        },
                                        "providerAccountId": {
                                          "type": "string"
                                        },
                                        "refresh_token": {
                                          "type": "string"
                                        },
                                        "access_token": {
                                          "type": "string"
                                        },
                                        "expires_at": {
                                          "type": "integer"
                                        },
                                        "token_type": {
                                          "type": "string"
                                        },
                                        "scope": {
                                          "type": "string"
                                        },
                                        "id_token": {
                                          "type": "string"
                                        },
                                        "session_state": {
                                          "type": "string"
                                        },
                                        "createdAt": {
                                          "type": "string"
                                        },
                                        "updatedAt": {
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false,
                                      "required": [
                                        "id",
                                        "userId",
                                        "type",
                                        "provider",
                                        "providerAccountId",
                                        "createdAt",
                                        "updatedAt"
                                      ]
                                    }
                                  },
                                  "_count": {
                                    "type": "object",
                                    "properties": {
                                      "interactions": {
                                        "type": "integer"
                                      },
                                      "accounts": {
                                        "type": "integer"
                                      },
                                      "sessions": {
                                        "type": "integer"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "interactions",
                                      "accounts",
                                      "sessions"
                                    ]
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "createdAt",
                                  "updatedAt",
                                  "_count"
                                ]
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "id",
                              "sessionToken",
                              "userId",
                              "expires",
                              "user"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "customerCommunication_findManySession"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/FindManyUser": {
      "get": {
        "operationId": "CustomerCommunicationFindManyUser",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findManyUser_interactions_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findManyUser_interactions_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findManyUser_interactions_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findManyUser_interactions_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findManyUser_accounts_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findManyUser_accounts_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findManyUser_accounts_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findManyUser_accounts_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findManyUser_sessions_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findManyUser_sessions_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findManyUser_sessions_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findManyUser_sessions_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_findManyUser": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string"
                              },
                              "emailVerified": {
                                "type": "string"
                              },
                              "image": {
                                "type": "string"
                              },
                              "createdAt": {
                                "type": "string"
                              },
                              "updatedAt": {
                                "type": "string"
                              },
                              "userType": {
                                "type": "string",
                                "enum": [
                                  "CALL_CENTER_REP",
                                  "CUSTOMER",
                                  "FINANCIAL_REP"
                                ]
                              },
                              "stripeCustomerId": {
                                "type": "string"
                              },
                              "stripeSubscriptionId": {
                                "type": "string"
                              },
                              "stripePriceId": {
                                "type": "string"
                              },
                              "stripeCurrentPeriodEnd": {
                                "type": "string"
                              },
                              "interactions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "interactionType": {
                                      "type": "string",
                                      "enum": [
                                        "CALL",
                                        "CHAT",
                                        "EMAIL",
                                        "WEB_USAGE",
                                        "IVR_HUGO_USAGE",
                                        "OUTBOUND_CORRESPONDENCE",
                                        "MARKETING_MATERIAL",
                                        "TEXT"
                                      ]
                                    },
                                    "content": {
                                      "type": "string"
                                    },
                                    "timestamp": {
                                      "type": "string"
                                    },
                                    "userId": {
                                      "type": "string"
                                    },
                                    "widgetId": {
                                      "type": "string"
                                    },
                                    "Widget": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "embeddedIn": {
                                          "type": "string"
                                        },
                                        "_count": {
                                          "type": "object",
                                          "properties": {
                                            "interactions": {
                                              "type": "integer"
                                            }
                                          },
                                          "additionalProperties": false,
                                          "required": [
                                            "interactions"
                                          ]
                                        }
                                      },
                                      "additionalProperties": false,
                                      "required": [
                                        "id",
                                        "embeddedIn",
                                        "_count"
                                      ]
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "id",
                                    "interactionType",
                                    "content",
                                    "timestamp",
                                    "userId"
                                  ]
                                }
                              },
                              "accounts": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "userId": {
                                      "type": "string"
                                    },
                                    "type": {
                                      "type": "string"
                                    },
                                    "provider": {
                                      "type": "string"
                                    },
                                    "providerAccountId": {
                                      "type": "string"
                                    },
                                    "refresh_token": {
                                      "type": "string"
                                    },
                                    "access_token": {
                                      "type": "string"
                                    },
                                    "expires_at": {
                                      "type": "integer"
                                    },
                                    "token_type": {
                                      "type": "string"
                                    },
                                    "scope": {
                                      "type": "string"
                                    },
                                    "id_token": {
                                      "type": "string"
                                    },
                                    "session_state": {
                                      "type": "string"
                                    },
                                    "createdAt": {
                                      "type": "string"
                                    },
                                    "updatedAt": {
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "id",
                                    "userId",
                                    "type",
                                    "provider",
                                    "providerAccountId",
                                    "createdAt",
                                    "updatedAt"
                                  ]
                                }
                              },
                              "sessions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "sessionToken": {
                                      "type": "string"
                                    },
                                    "userId": {
                                      "type": "string"
                                    },
                                    "expires": {
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "id",
                                    "sessionToken",
                                    "userId",
                                    "expires"
                                  ]
                                }
                              },
                              "_count": {
                                "type": "object",
                                "properties": {
                                  "interactions": {
                                    "type": "integer"
                                  },
                                  "accounts": {
                                    "type": "integer"
                                  },
                                  "sessions": {
                                    "type": "integer"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "interactions",
                                  "accounts",
                                  "sessions"
                                ]
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "id",
                              "createdAt",
                              "updatedAt",
                              "_count"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "customerCommunication_findManyUser"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/FindManyVerificationToken": {
      "get": {
        "operationId": "CustomerCommunicationFindManyVerificationToken",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_findManyVerificationToken": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "identifier": {
                                "type": "string"
                              },
                              "token": {
                                "type": "string"
                              },
                              "expires": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "identifier",
                              "token",
                              "expires"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "customerCommunication_findManyVerificationToken"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/FindManyWidget": {
      "get": {
        "operationId": "CustomerCommunicationFindManyWidget",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findManyWidget_interactions_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findManyWidget_interactions_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findManyWidget_interactions_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findManyWidget_interactions_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findManyWidget_interactions_interactions_user_user_accounts_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findManyWidget_interactions_interactions_user_user_accounts_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findManyWidget_interactions_interactions_user_user_accounts_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findManyWidget_interactions_interactions_user_user_accounts_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findManyWidget_interactions_interactions_user_user_sessions_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findManyWidget_interactions_interactions_user_user_sessions_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findManyWidget_interactions_interactions_user_user_sessions_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findManyWidget_interactions_interactions_user_user_sessions_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_findManyWidget": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "embeddedIn": {
                                "type": "string"
                              },
                              "interactions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "interactionType": {
                                      "type": "string",
                                      "enum": [
                                        "CALL",
                                        "CHAT",
                                        "EMAIL",
                                        "WEB_USAGE",
                                        "IVR_HUGO_USAGE",
                                        "OUTBOUND_CORRESPONDENCE",
                                        "MARKETING_MATERIAL",
                                        "TEXT"
                                      ]
                                    },
                                    "content": {
                                      "type": "string"
                                    },
                                    "timestamp": {
                                      "type": "string"
                                    },
                                    "userId": {
                                      "type": "string"
                                    },
                                    "widgetId": {
                                      "type": "string"
                                    },
                                    "user": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "name": {
                                          "type": "string"
                                        },
                                        "email": {
                                          "type": "string"
                                        },
                                        "emailVerified": {
                                          "type": "string"
                                        },
                                        "image": {
                                          "type": "string"
                                        },
                                        "createdAt": {
                                          "type": "string"
                                        },
                                        "updatedAt": {
                                          "type": "string"
                                        },
                                        "userType": {
                                          "type": "string",
                                          "enum": [
                                            "CALL_CENTER_REP",
                                            "CUSTOMER",
                                            "FINANCIAL_REP"
                                          ]
                                        },
                                        "stripeCustomerId": {
                                          "type": "string"
                                        },
                                        "stripeSubscriptionId": {
                                          "type": "string"
                                        },
                                        "stripePriceId": {
                                          "type": "string"
                                        },
                                        "stripeCurrentPeriodEnd": {
                                          "type": "string"
                                        },
                                        "accounts": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "type": "string"
                                              },
                                              "userId": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "type": "string"
                                              },
                                              "provider": {
                                                "type": "string"
                                              },
                                              "providerAccountId": {
                                                "type": "string"
                                              },
                                              "refresh_token": {
                                                "type": "string"
                                              },
                                              "access_token": {
                                                "type": "string"
                                              },
                                              "expires_at": {
                                                "type": "integer"
                                              },
                                              "token_type": {
                                                "type": "string"
                                              },
                                              "scope": {
                                                "type": "string"
                                              },
                                              "id_token": {
                                                "type": "string"
                                              },
                                              "session_state": {
                                                "type": "string"
                                              },
                                              "createdAt": {
                                                "type": "string"
                                              },
                                              "updatedAt": {
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false,
                                            "required": [
                                              "id",
                                              "userId",
                                              "type",
                                              "provider",
                                              "providerAccountId",
                                              "createdAt",
                                              "updatedAt"
                                            ]
                                          }
                                        },
                                        "sessions": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "type": "string"
                                              },
                                              "sessionToken": {
                                                "type": "string"
                                              },
                                              "userId": {
                                                "type": "string"
                                              },
                                              "expires": {
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false,
                                            "required": [
                                              "id",
                                              "sessionToken",
                                              "userId",
                                              "expires"
                                            ]
                                          }
                                        },
                                        "_count": {
                                          "type": "object",
                                          "properties": {
                                            "interactions": {
                                              "type": "integer"
                                            },
                                            "accounts": {
                                              "type": "integer"
                                            },
                                            "sessions": {
                                              "type": "integer"
                                            }
                                          },
                                          "additionalProperties": false,
                                          "required": [
                                            "interactions",
                                            "accounts",
                                            "sessions"
                                          ]
                                        }
                                      },
                                      "additionalProperties": false,
                                      "required": [
                                        "id",
                                        "createdAt",
                                        "updatedAt",
                                        "_count"
                                      ]
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "id",
                                    "interactionType",
                                    "content",
                                    "timestamp",
                                    "userId",
                                    "user"
                                  ]
                                }
                              },
                              "_count": {
                                "type": "object",
                                "properties": {
                                  "interactions": {
                                    "type": "integer"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "interactions"
                                ]
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "id",
                              "embeddedIn",
                              "_count"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "customerCommunication_findManyWidget"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/FindUniqueAccount": {
      "get": {
        "operationId": "CustomerCommunicationFindUniqueAccount",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "customerCommunication_findUniqueAccount_user_user_interactions_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueAccount_user_user_interactions_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueAccount_user_user_interactions_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueAccount_user_user_interactions_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueAccount_user_user_sessions_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueAccount_user_user_sessions_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueAccount_user_user_sessions_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueAccount_user_user_sessions_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_findUniqueAccount": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "provider": {
                              "type": "string"
                            },
                            "providerAccountId": {
                              "type": "string"
                            },
                            "refresh_token": {
                              "type": "string"
                            },
                            "access_token": {
                              "type": "string"
                            },
                            "expires_at": {
                              "type": "integer"
                            },
                            "token_type": {
                              "type": "string"
                            },
                            "scope": {
                              "type": "string"
                            },
                            "id_token": {
                              "type": "string"
                            },
                            "session_state": {
                              "type": "string"
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            },
                            "user": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "email": {
                                  "type": "string"
                                },
                                "emailVerified": {
                                  "type": "string"
                                },
                                "image": {
                                  "type": "string"
                                },
                                "createdAt": {
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "type": "string"
                                },
                                "userType": {
                                  "type": "string",
                                  "enum": [
                                    "CALL_CENTER_REP",
                                    "CUSTOMER",
                                    "FINANCIAL_REP"
                                  ]
                                },
                                "stripeCustomerId": {
                                  "type": "string"
                                },
                                "stripeSubscriptionId": {
                                  "type": "string"
                                },
                                "stripePriceId": {
                                  "type": "string"
                                },
                                "stripeCurrentPeriodEnd": {
                                  "type": "string"
                                },
                                "interactions": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "interactionType": {
                                        "type": "string",
                                        "enum": [
                                          "CALL",
                                          "CHAT",
                                          "EMAIL",
                                          "WEB_USAGE",
                                          "IVR_HUGO_USAGE",
                                          "OUTBOUND_CORRESPONDENCE",
                                          "MARKETING_MATERIAL",
                                          "TEXT"
                                        ]
                                      },
                                      "content": {
                                        "type": "string"
                                      },
                                      "timestamp": {
                                        "type": "string"
                                      },
                                      "userId": {
                                        "type": "string"
                                      },
                                      "widgetId": {
                                        "type": "string"
                                      },
                                      "Widget": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "embeddedIn": {
                                            "type": "string"
                                          },
                                          "_count": {
                                            "type": "object",
                                            "properties": {
                                              "interactions": {
                                                "type": "integer"
                                              }
                                            },
                                            "additionalProperties": false,
                                            "required": [
                                              "interactions"
                                            ]
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "id",
                                          "embeddedIn",
                                          "_count"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "interactionType",
                                      "content",
                                      "timestamp",
                                      "userId"
                                    ]
                                  }
                                },
                                "sessions": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "sessionToken": {
                                        "type": "string"
                                      },
                                      "userId": {
                                        "type": "string"
                                      },
                                      "expires": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "sessionToken",
                                      "userId",
                                      "expires"
                                    ]
                                  }
                                },
                                "_count": {
                                  "type": "object",
                                  "properties": {
                                    "interactions": {
                                      "type": "integer"
                                    },
                                    "accounts": {
                                      "type": "integer"
                                    },
                                    "sessions": {
                                      "type": "integer"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "interactions",
                                    "accounts",
                                    "sessions"
                                  ]
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "createdAt",
                                "updatedAt",
                                "_count"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "userId",
                            "type",
                            "provider",
                            "providerAccountId",
                            "createdAt",
                            "updatedAt",
                            "user"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/FindUniqueAccountOrThrow": {
      "get": {
        "operationId": "CustomerCommunicationFindUniqueAccountOrThrow",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "customerCommunication_findUniqueAccountOrThrow_user_user_interactions_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueAccountOrThrow_user_user_interactions_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueAccountOrThrow_user_user_interactions_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueAccountOrThrow_user_user_interactions_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueAccountOrThrow_user_user_sessions_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueAccountOrThrow_user_user_sessions_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueAccountOrThrow_user_user_sessions_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueAccountOrThrow_user_user_sessions_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_findUniqueAccountOrThrow": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "provider": {
                              "type": "string"
                            },
                            "providerAccountId": {
                              "type": "string"
                            },
                            "refresh_token": {
                              "type": "string"
                            },
                            "access_token": {
                              "type": "string"
                            },
                            "expires_at": {
                              "type": "integer"
                            },
                            "token_type": {
                              "type": "string"
                            },
                            "scope": {
                              "type": "string"
                            },
                            "id_token": {
                              "type": "string"
                            },
                            "session_state": {
                              "type": "string"
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            },
                            "user": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "email": {
                                  "type": "string"
                                },
                                "emailVerified": {
                                  "type": "string"
                                },
                                "image": {
                                  "type": "string"
                                },
                                "createdAt": {
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "type": "string"
                                },
                                "userType": {
                                  "type": "string",
                                  "enum": [
                                    "CALL_CENTER_REP",
                                    "CUSTOMER",
                                    "FINANCIAL_REP"
                                  ]
                                },
                                "stripeCustomerId": {
                                  "type": "string"
                                },
                                "stripeSubscriptionId": {
                                  "type": "string"
                                },
                                "stripePriceId": {
                                  "type": "string"
                                },
                                "stripeCurrentPeriodEnd": {
                                  "type": "string"
                                },
                                "interactions": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "interactionType": {
                                        "type": "string",
                                        "enum": [
                                          "CALL",
                                          "CHAT",
                                          "EMAIL",
                                          "WEB_USAGE",
                                          "IVR_HUGO_USAGE",
                                          "OUTBOUND_CORRESPONDENCE",
                                          "MARKETING_MATERIAL",
                                          "TEXT"
                                        ]
                                      },
                                      "content": {
                                        "type": "string"
                                      },
                                      "timestamp": {
                                        "type": "string"
                                      },
                                      "userId": {
                                        "type": "string"
                                      },
                                      "widgetId": {
                                        "type": "string"
                                      },
                                      "Widget": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "embeddedIn": {
                                            "type": "string"
                                          },
                                          "_count": {
                                            "type": "object",
                                            "properties": {
                                              "interactions": {
                                                "type": "integer"
                                              }
                                            },
                                            "additionalProperties": false,
                                            "required": [
                                              "interactions"
                                            ]
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "id",
                                          "embeddedIn",
                                          "_count"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "interactionType",
                                      "content",
                                      "timestamp",
                                      "userId"
                                    ]
                                  }
                                },
                                "sessions": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "sessionToken": {
                                        "type": "string"
                                      },
                                      "userId": {
                                        "type": "string"
                                      },
                                      "expires": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "sessionToken",
                                      "userId",
                                      "expires"
                                    ]
                                  }
                                },
                                "_count": {
                                  "type": "object",
                                  "properties": {
                                    "interactions": {
                                      "type": "integer"
                                    },
                                    "accounts": {
                                      "type": "integer"
                                    },
                                    "sessions": {
                                      "type": "integer"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "interactions",
                                    "accounts",
                                    "sessions"
                                  ]
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "createdAt",
                                "updatedAt",
                                "_count"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "userId",
                            "type",
                            "provider",
                            "providerAccountId",
                            "createdAt",
                            "updatedAt",
                            "user"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/FindUniqueFilter": {
      "get": {
        "operationId": "CustomerCommunicationFindUniqueFilter",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_findUniqueFilter": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "audience": {
                              "type": "string",
                              "enum": [
                                "CALL_CENTER",
                                "CLIENT_PORTAL",
                                "GUARDIAN_ONLINE",
                                "GPAC",
                                "SMART_OFFICE",
                                "LIVING_BALANCE_SHEET"
                              ]
                            },
                            "output": {
                              "type": "string",
                              "enum": [
                                "CALLS",
                                "CHATS",
                                "EMAILS",
                                "WEB_USAGE",
                                "IVR_HUGO_USAGE",
                                "OUTBOUND_CORRESPONDENCE",
                                "MARKETING_MATERIALS",
                                "TEXTS"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "audience",
                            "output"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/FindUniqueFilterOrThrow": {
      "get": {
        "operationId": "CustomerCommunicationFindUniqueFilterOrThrow",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_findUniqueFilterOrThrow": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "audience": {
                              "type": "string",
                              "enum": [
                                "CALL_CENTER",
                                "CLIENT_PORTAL",
                                "GUARDIAN_ONLINE",
                                "GPAC",
                                "SMART_OFFICE",
                                "LIVING_BALANCE_SHEET"
                              ]
                            },
                            "output": {
                              "type": "string",
                              "enum": [
                                "CALLS",
                                "CHATS",
                                "EMAILS",
                                "WEB_USAGE",
                                "IVR_HUGO_USAGE",
                                "OUTBOUND_CORRESPONDENCE",
                                "MARKETING_MATERIALS",
                                "TEXTS"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "audience",
                            "output"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/FindUniqueInteraction": {
      "get": {
        "operationId": "CustomerCommunicationFindUniqueInteraction",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "customerCommunication_findUniqueInteraction_user_user_accounts_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueInteraction_user_user_accounts_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueInteraction_user_user_accounts_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueInteraction_user_user_accounts_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueInteraction_user_user_sessions_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueInteraction_user_user_sessions_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueInteraction_user_user_sessions_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueInteraction_user_user_sessions_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_findUniqueInteraction": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "interactionType": {
                              "type": "string",
                              "enum": [
                                "CALL",
                                "CHAT",
                                "EMAIL",
                                "WEB_USAGE",
                                "IVR_HUGO_USAGE",
                                "OUTBOUND_CORRESPONDENCE",
                                "MARKETING_MATERIAL",
                                "TEXT"
                              ]
                            },
                            "content": {
                              "type": "string"
                            },
                            "timestamp": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            },
                            "widgetId": {
                              "type": "string"
                            },
                            "user": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "email": {
                                  "type": "string"
                                },
                                "emailVerified": {
                                  "type": "string"
                                },
                                "image": {
                                  "type": "string"
                                },
                                "createdAt": {
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "type": "string"
                                },
                                "userType": {
                                  "type": "string",
                                  "enum": [
                                    "CALL_CENTER_REP",
                                    "CUSTOMER",
                                    "FINANCIAL_REP"
                                  ]
                                },
                                "stripeCustomerId": {
                                  "type": "string"
                                },
                                "stripeSubscriptionId": {
                                  "type": "string"
                                },
                                "stripePriceId": {
                                  "type": "string"
                                },
                                "stripeCurrentPeriodEnd": {
                                  "type": "string"
                                },
                                "accounts": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "userId": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      },
                                      "provider": {
                                        "type": "string"
                                      },
                                      "providerAccountId": {
                                        "type": "string"
                                      },
                                      "refresh_token": {
                                        "type": "string"
                                      },
                                      "access_token": {
                                        "type": "string"
                                      },
                                      "expires_at": {
                                        "type": "integer"
                                      },
                                      "token_type": {
                                        "type": "string"
                                      },
                                      "scope": {
                                        "type": "string"
                                      },
                                      "id_token": {
                                        "type": "string"
                                      },
                                      "session_state": {
                                        "type": "string"
                                      },
                                      "createdAt": {
                                        "type": "string"
                                      },
                                      "updatedAt": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "userId",
                                      "type",
                                      "provider",
                                      "providerAccountId",
                                      "createdAt",
                                      "updatedAt"
                                    ]
                                  }
                                },
                                "sessions": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "sessionToken": {
                                        "type": "string"
                                      },
                                      "userId": {
                                        "type": "string"
                                      },
                                      "expires": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "sessionToken",
                                      "userId",
                                      "expires"
                                    ]
                                  }
                                },
                                "_count": {
                                  "type": "object",
                                  "properties": {
                                    "interactions": {
                                      "type": "integer"
                                    },
                                    "accounts": {
                                      "type": "integer"
                                    },
                                    "sessions": {
                                      "type": "integer"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "interactions",
                                    "accounts",
                                    "sessions"
                                  ]
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "createdAt",
                                "updatedAt",
                                "_count"
                              ]
                            },
                            "Widget": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "embeddedIn": {
                                  "type": "string"
                                },
                                "_count": {
                                  "type": "object",
                                  "properties": {
                                    "interactions": {
                                      "type": "integer"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "interactions"
                                  ]
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "embeddedIn",
                                "_count"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "interactionType",
                            "content",
                            "timestamp",
                            "userId",
                            "user"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/FindUniqueInteractionOrThrow": {
      "get": {
        "operationId": "CustomerCommunicationFindUniqueInteractionOrThrow",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "customerCommunication_findUniqueInteractionOrThrow_user_user_accounts_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueInteractionOrThrow_user_user_accounts_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueInteractionOrThrow_user_user_accounts_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueInteractionOrThrow_user_user_accounts_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueInteractionOrThrow_user_user_sessions_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueInteractionOrThrow_user_user_sessions_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueInteractionOrThrow_user_user_sessions_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueInteractionOrThrow_user_user_sessions_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_findUniqueInteractionOrThrow": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "interactionType": {
                              "type": "string",
                              "enum": [
                                "CALL",
                                "CHAT",
                                "EMAIL",
                                "WEB_USAGE",
                                "IVR_HUGO_USAGE",
                                "OUTBOUND_CORRESPONDENCE",
                                "MARKETING_MATERIAL",
                                "TEXT"
                              ]
                            },
                            "content": {
                              "type": "string"
                            },
                            "timestamp": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            },
                            "widgetId": {
                              "type": "string"
                            },
                            "user": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "email": {
                                  "type": "string"
                                },
                                "emailVerified": {
                                  "type": "string"
                                },
                                "image": {
                                  "type": "string"
                                },
                                "createdAt": {
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "type": "string"
                                },
                                "userType": {
                                  "type": "string",
                                  "enum": [
                                    "CALL_CENTER_REP",
                                    "CUSTOMER",
                                    "FINANCIAL_REP"
                                  ]
                                },
                                "stripeCustomerId": {
                                  "type": "string"
                                },
                                "stripeSubscriptionId": {
                                  "type": "string"
                                },
                                "stripePriceId": {
                                  "type": "string"
                                },
                                "stripeCurrentPeriodEnd": {
                                  "type": "string"
                                },
                                "accounts": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "userId": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      },
                                      "provider": {
                                        "type": "string"
                                      },
                                      "providerAccountId": {
                                        "type": "string"
                                      },
                                      "refresh_token": {
                                        "type": "string"
                                      },
                                      "access_token": {
                                        "type": "string"
                                      },
                                      "expires_at": {
                                        "type": "integer"
                                      },
                                      "token_type": {
                                        "type": "string"
                                      },
                                      "scope": {
                                        "type": "string"
                                      },
                                      "id_token": {
                                        "type": "string"
                                      },
                                      "session_state": {
                                        "type": "string"
                                      },
                                      "createdAt": {
                                        "type": "string"
                                      },
                                      "updatedAt": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "userId",
                                      "type",
                                      "provider",
                                      "providerAccountId",
                                      "createdAt",
                                      "updatedAt"
                                    ]
                                  }
                                },
                                "sessions": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "sessionToken": {
                                        "type": "string"
                                      },
                                      "userId": {
                                        "type": "string"
                                      },
                                      "expires": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "sessionToken",
                                      "userId",
                                      "expires"
                                    ]
                                  }
                                },
                                "_count": {
                                  "type": "object",
                                  "properties": {
                                    "interactions": {
                                      "type": "integer"
                                    },
                                    "accounts": {
                                      "type": "integer"
                                    },
                                    "sessions": {
                                      "type": "integer"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "interactions",
                                    "accounts",
                                    "sessions"
                                  ]
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "createdAt",
                                "updatedAt",
                                "_count"
                              ]
                            },
                            "Widget": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "embeddedIn": {
                                  "type": "string"
                                },
                                "_count": {
                                  "type": "object",
                                  "properties": {
                                    "interactions": {
                                      "type": "integer"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "interactions"
                                  ]
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "embeddedIn",
                                "_count"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "interactionType",
                            "content",
                            "timestamp",
                            "userId",
                            "user"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/FindUniqueSession": {
      "get": {
        "operationId": "CustomerCommunicationFindUniqueSession",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "customerCommunication_findUniqueSession_user_user_interactions_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueSession_user_user_interactions_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueSession_user_user_interactions_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueSession_user_user_interactions_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueSession_user_user_accounts_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueSession_user_user_accounts_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueSession_user_user_accounts_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueSession_user_user_accounts_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_findUniqueSession": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "sessionToken": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            },
                            "expires": {
                              "type": "string"
                            },
                            "user": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "email": {
                                  "type": "string"
                                },
                                "emailVerified": {
                                  "type": "string"
                                },
                                "image": {
                                  "type": "string"
                                },
                                "createdAt": {
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "type": "string"
                                },
                                "userType": {
                                  "type": "string",
                                  "enum": [
                                    "CALL_CENTER_REP",
                                    "CUSTOMER",
                                    "FINANCIAL_REP"
                                  ]
                                },
                                "stripeCustomerId": {
                                  "type": "string"
                                },
                                "stripeSubscriptionId": {
                                  "type": "string"
                                },
                                "stripePriceId": {
                                  "type": "string"
                                },
                                "stripeCurrentPeriodEnd": {
                                  "type": "string"
                                },
                                "interactions": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "interactionType": {
                                        "type": "string",
                                        "enum": [
                                          "CALL",
                                          "CHAT",
                                          "EMAIL",
                                          "WEB_USAGE",
                                          "IVR_HUGO_USAGE",
                                          "OUTBOUND_CORRESPONDENCE",
                                          "MARKETING_MATERIAL",
                                          "TEXT"
                                        ]
                                      },
                                      "content": {
                                        "type": "string"
                                      },
                                      "timestamp": {
                                        "type": "string"
                                      },
                                      "userId": {
                                        "type": "string"
                                      },
                                      "widgetId": {
                                        "type": "string"
                                      },
                                      "Widget": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "embeddedIn": {
                                            "type": "string"
                                          },
                                          "_count": {
                                            "type": "object",
                                            "properties": {
                                              "interactions": {
                                                "type": "integer"
                                              }
                                            },
                                            "additionalProperties": false,
                                            "required": [
                                              "interactions"
                                            ]
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "id",
                                          "embeddedIn",
                                          "_count"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "interactionType",
                                      "content",
                                      "timestamp",
                                      "userId"
                                    ]
                                  }
                                },
                                "accounts": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "userId": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      },
                                      "provider": {
                                        "type": "string"
                                      },
                                      "providerAccountId": {
                                        "type": "string"
                                      },
                                      "refresh_token": {
                                        "type": "string"
                                      },
                                      "access_token": {
                                        "type": "string"
                                      },
                                      "expires_at": {
                                        "type": "integer"
                                      },
                                      "token_type": {
                                        "type": "string"
                                      },
                                      "scope": {
                                        "type": "string"
                                      },
                                      "id_token": {
                                        "type": "string"
                                      },
                                      "session_state": {
                                        "type": "string"
                                      },
                                      "createdAt": {
                                        "type": "string"
                                      },
                                      "updatedAt": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "userId",
                                      "type",
                                      "provider",
                                      "providerAccountId",
                                      "createdAt",
                                      "updatedAt"
                                    ]
                                  }
                                },
                                "_count": {
                                  "type": "object",
                                  "properties": {
                                    "interactions": {
                                      "type": "integer"
                                    },
                                    "accounts": {
                                      "type": "integer"
                                    },
                                    "sessions": {
                                      "type": "integer"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "interactions",
                                    "accounts",
                                    "sessions"
                                  ]
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "createdAt",
                                "updatedAt",
                                "_count"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "sessionToken",
                            "userId",
                            "expires",
                            "user"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/FindUniqueSessionOrThrow": {
      "get": {
        "operationId": "CustomerCommunicationFindUniqueSessionOrThrow",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "customerCommunication_findUniqueSessionOrThrow_user_user_interactions_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueSessionOrThrow_user_user_interactions_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueSessionOrThrow_user_user_interactions_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueSessionOrThrow_user_user_interactions_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueSessionOrThrow_user_user_accounts_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueSessionOrThrow_user_user_accounts_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueSessionOrThrow_user_user_accounts_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueSessionOrThrow_user_user_accounts_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_findUniqueSessionOrThrow": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "sessionToken": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            },
                            "expires": {
                              "type": "string"
                            },
                            "user": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "email": {
                                  "type": "string"
                                },
                                "emailVerified": {
                                  "type": "string"
                                },
                                "image": {
                                  "type": "string"
                                },
                                "createdAt": {
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "type": "string"
                                },
                                "userType": {
                                  "type": "string",
                                  "enum": [
                                    "CALL_CENTER_REP",
                                    "CUSTOMER",
                                    "FINANCIAL_REP"
                                  ]
                                },
                                "stripeCustomerId": {
                                  "type": "string"
                                },
                                "stripeSubscriptionId": {
                                  "type": "string"
                                },
                                "stripePriceId": {
                                  "type": "string"
                                },
                                "stripeCurrentPeriodEnd": {
                                  "type": "string"
                                },
                                "interactions": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "interactionType": {
                                        "type": "string",
                                        "enum": [
                                          "CALL",
                                          "CHAT",
                                          "EMAIL",
                                          "WEB_USAGE",
                                          "IVR_HUGO_USAGE",
                                          "OUTBOUND_CORRESPONDENCE",
                                          "MARKETING_MATERIAL",
                                          "TEXT"
                                        ]
                                      },
                                      "content": {
                                        "type": "string"
                                      },
                                      "timestamp": {
                                        "type": "string"
                                      },
                                      "userId": {
                                        "type": "string"
                                      },
                                      "widgetId": {
                                        "type": "string"
                                      },
                                      "Widget": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "embeddedIn": {
                                            "type": "string"
                                          },
                                          "_count": {
                                            "type": "object",
                                            "properties": {
                                              "interactions": {
                                                "type": "integer"
                                              }
                                            },
                                            "additionalProperties": false,
                                            "required": [
                                              "interactions"
                                            ]
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "id",
                                          "embeddedIn",
                                          "_count"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "interactionType",
                                      "content",
                                      "timestamp",
                                      "userId"
                                    ]
                                  }
                                },
                                "accounts": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "userId": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      },
                                      "provider": {
                                        "type": "string"
                                      },
                                      "providerAccountId": {
                                        "type": "string"
                                      },
                                      "refresh_token": {
                                        "type": "string"
                                      },
                                      "access_token": {
                                        "type": "string"
                                      },
                                      "expires_at": {
                                        "type": "integer"
                                      },
                                      "token_type": {
                                        "type": "string"
                                      },
                                      "scope": {
                                        "type": "string"
                                      },
                                      "id_token": {
                                        "type": "string"
                                      },
                                      "session_state": {
                                        "type": "string"
                                      },
                                      "createdAt": {
                                        "type": "string"
                                      },
                                      "updatedAt": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "userId",
                                      "type",
                                      "provider",
                                      "providerAccountId",
                                      "createdAt",
                                      "updatedAt"
                                    ]
                                  }
                                },
                                "_count": {
                                  "type": "object",
                                  "properties": {
                                    "interactions": {
                                      "type": "integer"
                                    },
                                    "accounts": {
                                      "type": "integer"
                                    },
                                    "sessions": {
                                      "type": "integer"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "interactions",
                                    "accounts",
                                    "sessions"
                                  ]
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "createdAt",
                                "updatedAt",
                                "_count"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "sessionToken",
                            "userId",
                            "expires",
                            "user"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/FindUniqueUser": {
      "get": {
        "operationId": "CustomerCommunicationFindUniqueUser",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "customerCommunication_findUniqueUser_interactions_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueUser_interactions_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueUser_interactions_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueUser_interactions_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueUser_accounts_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueUser_accounts_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueUser_accounts_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueUser_accounts_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueUser_sessions_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueUser_sessions_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueUser_sessions_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueUser_sessions_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_findUniqueUser": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            },
                            "emailVerified": {
                              "type": "string"
                            },
                            "image": {
                              "type": "string"
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            },
                            "userType": {
                              "type": "string",
                              "enum": [
                                "CALL_CENTER_REP",
                                "CUSTOMER",
                                "FINANCIAL_REP"
                              ]
                            },
                            "stripeCustomerId": {
                              "type": "string"
                            },
                            "stripeSubscriptionId": {
                              "type": "string"
                            },
                            "stripePriceId": {
                              "type": "string"
                            },
                            "stripeCurrentPeriodEnd": {
                              "type": "string"
                            },
                            "interactions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "interactionType": {
                                    "type": "string",
                                    "enum": [
                                      "CALL",
                                      "CHAT",
                                      "EMAIL",
                                      "WEB_USAGE",
                                      "IVR_HUGO_USAGE",
                                      "OUTBOUND_CORRESPONDENCE",
                                      "MARKETING_MATERIAL",
                                      "TEXT"
                                    ]
                                  },
                                  "content": {
                                    "type": "string"
                                  },
                                  "timestamp": {
                                    "type": "string"
                                  },
                                  "userId": {
                                    "type": "string"
                                  },
                                  "widgetId": {
                                    "type": "string"
                                  },
                                  "Widget": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "embeddedIn": {
                                        "type": "string"
                                      },
                                      "_count": {
                                        "type": "object",
                                        "properties": {
                                          "interactions": {
                                            "type": "integer"
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "interactions"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "embeddedIn",
                                      "_count"
                                    ]
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "interactionType",
                                  "content",
                                  "timestamp",
                                  "userId"
                                ]
                              }
                            },
                            "accounts": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "userId": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  },
                                  "provider": {
                                    "type": "string"
                                  },
                                  "providerAccountId": {
                                    "type": "string"
                                  },
                                  "refresh_token": {
                                    "type": "string"
                                  },
                                  "access_token": {
                                    "type": "string"
                                  },
                                  "expires_at": {
                                    "type": "integer"
                                  },
                                  "token_type": {
                                    "type": "string"
                                  },
                                  "scope": {
                                    "type": "string"
                                  },
                                  "id_token": {
                                    "type": "string"
                                  },
                                  "session_state": {
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "userId",
                                  "type",
                                  "provider",
                                  "providerAccountId",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              }
                            },
                            "sessions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "sessionToken": {
                                    "type": "string"
                                  },
                                  "userId": {
                                    "type": "string"
                                  },
                                  "expires": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "sessionToken",
                                  "userId",
                                  "expires"
                                ]
                              }
                            },
                            "_count": {
                              "type": "object",
                              "properties": {
                                "interactions": {
                                  "type": "integer"
                                },
                                "accounts": {
                                  "type": "integer"
                                },
                                "sessions": {
                                  "type": "integer"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "interactions",
                                "accounts",
                                "sessions"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "createdAt",
                            "updatedAt",
                            "_count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/FindUniqueUserOrThrow": {
      "get": {
        "operationId": "CustomerCommunicationFindUniqueUserOrThrow",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "customerCommunication_findUniqueUserOrThrow_interactions_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueUserOrThrow_interactions_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueUserOrThrow_interactions_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueUserOrThrow_interactions_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueUserOrThrow_accounts_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueUserOrThrow_accounts_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueUserOrThrow_accounts_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueUserOrThrow_accounts_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueUserOrThrow_sessions_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueUserOrThrow_sessions_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueUserOrThrow_sessions_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueUserOrThrow_sessions_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_findUniqueUserOrThrow": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            },
                            "emailVerified": {
                              "type": "string"
                            },
                            "image": {
                              "type": "string"
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            },
                            "userType": {
                              "type": "string",
                              "enum": [
                                "CALL_CENTER_REP",
                                "CUSTOMER",
                                "FINANCIAL_REP"
                              ]
                            },
                            "stripeCustomerId": {
                              "type": "string"
                            },
                            "stripeSubscriptionId": {
                              "type": "string"
                            },
                            "stripePriceId": {
                              "type": "string"
                            },
                            "stripeCurrentPeriodEnd": {
                              "type": "string"
                            },
                            "interactions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "interactionType": {
                                    "type": "string",
                                    "enum": [
                                      "CALL",
                                      "CHAT",
                                      "EMAIL",
                                      "WEB_USAGE",
                                      "IVR_HUGO_USAGE",
                                      "OUTBOUND_CORRESPONDENCE",
                                      "MARKETING_MATERIAL",
                                      "TEXT"
                                    ]
                                  },
                                  "content": {
                                    "type": "string"
                                  },
                                  "timestamp": {
                                    "type": "string"
                                  },
                                  "userId": {
                                    "type": "string"
                                  },
                                  "widgetId": {
                                    "type": "string"
                                  },
                                  "Widget": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "embeddedIn": {
                                        "type": "string"
                                      },
                                      "_count": {
                                        "type": "object",
                                        "properties": {
                                          "interactions": {
                                            "type": "integer"
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "interactions"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "embeddedIn",
                                      "_count"
                                    ]
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "interactionType",
                                  "content",
                                  "timestamp",
                                  "userId"
                                ]
                              }
                            },
                            "accounts": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "userId": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  },
                                  "provider": {
                                    "type": "string"
                                  },
                                  "providerAccountId": {
                                    "type": "string"
                                  },
                                  "refresh_token": {
                                    "type": "string"
                                  },
                                  "access_token": {
                                    "type": "string"
                                  },
                                  "expires_at": {
                                    "type": "integer"
                                  },
                                  "token_type": {
                                    "type": "string"
                                  },
                                  "scope": {
                                    "type": "string"
                                  },
                                  "id_token": {
                                    "type": "string"
                                  },
                                  "session_state": {
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "userId",
                                  "type",
                                  "provider",
                                  "providerAccountId",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              }
                            },
                            "sessions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "sessionToken": {
                                    "type": "string"
                                  },
                                  "userId": {
                                    "type": "string"
                                  },
                                  "expires": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "sessionToken",
                                  "userId",
                                  "expires"
                                ]
                              }
                            },
                            "_count": {
                              "type": "object",
                              "properties": {
                                "interactions": {
                                  "type": "integer"
                                },
                                "accounts": {
                                  "type": "integer"
                                },
                                "sessions": {
                                  "type": "integer"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "interactions",
                                "accounts",
                                "sessions"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "createdAt",
                            "updatedAt",
                            "_count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/FindUniqueVerificationToken": {
      "get": {
        "operationId": "CustomerCommunicationFindUniqueVerificationToken",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_findUniqueVerificationToken": {
                          "type": "object",
                          "properties": {
                            "identifier": {
                              "type": "string"
                            },
                            "token": {
                              "type": "string"
                            },
                            "expires": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "identifier",
                            "token",
                            "expires"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/FindUniqueVerificationTokenOrThrow": {
      "get": {
        "operationId": "CustomerCommunicationFindUniqueVerificationTokenOrThrow",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_findUniqueVerificationTokenOrThrow": {
                          "type": "object",
                          "properties": {
                            "identifier": {
                              "type": "string"
                            },
                            "token": {
                              "type": "string"
                            },
                            "expires": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "identifier",
                            "token",
                            "expires"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/FindUniqueWidget": {
      "get": {
        "operationId": "CustomerCommunicationFindUniqueWidget",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "customerCommunication_findUniqueWidget_interactions_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueWidget_interactions_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueWidget_interactions_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueWidget_interactions_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueWidget_interactions_interactions_user_user_accounts_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueWidget_interactions_interactions_user_user_accounts_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueWidget_interactions_interactions_user_user_accounts_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueWidget_interactions_interactions_user_user_accounts_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueWidget_interactions_interactions_user_user_sessions_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueWidget_interactions_interactions_user_user_sessions_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueWidget_interactions_interactions_user_user_sessions_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueWidget_interactions_interactions_user_user_sessions_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_findUniqueWidget": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "embeddedIn": {
                              "type": "string"
                            },
                            "interactions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "interactionType": {
                                    "type": "string",
                                    "enum": [
                                      "CALL",
                                      "CHAT",
                                      "EMAIL",
                                      "WEB_USAGE",
                                      "IVR_HUGO_USAGE",
                                      "OUTBOUND_CORRESPONDENCE",
                                      "MARKETING_MATERIAL",
                                      "TEXT"
                                    ]
                                  },
                                  "content": {
                                    "type": "string"
                                  },
                                  "timestamp": {
                                    "type": "string"
                                  },
                                  "userId": {
                                    "type": "string"
                                  },
                                  "widgetId": {
                                    "type": "string"
                                  },
                                  "user": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "email": {
                                        "type": "string"
                                      },
                                      "emailVerified": {
                                        "type": "string"
                                      },
                                      "image": {
                                        "type": "string"
                                      },
                                      "createdAt": {
                                        "type": "string"
                                      },
                                      "updatedAt": {
                                        "type": "string"
                                      },
                                      "userType": {
                                        "type": "string",
                                        "enum": [
                                          "CALL_CENTER_REP",
                                          "CUSTOMER",
                                          "FINANCIAL_REP"
                                        ]
                                      },
                                      "stripeCustomerId": {
                                        "type": "string"
                                      },
                                      "stripeSubscriptionId": {
                                        "type": "string"
                                      },
                                      "stripePriceId": {
                                        "type": "string"
                                      },
                                      "stripeCurrentPeriodEnd": {
                                        "type": "string"
                                      },
                                      "accounts": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "userId": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string"
                                            },
                                            "provider": {
                                              "type": "string"
                                            },
                                            "providerAccountId": {
                                              "type": "string"
                                            },
                                            "refresh_token": {
                                              "type": "string"
                                            },
                                            "access_token": {
                                              "type": "string"
                                            },
                                            "expires_at": {
                                              "type": "integer"
                                            },
                                            "token_type": {
                                              "type": "string"
                                            },
                                            "scope": {
                                              "type": "string"
                                            },
                                            "id_token": {
                                              "type": "string"
                                            },
                                            "session_state": {
                                              "type": "string"
                                            },
                                            "createdAt": {
                                              "type": "string"
                                            },
                                            "updatedAt": {
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false,
                                          "required": [
                                            "id",
                                            "userId",
                                            "type",
                                            "provider",
                                            "providerAccountId",
                                            "createdAt",
                                            "updatedAt"
                                          ]
                                        }
                                      },
                                      "sessions": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "sessionToken": {
                                              "type": "string"
                                            },
                                            "userId": {
                                              "type": "string"
                                            },
                                            "expires": {
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false,
                                          "required": [
                                            "id",
                                            "sessionToken",
                                            "userId",
                                            "expires"
                                          ]
                                        }
                                      },
                                      "_count": {
                                        "type": "object",
                                        "properties": {
                                          "interactions": {
                                            "type": "integer"
                                          },
                                          "accounts": {
                                            "type": "integer"
                                          },
                                          "sessions": {
                                            "type": "integer"
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "interactions",
                                          "accounts",
                                          "sessions"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "createdAt",
                                      "updatedAt",
                                      "_count"
                                    ]
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "interactionType",
                                  "content",
                                  "timestamp",
                                  "userId",
                                  "user"
                                ]
                              }
                            },
                            "_count": {
                              "type": "object",
                              "properties": {
                                "interactions": {
                                  "type": "integer"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "interactions"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "embeddedIn",
                            "_count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/FindUniqueWidgetOrThrow": {
      "get": {
        "operationId": "CustomerCommunicationFindUniqueWidgetOrThrow",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "customerCommunication_findUniqueWidgetOrThrow_interactions_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueWidgetOrThrow_interactions_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueWidgetOrThrow_interactions_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueWidgetOrThrow_interactions_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueWidgetOrThrow_interactions_interactions_user_user_accounts_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueWidgetOrThrow_interactions_interactions_user_user_accounts_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueWidgetOrThrow_interactions_interactions_user_user_accounts_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueWidgetOrThrow_interactions_interactions_user_user_accounts_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueWidgetOrThrow_interactions_interactions_user_user_sessions_orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueWidgetOrThrow_interactions_interactions_user_user_sessions_take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueWidgetOrThrow_interactions_interactions_user_user_sessions_skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "customerCommunication_findUniqueWidgetOrThrow_interactions_interactions_user_user_sessions_distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_findUniqueWidgetOrThrow": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "embeddedIn": {
                              "type": "string"
                            },
                            "interactions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "interactionType": {
                                    "type": "string",
                                    "enum": [
                                      "CALL",
                                      "CHAT",
                                      "EMAIL",
                                      "WEB_USAGE",
                                      "IVR_HUGO_USAGE",
                                      "OUTBOUND_CORRESPONDENCE",
                                      "MARKETING_MATERIAL",
                                      "TEXT"
                                    ]
                                  },
                                  "content": {
                                    "type": "string"
                                  },
                                  "timestamp": {
                                    "type": "string"
                                  },
                                  "userId": {
                                    "type": "string"
                                  },
                                  "widgetId": {
                                    "type": "string"
                                  },
                                  "user": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "email": {
                                        "type": "string"
                                      },
                                      "emailVerified": {
                                        "type": "string"
                                      },
                                      "image": {
                                        "type": "string"
                                      },
                                      "createdAt": {
                                        "type": "string"
                                      },
                                      "updatedAt": {
                                        "type": "string"
                                      },
                                      "userType": {
                                        "type": "string",
                                        "enum": [
                                          "CALL_CENTER_REP",
                                          "CUSTOMER",
                                          "FINANCIAL_REP"
                                        ]
                                      },
                                      "stripeCustomerId": {
                                        "type": "string"
                                      },
                                      "stripeSubscriptionId": {
                                        "type": "string"
                                      },
                                      "stripePriceId": {
                                        "type": "string"
                                      },
                                      "stripeCurrentPeriodEnd": {
                                        "type": "string"
                                      },
                                      "accounts": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "userId": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string"
                                            },
                                            "provider": {
                                              "type": "string"
                                            },
                                            "providerAccountId": {
                                              "type": "string"
                                            },
                                            "refresh_token": {
                                              "type": "string"
                                            },
                                            "access_token": {
                                              "type": "string"
                                            },
                                            "expires_at": {
                                              "type": "integer"
                                            },
                                            "token_type": {
                                              "type": "string"
                                            },
                                            "scope": {
                                              "type": "string"
                                            },
                                            "id_token": {
                                              "type": "string"
                                            },
                                            "session_state": {
                                              "type": "string"
                                            },
                                            "createdAt": {
                                              "type": "string"
                                            },
                                            "updatedAt": {
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false,
                                          "required": [
                                            "id",
                                            "userId",
                                            "type",
                                            "provider",
                                            "providerAccountId",
                                            "createdAt",
                                            "updatedAt"
                                          ]
                                        }
                                      },
                                      "sessions": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "sessionToken": {
                                              "type": "string"
                                            },
                                            "userId": {
                                              "type": "string"
                                            },
                                            "expires": {
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false,
                                          "required": [
                                            "id",
                                            "sessionToken",
                                            "userId",
                                            "expires"
                                          ]
                                        }
                                      },
                                      "_count": {
                                        "type": "object",
                                        "properties": {
                                          "interactions": {
                                            "type": "integer"
                                          },
                                          "accounts": {
                                            "type": "integer"
                                          },
                                          "sessions": {
                                            "type": "integer"
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "interactions",
                                          "accounts",
                                          "sessions"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "createdAt",
                                      "updatedAt",
                                      "_count"
                                    ]
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "interactionType",
                                  "content",
                                  "timestamp",
                                  "userId",
                                  "user"
                                ]
                              }
                            },
                            "_count": {
                              "type": "object",
                              "properties": {
                                "interactions": {
                                  "type": "integer"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "interactions"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "embeddedIn",
                            "_count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/GroupByAccount": {
      "get": {
        "operationId": "CustomerCommunicationGroupByAccount",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "by.0",
            "description": "Type: string,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_groupByAccount": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "userId": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "provider": {
                                "type": "string"
                              },
                              "providerAccountId": {
                                "type": "string"
                              },
                              "refresh_token": {
                                "type": "string"
                              },
                              "access_token": {
                                "type": "string"
                              },
                              "expires_at": {
                                "type": "integer"
                              },
                              "token_type": {
                                "type": "string"
                              },
                              "scope": {
                                "type": "string"
                              },
                              "id_token": {
                                "type": "string"
                              },
                              "session_state": {
                                "type": "string"
                              },
                              "createdAt": {
                                "type": "string"
                              },
                              "updatedAt": {
                                "type": "string"
                              },
                              "_count": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer"
                                  },
                                  "userId": {
                                    "type": "integer"
                                  },
                                  "type": {
                                    "type": "integer"
                                  },
                                  "provider": {
                                    "type": "integer"
                                  },
                                  "providerAccountId": {
                                    "type": "integer"
                                  },
                                  "refresh_token": {
                                    "type": "integer"
                                  },
                                  "access_token": {
                                    "type": "integer"
                                  },
                                  "expires_at": {
                                    "type": "integer"
                                  },
                                  "token_type": {
                                    "type": "integer"
                                  },
                                  "scope": {
                                    "type": "integer"
                                  },
                                  "id_token": {
                                    "type": "integer"
                                  },
                                  "session_state": {
                                    "type": "integer"
                                  },
                                  "createdAt": {
                                    "type": "integer"
                                  },
                                  "updatedAt": {
                                    "type": "integer"
                                  },
                                  "_all": {
                                    "type": "integer"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "userId",
                                  "type",
                                  "provider",
                                  "providerAccountId",
                                  "refresh_token",
                                  "access_token",
                                  "expires_at",
                                  "token_type",
                                  "scope",
                                  "id_token",
                                  "session_state",
                                  "createdAt",
                                  "updatedAt",
                                  "_all"
                                ]
                              },
                              "_avg": {
                                "type": "object",
                                "properties": {
                                  "expires_at": {
                                    "type": "number"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "_sum": {
                                "type": "object",
                                "properties": {
                                  "expires_at": {
                                    "type": "integer"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "_min": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "userId": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  },
                                  "provider": {
                                    "type": "string"
                                  },
                                  "providerAccountId": {
                                    "type": "string"
                                  },
                                  "refresh_token": {
                                    "type": "string"
                                  },
                                  "access_token": {
                                    "type": "string"
                                  },
                                  "expires_at": {
                                    "type": "integer"
                                  },
                                  "token_type": {
                                    "type": "string"
                                  },
                                  "scope": {
                                    "type": "string"
                                  },
                                  "id_token": {
                                    "type": "string"
                                  },
                                  "session_state": {
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "_max": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "userId": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  },
                                  "provider": {
                                    "type": "string"
                                  },
                                  "providerAccountId": {
                                    "type": "string"
                                  },
                                  "refresh_token": {
                                    "type": "string"
                                  },
                                  "access_token": {
                                    "type": "string"
                                  },
                                  "expires_at": {
                                    "type": "integer"
                                  },
                                  "token_type": {
                                    "type": "string"
                                  },
                                  "scope": {
                                    "type": "string"
                                  },
                                  "id_token": {
                                    "type": "string"
                                  },
                                  "session_state": {
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "id",
                              "userId",
                              "type",
                              "provider",
                              "providerAccountId",
                              "createdAt",
                              "updatedAt"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "customerCommunication_groupByAccount"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/GroupByFilter": {
      "get": {
        "operationId": "CustomerCommunicationGroupByFilter",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "by.0",
            "description": "Type: string,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_groupByFilter": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "audience": {
                                "type": "string",
                                "enum": [
                                  "CALL_CENTER",
                                  "CLIENT_PORTAL",
                                  "GUARDIAN_ONLINE",
                                  "GPAC",
                                  "SMART_OFFICE",
                                  "LIVING_BALANCE_SHEET"
                                ]
                              },
                              "output": {
                                "type": "string",
                                "enum": [
                                  "CALLS",
                                  "CHATS",
                                  "EMAILS",
                                  "WEB_USAGE",
                                  "IVR_HUGO_USAGE",
                                  "OUTBOUND_CORRESPONDENCE",
                                  "MARKETING_MATERIALS",
                                  "TEXTS"
                                ]
                              },
                              "_count": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer"
                                  },
                                  "audience": {
                                    "type": "integer"
                                  },
                                  "output": {
                                    "type": "integer"
                                  },
                                  "_all": {
                                    "type": "integer"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "audience",
                                  "output",
                                  "_all"
                                ]
                              },
                              "_min": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "audience": {
                                    "type": "string",
                                    "enum": [
                                      "CALL_CENTER",
                                      "CLIENT_PORTAL",
                                      "GUARDIAN_ONLINE",
                                      "GPAC",
                                      "SMART_OFFICE",
                                      "LIVING_BALANCE_SHEET"
                                    ]
                                  },
                                  "output": {
                                    "type": "string",
                                    "enum": [
                                      "CALLS",
                                      "CHATS",
                                      "EMAILS",
                                      "WEB_USAGE",
                                      "IVR_HUGO_USAGE",
                                      "OUTBOUND_CORRESPONDENCE",
                                      "MARKETING_MATERIALS",
                                      "TEXTS"
                                    ]
                                  }
                                },
                                "additionalProperties": false
                              },
                              "_max": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "audience": {
                                    "type": "string",
                                    "enum": [
                                      "CALL_CENTER",
                                      "CLIENT_PORTAL",
                                      "GUARDIAN_ONLINE",
                                      "GPAC",
                                      "SMART_OFFICE",
                                      "LIVING_BALANCE_SHEET"
                                    ]
                                  },
                                  "output": {
                                    "type": "string",
                                    "enum": [
                                      "CALLS",
                                      "CHATS",
                                      "EMAILS",
                                      "WEB_USAGE",
                                      "IVR_HUGO_USAGE",
                                      "OUTBOUND_CORRESPONDENCE",
                                      "MARKETING_MATERIALS",
                                      "TEXTS"
                                    ]
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "id",
                              "audience",
                              "output"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "customerCommunication_groupByFilter"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/GroupByInteraction": {
      "get": {
        "operationId": "CustomerCommunicationGroupByInteraction",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "by.0",
            "description": "Type: string,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_groupByInteraction": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "interactionType": {
                                "type": "string",
                                "enum": [
                                  "CALL",
                                  "CHAT",
                                  "EMAIL",
                                  "WEB_USAGE",
                                  "IVR_HUGO_USAGE",
                                  "OUTBOUND_CORRESPONDENCE",
                                  "MARKETING_MATERIAL",
                                  "TEXT"
                                ]
                              },
                              "content": {
                                "type": "string"
                              },
                              "timestamp": {
                                "type": "string"
                              },
                              "userId": {
                                "type": "string"
                              },
                              "widgetId": {
                                "type": "string"
                              },
                              "_count": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer"
                                  },
                                  "interactionType": {
                                    "type": "integer"
                                  },
                                  "content": {
                                    "type": "integer"
                                  },
                                  "timestamp": {
                                    "type": "integer"
                                  },
                                  "userId": {
                                    "type": "integer"
                                  },
                                  "widgetId": {
                                    "type": "integer"
                                  },
                                  "_all": {
                                    "type": "integer"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "interactionType",
                                  "content",
                                  "timestamp",
                                  "userId",
                                  "widgetId",
                                  "_all"
                                ]
                              },
                              "_min": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "interactionType": {
                                    "type": "string",
                                    "enum": [
                                      "CALL",
                                      "CHAT",
                                      "EMAIL",
                                      "WEB_USAGE",
                                      "IVR_HUGO_USAGE",
                                      "OUTBOUND_CORRESPONDENCE",
                                      "MARKETING_MATERIAL",
                                      "TEXT"
                                    ]
                                  },
                                  "content": {
                                    "type": "string"
                                  },
                                  "timestamp": {
                                    "type": "string"
                                  },
                                  "userId": {
                                    "type": "string"
                                  },
                                  "widgetId": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "_max": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "interactionType": {
                                    "type": "string",
                                    "enum": [
                                      "CALL",
                                      "CHAT",
                                      "EMAIL",
                                      "WEB_USAGE",
                                      "IVR_HUGO_USAGE",
                                      "OUTBOUND_CORRESPONDENCE",
                                      "MARKETING_MATERIAL",
                                      "TEXT"
                                    ]
                                  },
                                  "content": {
                                    "type": "string"
                                  },
                                  "timestamp": {
                                    "type": "string"
                                  },
                                  "userId": {
                                    "type": "string"
                                  },
                                  "widgetId": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "id",
                              "interactionType",
                              "content",
                              "timestamp",
                              "userId"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "customerCommunication_groupByInteraction"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/GroupBySession": {
      "get": {
        "operationId": "CustomerCommunicationGroupBySession",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "by.0",
            "description": "Type: string,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_groupBySession": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "sessionToken": {
                                "type": "string"
                              },
                              "userId": {
                                "type": "string"
                              },
                              "expires": {
                                "type": "string"
                              },
                              "_count": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer"
                                  },
                                  "sessionToken": {
                                    "type": "integer"
                                  },
                                  "userId": {
                                    "type": "integer"
                                  },
                                  "expires": {
                                    "type": "integer"
                                  },
                                  "_all": {
                                    "type": "integer"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "sessionToken",
                                  "userId",
                                  "expires",
                                  "_all"
                                ]
                              },
                              "_min": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "sessionToken": {
                                    "type": "string"
                                  },
                                  "userId": {
                                    "type": "string"
                                  },
                                  "expires": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "_max": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "sessionToken": {
                                    "type": "string"
                                  },
                                  "userId": {
                                    "type": "string"
                                  },
                                  "expires": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "id",
                              "sessionToken",
                              "userId",
                              "expires"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "customerCommunication_groupBySession"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/GroupByUser": {
      "get": {
        "operationId": "CustomerCommunicationGroupByUser",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "by.0",
            "description": "Type: string,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_groupByUser": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string"
                              },
                              "emailVerified": {
                                "type": "string"
                              },
                              "image": {
                                "type": "string"
                              },
                              "createdAt": {
                                "type": "string"
                              },
                              "updatedAt": {
                                "type": "string"
                              },
                              "userType": {
                                "type": "string",
                                "enum": [
                                  "CALL_CENTER_REP",
                                  "CUSTOMER",
                                  "FINANCIAL_REP"
                                ]
                              },
                              "stripeCustomerId": {
                                "type": "string"
                              },
                              "stripeSubscriptionId": {
                                "type": "string"
                              },
                              "stripePriceId": {
                                "type": "string"
                              },
                              "stripeCurrentPeriodEnd": {
                                "type": "string"
                              },
                              "_count": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer"
                                  },
                                  "name": {
                                    "type": "integer"
                                  },
                                  "email": {
                                    "type": "integer"
                                  },
                                  "emailVerified": {
                                    "type": "integer"
                                  },
                                  "image": {
                                    "type": "integer"
                                  },
                                  "createdAt": {
                                    "type": "integer"
                                  },
                                  "updatedAt": {
                                    "type": "integer"
                                  },
                                  "userType": {
                                    "type": "integer"
                                  },
                                  "stripeCustomerId": {
                                    "type": "integer"
                                  },
                                  "stripeSubscriptionId": {
                                    "type": "integer"
                                  },
                                  "stripePriceId": {
                                    "type": "integer"
                                  },
                                  "stripeCurrentPeriodEnd": {
                                    "type": "integer"
                                  },
                                  "_all": {
                                    "type": "integer"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "name",
                                  "email",
                                  "emailVerified",
                                  "image",
                                  "createdAt",
                                  "updatedAt",
                                  "userType",
                                  "stripeCustomerId",
                                  "stripeSubscriptionId",
                                  "stripePriceId",
                                  "stripeCurrentPeriodEnd",
                                  "_all"
                                ]
                              },
                              "_min": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "email": {
                                    "type": "string"
                                  },
                                  "emailVerified": {
                                    "type": "string"
                                  },
                                  "image": {
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "type": "string"
                                  },
                                  "userType": {
                                    "type": "string",
                                    "enum": [
                                      "CALL_CENTER_REP",
                                      "CUSTOMER",
                                      "FINANCIAL_REP"
                                    ]
                                  },
                                  "stripeCustomerId": {
                                    "type": "string"
                                  },
                                  "stripeSubscriptionId": {
                                    "type": "string"
                                  },
                                  "stripePriceId": {
                                    "type": "string"
                                  },
                                  "stripeCurrentPeriodEnd": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "_max": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "email": {
                                    "type": "string"
                                  },
                                  "emailVerified": {
                                    "type": "string"
                                  },
                                  "image": {
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "type": "string"
                                  },
                                  "userType": {
                                    "type": "string",
                                    "enum": [
                                      "CALL_CENTER_REP",
                                      "CUSTOMER",
                                      "FINANCIAL_REP"
                                    ]
                                  },
                                  "stripeCustomerId": {
                                    "type": "string"
                                  },
                                  "stripeSubscriptionId": {
                                    "type": "string"
                                  },
                                  "stripePriceId": {
                                    "type": "string"
                                  },
                                  "stripeCurrentPeriodEnd": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "id",
                              "createdAt",
                              "updatedAt"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "customerCommunication_groupByUser"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/GroupByVerificationToken": {
      "get": {
        "operationId": "CustomerCommunicationGroupByVerificationToken",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "by.0",
            "description": "Type: string,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_groupByVerificationToken": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "identifier": {
                                "type": "string"
                              },
                              "token": {
                                "type": "string"
                              },
                              "expires": {
                                "type": "string"
                              },
                              "_count": {
                                "type": "object",
                                "properties": {
                                  "identifier": {
                                    "type": "integer"
                                  },
                                  "token": {
                                    "type": "integer"
                                  },
                                  "expires": {
                                    "type": "integer"
                                  },
                                  "_all": {
                                    "type": "integer"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "identifier",
                                  "token",
                                  "expires",
                                  "_all"
                                ]
                              },
                              "_min": {
                                "type": "object",
                                "properties": {
                                  "identifier": {
                                    "type": "string"
                                  },
                                  "token": {
                                    "type": "string"
                                  },
                                  "expires": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "_max": {
                                "type": "object",
                                "properties": {
                                  "identifier": {
                                    "type": "string"
                                  },
                                  "token": {
                                    "type": "string"
                                  },
                                  "expires": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "identifier",
                              "token",
                              "expires"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "customerCommunication_groupByVerificationToken"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/GroupByWidget": {
      "get": {
        "operationId": "CustomerCommunicationGroupByWidget",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "by.0",
            "description": "Type: string,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_groupByWidget": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "embeddedIn": {
                                "type": "string"
                              },
                              "_count": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer"
                                  },
                                  "embeddedIn": {
                                    "type": "integer"
                                  },
                                  "_all": {
                                    "type": "integer"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "embeddedIn",
                                  "_all"
                                ]
                              },
                              "_min": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "embeddedIn": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "_max": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "embeddedIn": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "id",
                              "embeddedIn"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "customerCommunication_groupByWidget"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/QueryRaw": {
      "get": {
        "operationId": "CustomerCommunicationQueryRaw",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "query",
            "description": "Type: string",
            "in": "query",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parameters",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_queryRaw": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "ID": {
                                "type": "string"
                              },
                              "Int": {
                                "type": "integer"
                              },
                              "Float": {
                                "type": "number"
                              },
                              "String": {
                                "type": "string"
                              },
                              "Boolean": {
                                "type": "boolean"
                              },
                              "DateTime": {
                                "type": "string"
                              },
                              "JSON": {},
                              "Object": {
                                "type": "object",
                                "properties": {
                                  "ID": {
                                    "type": "string"
                                  },
                                  "Int": {
                                    "type": "integer"
                                  },
                                  "Float": {
                                    "type": "number"
                                  },
                                  "String": {
                                    "type": "string"
                                  },
                                  "Boolean": {
                                    "type": "boolean"
                                  },
                                  "DateTime": {
                                    "type": "string"
                                  },
                                  "JSON": {},
                                  "OptionalID": {
                                    "type": "string"
                                  },
                                  "OptionalInt": {
                                    "type": "integer"
                                  },
                                  "OptionalFloat": {
                                    "type": "number"
                                  },
                                  "OptionalString": {
                                    "type": "string"
                                  },
                                  "OptionalBoolean": {
                                    "type": "boolean"
                                  },
                                  "OptionalDateTime": {
                                    "type": "string"
                                  },
                                  "OptionalJSON": {}
                                },
                                "additionalProperties": false,
                                "required": [
                                  "ID",
                                  "Int",
                                  "Float",
                                  "String",
                                  "Boolean",
                                  "DateTime",
                                  "JSON"
                                ]
                              },
                              "Array": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "ID": {
                                      "type": "string"
                                    },
                                    "Int": {
                                      "type": "integer"
                                    },
                                    "Float": {
                                      "type": "number"
                                    },
                                    "String": {
                                      "type": "string"
                                    },
                                    "Boolean": {
                                      "type": "boolean"
                                    },
                                    "DateTime": {
                                      "type": "string"
                                    },
                                    "JSON": {},
                                    "OptionalID": {
                                      "type": "string"
                                    },
                                    "OptionalInt": {
                                      "type": "integer"
                                    },
                                    "OptionalFloat": {
                                      "type": "number"
                                    },
                                    "OptionalString": {
                                      "type": "string"
                                    },
                                    "OptionalBoolean": {
                                      "type": "boolean"
                                    },
                                    "OptionalDateTime": {
                                      "type": "string"
                                    },
                                    "OptionalJSON": {}
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "ID",
                                    "Int",
                                    "Float",
                                    "String",
                                    "Boolean",
                                    "DateTime",
                                    "JSON"
                                  ]
                                }
                              },
                              "OptionalID": {
                                "type": "string"
                              },
                              "OptionalInt": {
                                "type": "integer"
                              },
                              "OptionalFloat": {
                                "type": "number"
                              },
                              "OptionalString": {
                                "type": "string"
                              },
                              "OptionalBoolean": {
                                "type": "boolean"
                              },
                              "OptionalDateTime": {
                                "type": "string"
                              },
                              "OptionalJSON": {},
                              "OptionalObject": {
                                "type": "object",
                                "properties": {
                                  "ID": {
                                    "type": "string"
                                  },
                                  "Int": {
                                    "type": "integer"
                                  },
                                  "Float": {
                                    "type": "number"
                                  },
                                  "String": {
                                    "type": "string"
                                  },
                                  "Boolean": {
                                    "type": "boolean"
                                  },
                                  "DateTime": {
                                    "type": "string"
                                  },
                                  "JSON": {},
                                  "OptionalID": {
                                    "type": "string"
                                  },
                                  "OptionalInt": {
                                    "type": "integer"
                                  },
                                  "OptionalFloat": {
                                    "type": "number"
                                  },
                                  "OptionalString": {
                                    "type": "string"
                                  },
                                  "OptionalBoolean": {
                                    "type": "boolean"
                                  },
                                  "OptionalDateTime": {
                                    "type": "string"
                                  },
                                  "OptionalJSON": {}
                                },
                                "additionalProperties": false,
                                "required": [
                                  "ID",
                                  "Int",
                                  "Float",
                                  "String",
                                  "Boolean",
                                  "DateTime",
                                  "JSON"
                                ]
                              },
                              "OptionalArray": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "ID": {
                                      "type": "string"
                                    },
                                    "Int": {
                                      "type": "integer"
                                    },
                                    "Float": {
                                      "type": "number"
                                    },
                                    "String": {
                                      "type": "string"
                                    },
                                    "Boolean": {
                                      "type": "boolean"
                                    },
                                    "DateTime": {
                                      "type": "string"
                                    },
                                    "JSON": {},
                                    "OptionalID": {
                                      "type": "string"
                                    },
                                    "OptionalInt": {
                                      "type": "integer"
                                    },
                                    "OptionalFloat": {
                                      "type": "number"
                                    },
                                    "OptionalString": {
                                      "type": "string"
                                    },
                                    "OptionalBoolean": {
                                      "type": "boolean"
                                    },
                                    "OptionalDateTime": {
                                      "type": "string"
                                    },
                                    "OptionalJSON": {}
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "ID",
                                    "Int",
                                    "Float",
                                    "String",
                                    "Boolean",
                                    "DateTime",
                                    "JSON"
                                  ]
                                }
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "ID",
                              "Int",
                              "Float",
                              "String",
                              "Boolean",
                              "DateTime",
                              "JSON",
                              "Object",
                              "Array",
                              "OptionalArray"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "customerCommunication_queryRaw"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/QueryRawJSON": {
      "get": {
        "operationId": "CustomerCommunicationQueryRawJSON",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "query",
            "description": "Type: string",
            "in": "query",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parameters",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_queryRawJSON": {}
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/UpdateManyAccount": {
      "post": {
        "operationId": "CustomerCommunicationUpdateManyAccount",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/customerCommunication_AccountUpdateManyMutationInput"
                  },
                  "where": {
                    "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_16"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_updateManyAccount": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/UpdateManyFilter": {
      "post": {
        "operationId": "CustomerCommunicationUpdateManyFilter",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/customerCommunication_FilterUpdateManyMutationInput"
                  },
                  "where": {
                    "$ref": "#/components/schemas/customerCommunication_FilterWhereInput_2"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_updateManyFilter": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/UpdateManyInteraction": {
      "post": {
        "operationId": "CustomerCommunicationUpdateManyInteraction",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/customerCommunication_InteractionUpdateManyMutationInput"
                  },
                  "where": {
                    "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_17"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_updateManyInteraction": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/UpdateManySession": {
      "post": {
        "operationId": "CustomerCommunicationUpdateManySession",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/customerCommunication_SessionUpdateManyMutationInput"
                  },
                  "where": {
                    "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_18"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_updateManySession": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/UpdateManyUser": {
      "post": {
        "operationId": "CustomerCommunicationUpdateManyUser",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/customerCommunication_UserUpdateManyMutationInput"
                  },
                  "where": {
                    "$ref": "#/components/schemas/customerCommunication_UserWhereInput_19"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_updateManyUser": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/UpdateManyVerificationToken": {
      "post": {
        "operationId": "CustomerCommunicationUpdateManyVerificationToken",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/customerCommunication_VerificationTokenUpdateManyMutationInput"
                  },
                  "where": {
                    "$ref": "#/components/schemas/customerCommunication_VerificationTokenWhereInput_2"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_updateManyVerificationToken": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/UpdateManyWidget": {
      "post": {
        "operationId": "CustomerCommunicationUpdateManyWidget",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/customerCommunication_WidgetUpdateManyMutationInput"
                  },
                  "where": {
                    "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_20"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_updateManyWidget": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/UpdateOneAccount": {
      "post": {
        "operationId": "CustomerCommunicationUpdateOneAccount",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/customerCommunication_AccountUpdateInput"
                  },
                  "where": {
                    "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_10"
                  },
                  "customerCommunication_updateOneAccount_user_user_interactions_where": {
                    "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_21"
                  },
                  "customerCommunication_updateOneAccount_user_user_interactions_orderBy": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_InteractionOrderByWithRelationInput_9"
                    }
                  },
                  "customerCommunication_updateOneAccount_user_user_interactions_cursor": {
                    "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
                  },
                  "customerCommunication_updateOneAccount_user_user_interactions_take": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_updateOneAccount_user_user_interactions_skip": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_updateOneAccount_user_user_interactions_distinct": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
                      "enum": [
                        "id",
                        "interactionType",
                        "content",
                        "timestamp",
                        "userId",
                        "widgetId"
                      ]
                    }
                  },
                  "customerCommunication_updateOneAccount_user_user_sessions_where": {
                    "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_21"
                  },
                  "customerCommunication_updateOneAccount_user_user_sessions_orderBy": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_SessionOrderByWithRelationInput_9"
                    }
                  },
                  "customerCommunication_updateOneAccount_user_user_sessions_cursor": {
                    "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
                  },
                  "customerCommunication_updateOneAccount_user_user_sessions_take": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_updateOneAccount_user_user_sessions_skip": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_updateOneAccount_user_user_sessions_distinct": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
                      "enum": [
                        "id",
                        "sessionToken",
                        "userId",
                        "expires"
                      ]
                    }
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data",
                  "where"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_updateOneAccount": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "provider": {
                              "type": "string"
                            },
                            "providerAccountId": {
                              "type": "string"
                            },
                            "refresh_token": {
                              "type": "string"
                            },
                            "access_token": {
                              "type": "string"
                            },
                            "expires_at": {
                              "type": "integer"
                            },
                            "token_type": {
                              "type": "string"
                            },
                            "scope": {
                              "type": "string"
                            },
                            "id_token": {
                              "type": "string"
                            },
                            "session_state": {
                              "type": "string"
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            },
                            "user": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "email": {
                                  "type": "string"
                                },
                                "emailVerified": {
                                  "type": "string"
                                },
                                "image": {
                                  "type": "string"
                                },
                                "createdAt": {
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "type": "string"
                                },
                                "userType": {
                                  "type": "string",
                                  "enum": [
                                    "CALL_CENTER_REP",
                                    "CUSTOMER",
                                    "FINANCIAL_REP"
                                  ]
                                },
                                "stripeCustomerId": {
                                  "type": "string"
                                },
                                "stripeSubscriptionId": {
                                  "type": "string"
                                },
                                "stripePriceId": {
                                  "type": "string"
                                },
                                "stripeCurrentPeriodEnd": {
                                  "type": "string"
                                },
                                "interactions": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "interactionType": {
                                        "type": "string",
                                        "enum": [
                                          "CALL",
                                          "CHAT",
                                          "EMAIL",
                                          "WEB_USAGE",
                                          "IVR_HUGO_USAGE",
                                          "OUTBOUND_CORRESPONDENCE",
                                          "MARKETING_MATERIAL",
                                          "TEXT"
                                        ]
                                      },
                                      "content": {
                                        "type": "string"
                                      },
                                      "timestamp": {
                                        "type": "string"
                                      },
                                      "userId": {
                                        "type": "string"
                                      },
                                      "widgetId": {
                                        "type": "string"
                                      },
                                      "Widget": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "embeddedIn": {
                                            "type": "string"
                                          },
                                          "_count": {
                                            "type": "object",
                                            "properties": {
                                              "interactions": {
                                                "type": "integer"
                                              }
                                            },
                                            "additionalProperties": false,
                                            "required": [
                                              "interactions"
                                            ]
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "id",
                                          "embeddedIn",
                                          "_count"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "interactionType",
                                      "content",
                                      "timestamp",
                                      "userId"
                                    ]
                                  }
                                },
                                "sessions": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "sessionToken": {
                                        "type": "string"
                                      },
                                      "userId": {
                                        "type": "string"
                                      },
                                      "expires": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "sessionToken",
                                      "userId",
                                      "expires"
                                    ]
                                  }
                                },
                                "_count": {
                                  "type": "object",
                                  "properties": {
                                    "interactions": {
                                      "type": "integer"
                                    },
                                    "accounts": {
                                      "type": "integer"
                                    },
                                    "sessions": {
                                      "type": "integer"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "interactions",
                                    "accounts",
                                    "sessions"
                                  ]
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "createdAt",
                                "updatedAt",
                                "_count"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "userId",
                            "type",
                            "provider",
                            "providerAccountId",
                            "createdAt",
                            "updatedAt",
                            "user"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/UpdateOneFilter": {
      "post": {
        "operationId": "CustomerCommunicationUpdateOneFilter",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/customerCommunication_FilterUpdateInput"
                  },
                  "where": {
                    "$ref": "#/components/schemas/customerCommunication_FilterWhereUniqueInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data",
                  "where"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_updateOneFilter": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "audience": {
                              "type": "string",
                              "enum": [
                                "CALL_CENTER",
                                "CLIENT_PORTAL",
                                "GUARDIAN_ONLINE",
                                "GPAC",
                                "SMART_OFFICE",
                                "LIVING_BALANCE_SHEET"
                              ]
                            },
                            "output": {
                              "type": "string",
                              "enum": [
                                "CALLS",
                                "CHATS",
                                "EMAILS",
                                "WEB_USAGE",
                                "IVR_HUGO_USAGE",
                                "OUTBOUND_CORRESPONDENCE",
                                "MARKETING_MATERIALS",
                                "TEXTS"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "audience",
                            "output"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/UpdateOneInteraction": {
      "post": {
        "operationId": "CustomerCommunicationUpdateOneInteraction",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/customerCommunication_InteractionUpdateInput"
                  },
                  "where": {
                    "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
                  },
                  "customerCommunication_updateOneInteraction_user_user_accounts_where": {
                    "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_22"
                  },
                  "customerCommunication_updateOneInteraction_user_user_accounts_orderBy": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_AccountOrderByWithRelationInput_9"
                    }
                  },
                  "customerCommunication_updateOneInteraction_user_user_accounts_cursor": {
                    "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_11"
                  },
                  "customerCommunication_updateOneInteraction_user_user_accounts_take": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_updateOneInteraction_user_user_accounts_skip": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_updateOneInteraction_user_user_accounts_distinct": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
                      "enum": [
                        "id",
                        "userId",
                        "type",
                        "provider",
                        "providerAccountId",
                        "refresh_token",
                        "access_token",
                        "expires_at",
                        "token_type",
                        "scope",
                        "id_token",
                        "session_state",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  },
                  "customerCommunication_updateOneInteraction_user_user_sessions_where": {
                    "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_22"
                  },
                  "customerCommunication_updateOneInteraction_user_user_sessions_orderBy": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_SessionOrderByWithRelationInput_10"
                    }
                  },
                  "customerCommunication_updateOneInteraction_user_user_sessions_cursor": {
                    "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
                  },
                  "customerCommunication_updateOneInteraction_user_user_sessions_take": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_updateOneInteraction_user_user_sessions_skip": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_updateOneInteraction_user_user_sessions_distinct": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
                      "enum": [
                        "id",
                        "sessionToken",
                        "userId",
                        "expires"
                      ]
                    }
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data",
                  "where"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_updateOneInteraction": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "interactionType": {
                              "type": "string",
                              "enum": [
                                "CALL",
                                "CHAT",
                                "EMAIL",
                                "WEB_USAGE",
                                "IVR_HUGO_USAGE",
                                "OUTBOUND_CORRESPONDENCE",
                                "MARKETING_MATERIAL",
                                "TEXT"
                              ]
                            },
                            "content": {
                              "type": "string"
                            },
                            "timestamp": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            },
                            "widgetId": {
                              "type": "string"
                            },
                            "user": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "email": {
                                  "type": "string"
                                },
                                "emailVerified": {
                                  "type": "string"
                                },
                                "image": {
                                  "type": "string"
                                },
                                "createdAt": {
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "type": "string"
                                },
                                "userType": {
                                  "type": "string",
                                  "enum": [
                                    "CALL_CENTER_REP",
                                    "CUSTOMER",
                                    "FINANCIAL_REP"
                                  ]
                                },
                                "stripeCustomerId": {
                                  "type": "string"
                                },
                                "stripeSubscriptionId": {
                                  "type": "string"
                                },
                                "stripePriceId": {
                                  "type": "string"
                                },
                                "stripeCurrentPeriodEnd": {
                                  "type": "string"
                                },
                                "accounts": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "userId": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      },
                                      "provider": {
                                        "type": "string"
                                      },
                                      "providerAccountId": {
                                        "type": "string"
                                      },
                                      "refresh_token": {
                                        "type": "string"
                                      },
                                      "access_token": {
                                        "type": "string"
                                      },
                                      "expires_at": {
                                        "type": "integer"
                                      },
                                      "token_type": {
                                        "type": "string"
                                      },
                                      "scope": {
                                        "type": "string"
                                      },
                                      "id_token": {
                                        "type": "string"
                                      },
                                      "session_state": {
                                        "type": "string"
                                      },
                                      "createdAt": {
                                        "type": "string"
                                      },
                                      "updatedAt": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "userId",
                                      "type",
                                      "provider",
                                      "providerAccountId",
                                      "createdAt",
                                      "updatedAt"
                                    ]
                                  }
                                },
                                "sessions": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "sessionToken": {
                                        "type": "string"
                                      },
                                      "userId": {
                                        "type": "string"
                                      },
                                      "expires": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "sessionToken",
                                      "userId",
                                      "expires"
                                    ]
                                  }
                                },
                                "_count": {
                                  "type": "object",
                                  "properties": {
                                    "interactions": {
                                      "type": "integer"
                                    },
                                    "accounts": {
                                      "type": "integer"
                                    },
                                    "sessions": {
                                      "type": "integer"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "interactions",
                                    "accounts",
                                    "sessions"
                                  ]
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "createdAt",
                                "updatedAt",
                                "_count"
                              ]
                            },
                            "Widget": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "embeddedIn": {
                                  "type": "string"
                                },
                                "_count": {
                                  "type": "object",
                                  "properties": {
                                    "interactions": {
                                      "type": "integer"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "interactions"
                                  ]
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "embeddedIn",
                                "_count"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "interactionType",
                            "content",
                            "timestamp",
                            "userId",
                            "user"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/UpdateOneSession": {
      "post": {
        "operationId": "CustomerCommunicationUpdateOneSession",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/customerCommunication_SessionUpdateInput"
                  },
                  "where": {
                    "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
                  },
                  "customerCommunication_updateOneSession_user_user_interactions_where": {
                    "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_23"
                  },
                  "customerCommunication_updateOneSession_user_user_interactions_orderBy": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_InteractionOrderByWithRelationInput_10"
                    }
                  },
                  "customerCommunication_updateOneSession_user_user_interactions_cursor": {
                    "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
                  },
                  "customerCommunication_updateOneSession_user_user_interactions_take": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_updateOneSession_user_user_interactions_skip": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_updateOneSession_user_user_interactions_distinct": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
                      "enum": [
                        "id",
                        "interactionType",
                        "content",
                        "timestamp",
                        "userId",
                        "widgetId"
                      ]
                    }
                  },
                  "customerCommunication_updateOneSession_user_user_accounts_where": {
                    "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_23"
                  },
                  "customerCommunication_updateOneSession_user_user_accounts_orderBy": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_AccountOrderByWithRelationInput_10"
                    }
                  },
                  "customerCommunication_updateOneSession_user_user_accounts_cursor": {
                    "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_12"
                  },
                  "customerCommunication_updateOneSession_user_user_accounts_take": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_updateOneSession_user_user_accounts_skip": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_updateOneSession_user_user_accounts_distinct": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
                      "enum": [
                        "id",
                        "userId",
                        "type",
                        "provider",
                        "providerAccountId",
                        "refresh_token",
                        "access_token",
                        "expires_at",
                        "token_type",
                        "scope",
                        "id_token",
                        "session_state",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data",
                  "where"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_updateOneSession": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "sessionToken": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            },
                            "expires": {
                              "type": "string"
                            },
                            "user": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "email": {
                                  "type": "string"
                                },
                                "emailVerified": {
                                  "type": "string"
                                },
                                "image": {
                                  "type": "string"
                                },
                                "createdAt": {
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "type": "string"
                                },
                                "userType": {
                                  "type": "string",
                                  "enum": [
                                    "CALL_CENTER_REP",
                                    "CUSTOMER",
                                    "FINANCIAL_REP"
                                  ]
                                },
                                "stripeCustomerId": {
                                  "type": "string"
                                },
                                "stripeSubscriptionId": {
                                  "type": "string"
                                },
                                "stripePriceId": {
                                  "type": "string"
                                },
                                "stripeCurrentPeriodEnd": {
                                  "type": "string"
                                },
                                "interactions": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "interactionType": {
                                        "type": "string",
                                        "enum": [
                                          "CALL",
                                          "CHAT",
                                          "EMAIL",
                                          "WEB_USAGE",
                                          "IVR_HUGO_USAGE",
                                          "OUTBOUND_CORRESPONDENCE",
                                          "MARKETING_MATERIAL",
                                          "TEXT"
                                        ]
                                      },
                                      "content": {
                                        "type": "string"
                                      },
                                      "timestamp": {
                                        "type": "string"
                                      },
                                      "userId": {
                                        "type": "string"
                                      },
                                      "widgetId": {
                                        "type": "string"
                                      },
                                      "Widget": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "embeddedIn": {
                                            "type": "string"
                                          },
                                          "_count": {
                                            "type": "object",
                                            "properties": {
                                              "interactions": {
                                                "type": "integer"
                                              }
                                            },
                                            "additionalProperties": false,
                                            "required": [
                                              "interactions"
                                            ]
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "id",
                                          "embeddedIn",
                                          "_count"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "interactionType",
                                      "content",
                                      "timestamp",
                                      "userId"
                                    ]
                                  }
                                },
                                "accounts": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "userId": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      },
                                      "provider": {
                                        "type": "string"
                                      },
                                      "providerAccountId": {
                                        "type": "string"
                                      },
                                      "refresh_token": {
                                        "type": "string"
                                      },
                                      "access_token": {
                                        "type": "string"
                                      },
                                      "expires_at": {
                                        "type": "integer"
                                      },
                                      "token_type": {
                                        "type": "string"
                                      },
                                      "scope": {
                                        "type": "string"
                                      },
                                      "id_token": {
                                        "type": "string"
                                      },
                                      "session_state": {
                                        "type": "string"
                                      },
                                      "createdAt": {
                                        "type": "string"
                                      },
                                      "updatedAt": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "userId",
                                      "type",
                                      "provider",
                                      "providerAccountId",
                                      "createdAt",
                                      "updatedAt"
                                    ]
                                  }
                                },
                                "_count": {
                                  "type": "object",
                                  "properties": {
                                    "interactions": {
                                      "type": "integer"
                                    },
                                    "accounts": {
                                      "type": "integer"
                                    },
                                    "sessions": {
                                      "type": "integer"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "interactions",
                                    "accounts",
                                    "sessions"
                                  ]
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "createdAt",
                                "updatedAt",
                                "_count"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "sessionToken",
                            "userId",
                            "expires",
                            "user"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/UpdateOneUser": {
      "post": {
        "operationId": "CustomerCommunicationUpdateOneUser",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/customerCommunication_UserUpdateInput"
                  },
                  "where": {
                    "$ref": "#/components/schemas/customerCommunication_UserWhereUniqueInput"
                  },
                  "customerCommunication_updateOneUser_interactions_where": {
                    "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_24"
                  },
                  "customerCommunication_updateOneUser_interactions_orderBy": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_InteractionOrderByWithRelationInput_11"
                    }
                  },
                  "customerCommunication_updateOneUser_interactions_cursor": {
                    "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
                  },
                  "customerCommunication_updateOneUser_interactions_take": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_updateOneUser_interactions_skip": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_updateOneUser_interactions_distinct": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
                      "enum": [
                        "id",
                        "interactionType",
                        "content",
                        "timestamp",
                        "userId",
                        "widgetId"
                      ]
                    }
                  },
                  "customerCommunication_updateOneUser_accounts_where": {
                    "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_24"
                  },
                  "customerCommunication_updateOneUser_accounts_orderBy": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_AccountOrderByWithRelationInput_11"
                    }
                  },
                  "customerCommunication_updateOneUser_accounts_cursor": {
                    "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_13"
                  },
                  "customerCommunication_updateOneUser_accounts_take": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_updateOneUser_accounts_skip": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_updateOneUser_accounts_distinct": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
                      "enum": [
                        "id",
                        "userId",
                        "type",
                        "provider",
                        "providerAccountId",
                        "refresh_token",
                        "access_token",
                        "expires_at",
                        "token_type",
                        "scope",
                        "id_token",
                        "session_state",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  },
                  "customerCommunication_updateOneUser_sessions_where": {
                    "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_24"
                  },
                  "customerCommunication_updateOneUser_sessions_orderBy": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_SessionOrderByWithRelationInput_11"
                    }
                  },
                  "customerCommunication_updateOneUser_sessions_cursor": {
                    "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
                  },
                  "customerCommunication_updateOneUser_sessions_take": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_updateOneUser_sessions_skip": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_updateOneUser_sessions_distinct": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
                      "enum": [
                        "id",
                        "sessionToken",
                        "userId",
                        "expires"
                      ]
                    }
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data",
                  "where"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_updateOneUser": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            },
                            "emailVerified": {
                              "type": "string"
                            },
                            "image": {
                              "type": "string"
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            },
                            "userType": {
                              "type": "string",
                              "enum": [
                                "CALL_CENTER_REP",
                                "CUSTOMER",
                                "FINANCIAL_REP"
                              ]
                            },
                            "stripeCustomerId": {
                              "type": "string"
                            },
                            "stripeSubscriptionId": {
                              "type": "string"
                            },
                            "stripePriceId": {
                              "type": "string"
                            },
                            "stripeCurrentPeriodEnd": {
                              "type": "string"
                            },
                            "interactions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "interactionType": {
                                    "type": "string",
                                    "enum": [
                                      "CALL",
                                      "CHAT",
                                      "EMAIL",
                                      "WEB_USAGE",
                                      "IVR_HUGO_USAGE",
                                      "OUTBOUND_CORRESPONDENCE",
                                      "MARKETING_MATERIAL",
                                      "TEXT"
                                    ]
                                  },
                                  "content": {
                                    "type": "string"
                                  },
                                  "timestamp": {
                                    "type": "string"
                                  },
                                  "userId": {
                                    "type": "string"
                                  },
                                  "widgetId": {
                                    "type": "string"
                                  },
                                  "Widget": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "embeddedIn": {
                                        "type": "string"
                                      },
                                      "_count": {
                                        "type": "object",
                                        "properties": {
                                          "interactions": {
                                            "type": "integer"
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "interactions"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "embeddedIn",
                                      "_count"
                                    ]
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "interactionType",
                                  "content",
                                  "timestamp",
                                  "userId"
                                ]
                              }
                            },
                            "accounts": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "userId": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  },
                                  "provider": {
                                    "type": "string"
                                  },
                                  "providerAccountId": {
                                    "type": "string"
                                  },
                                  "refresh_token": {
                                    "type": "string"
                                  },
                                  "access_token": {
                                    "type": "string"
                                  },
                                  "expires_at": {
                                    "type": "integer"
                                  },
                                  "token_type": {
                                    "type": "string"
                                  },
                                  "scope": {
                                    "type": "string"
                                  },
                                  "id_token": {
                                    "type": "string"
                                  },
                                  "session_state": {
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "userId",
                                  "type",
                                  "provider",
                                  "providerAccountId",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              }
                            },
                            "sessions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "sessionToken": {
                                    "type": "string"
                                  },
                                  "userId": {
                                    "type": "string"
                                  },
                                  "expires": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "sessionToken",
                                  "userId",
                                  "expires"
                                ]
                              }
                            },
                            "_count": {
                              "type": "object",
                              "properties": {
                                "interactions": {
                                  "type": "integer"
                                },
                                "accounts": {
                                  "type": "integer"
                                },
                                "sessions": {
                                  "type": "integer"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "interactions",
                                "accounts",
                                "sessions"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "createdAt",
                            "updatedAt",
                            "_count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/UpdateOneVerificationToken": {
      "post": {
        "operationId": "CustomerCommunicationUpdateOneVerificationToken",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/customerCommunication_VerificationTokenUpdateInput"
                  },
                  "where": {
                    "$ref": "#/components/schemas/customerCommunication_VerificationTokenWhereUniqueInput_2"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data",
                  "where"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_updateOneVerificationToken": {
                          "type": "object",
                          "properties": {
                            "identifier": {
                              "type": "string"
                            },
                            "token": {
                              "type": "string"
                            },
                            "expires": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "identifier",
                            "token",
                            "expires"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/UpdateOneWidget": {
      "post": {
        "operationId": "CustomerCommunicationUpdateOneWidget",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/customerCommunication_WidgetUpdateInput"
                  },
                  "where": {
                    "$ref": "#/components/schemas/customerCommunication_WidgetWhereUniqueInput"
                  },
                  "customerCommunication_updateOneWidget_interactions_where": {
                    "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_25"
                  },
                  "customerCommunication_updateOneWidget_interactions_orderBy": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_InteractionOrderByWithRelationInput_12"
                    }
                  },
                  "customerCommunication_updateOneWidget_interactions_cursor": {
                    "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
                  },
                  "customerCommunication_updateOneWidget_interactions_take": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_updateOneWidget_interactions_skip": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_updateOneWidget_interactions_distinct": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
                      "enum": [
                        "id",
                        "interactionType",
                        "content",
                        "timestamp",
                        "userId",
                        "widgetId"
                      ]
                    }
                  },
                  "customerCommunication_updateOneWidget_interactions_interactions_user_user_accounts_where": {
                    "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_25"
                  },
                  "customerCommunication_updateOneWidget_interactions_interactions_user_user_accounts_orderBy": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_AccountOrderByWithRelationInput_12"
                    }
                  },
                  "customerCommunication_updateOneWidget_interactions_interactions_user_user_accounts_cursor": {
                    "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_14"
                  },
                  "customerCommunication_updateOneWidget_interactions_interactions_user_user_accounts_take": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_updateOneWidget_interactions_interactions_user_user_accounts_skip": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_updateOneWidget_interactions_interactions_user_user_accounts_distinct": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
                      "enum": [
                        "id",
                        "userId",
                        "type",
                        "provider",
                        "providerAccountId",
                        "refresh_token",
                        "access_token",
                        "expires_at",
                        "token_type",
                        "scope",
                        "id_token",
                        "session_state",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  },
                  "customerCommunication_updateOneWidget_interactions_interactions_user_user_sessions_where": {
                    "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_25"
                  },
                  "customerCommunication_updateOneWidget_interactions_interactions_user_user_sessions_orderBy": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_SessionOrderByWithRelationInput_12"
                    }
                  },
                  "customerCommunication_updateOneWidget_interactions_interactions_user_user_sessions_cursor": {
                    "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
                  },
                  "customerCommunication_updateOneWidget_interactions_interactions_user_user_sessions_take": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_updateOneWidget_interactions_interactions_user_user_sessions_skip": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_updateOneWidget_interactions_interactions_user_user_sessions_distinct": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
                      "enum": [
                        "id",
                        "sessionToken",
                        "userId",
                        "expires"
                      ]
                    }
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data",
                  "where"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_updateOneWidget": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "embeddedIn": {
                              "type": "string"
                            },
                            "interactions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "interactionType": {
                                    "type": "string",
                                    "enum": [
                                      "CALL",
                                      "CHAT",
                                      "EMAIL",
                                      "WEB_USAGE",
                                      "IVR_HUGO_USAGE",
                                      "OUTBOUND_CORRESPONDENCE",
                                      "MARKETING_MATERIAL",
                                      "TEXT"
                                    ]
                                  },
                                  "content": {
                                    "type": "string"
                                  },
                                  "timestamp": {
                                    "type": "string"
                                  },
                                  "userId": {
                                    "type": "string"
                                  },
                                  "widgetId": {
                                    "type": "string"
                                  },
                                  "user": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "email": {
                                        "type": "string"
                                      },
                                      "emailVerified": {
                                        "type": "string"
                                      },
                                      "image": {
                                        "type": "string"
                                      },
                                      "createdAt": {
                                        "type": "string"
                                      },
                                      "updatedAt": {
                                        "type": "string"
                                      },
                                      "userType": {
                                        "type": "string",
                                        "enum": [
                                          "CALL_CENTER_REP",
                                          "CUSTOMER",
                                          "FINANCIAL_REP"
                                        ]
                                      },
                                      "stripeCustomerId": {
                                        "type": "string"
                                      },
                                      "stripeSubscriptionId": {
                                        "type": "string"
                                      },
                                      "stripePriceId": {
                                        "type": "string"
                                      },
                                      "stripeCurrentPeriodEnd": {
                                        "type": "string"
                                      },
                                      "accounts": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "userId": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string"
                                            },
                                            "provider": {
                                              "type": "string"
                                            },
                                            "providerAccountId": {
                                              "type": "string"
                                            },
                                            "refresh_token": {
                                              "type": "string"
                                            },
                                            "access_token": {
                                              "type": "string"
                                            },
                                            "expires_at": {
                                              "type": "integer"
                                            },
                                            "token_type": {
                                              "type": "string"
                                            },
                                            "scope": {
                                              "type": "string"
                                            },
                                            "id_token": {
                                              "type": "string"
                                            },
                                            "session_state": {
                                              "type": "string"
                                            },
                                            "createdAt": {
                                              "type": "string"
                                            },
                                            "updatedAt": {
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false,
                                          "required": [
                                            "id",
                                            "userId",
                                            "type",
                                            "provider",
                                            "providerAccountId",
                                            "createdAt",
                                            "updatedAt"
                                          ]
                                        }
                                      },
                                      "sessions": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "sessionToken": {
                                              "type": "string"
                                            },
                                            "userId": {
                                              "type": "string"
                                            },
                                            "expires": {
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false,
                                          "required": [
                                            "id",
                                            "sessionToken",
                                            "userId",
                                            "expires"
                                          ]
                                        }
                                      },
                                      "_count": {
                                        "type": "object",
                                        "properties": {
                                          "interactions": {
                                            "type": "integer"
                                          },
                                          "accounts": {
                                            "type": "integer"
                                          },
                                          "sessions": {
                                            "type": "integer"
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "interactions",
                                          "accounts",
                                          "sessions"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "createdAt",
                                      "updatedAt",
                                      "_count"
                                    ]
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "interactionType",
                                  "content",
                                  "timestamp",
                                  "userId",
                                  "user"
                                ]
                              }
                            },
                            "_count": {
                              "type": "object",
                              "properties": {
                                "interactions": {
                                  "type": "integer"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "interactions"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "embeddedIn",
                            "_count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/UpsertOneAccount": {
      "post": {
        "operationId": "CustomerCommunicationUpsertOneAccount",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_15"
                  },
                  "create": {
                    "$ref": "#/components/schemas/customerCommunication_AccountCreateInput_2"
                  },
                  "update": {
                    "$ref": "#/components/schemas/customerCommunication_AccountUpdateInput_2"
                  },
                  "customerCommunication_upsertOneAccount_user_user_interactions_where": {
                    "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_26"
                  },
                  "customerCommunication_upsertOneAccount_user_user_interactions_orderBy": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_InteractionOrderByWithRelationInput_13"
                    }
                  },
                  "customerCommunication_upsertOneAccount_user_user_interactions_cursor": {
                    "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
                  },
                  "customerCommunication_upsertOneAccount_user_user_interactions_take": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_upsertOneAccount_user_user_interactions_skip": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_upsertOneAccount_user_user_interactions_distinct": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
                      "enum": [
                        "id",
                        "interactionType",
                        "content",
                        "timestamp",
                        "userId",
                        "widgetId"
                      ]
                    }
                  },
                  "customerCommunication_upsertOneAccount_user_user_sessions_where": {
                    "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_26"
                  },
                  "customerCommunication_upsertOneAccount_user_user_sessions_orderBy": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_SessionOrderByWithRelationInput_13"
                    }
                  },
                  "customerCommunication_upsertOneAccount_user_user_sessions_cursor": {
                    "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
                  },
                  "customerCommunication_upsertOneAccount_user_user_sessions_take": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_upsertOneAccount_user_user_sessions_skip": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_upsertOneAccount_user_user_sessions_distinct": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
                      "enum": [
                        "id",
                        "sessionToken",
                        "userId",
                        "expires"
                      ]
                    }
                  }
                },
                "additionalProperties": false,
                "required": [
                  "where",
                  "create",
                  "update"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_upsertOneAccount": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "provider": {
                              "type": "string"
                            },
                            "providerAccountId": {
                              "type": "string"
                            },
                            "refresh_token": {
                              "type": "string"
                            },
                            "access_token": {
                              "type": "string"
                            },
                            "expires_at": {
                              "type": "integer"
                            },
                            "token_type": {
                              "type": "string"
                            },
                            "scope": {
                              "type": "string"
                            },
                            "id_token": {
                              "type": "string"
                            },
                            "session_state": {
                              "type": "string"
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            },
                            "user": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "email": {
                                  "type": "string"
                                },
                                "emailVerified": {
                                  "type": "string"
                                },
                                "image": {
                                  "type": "string"
                                },
                                "createdAt": {
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "type": "string"
                                },
                                "userType": {
                                  "type": "string",
                                  "enum": [
                                    "CALL_CENTER_REP",
                                    "CUSTOMER",
                                    "FINANCIAL_REP"
                                  ]
                                },
                                "stripeCustomerId": {
                                  "type": "string"
                                },
                                "stripeSubscriptionId": {
                                  "type": "string"
                                },
                                "stripePriceId": {
                                  "type": "string"
                                },
                                "stripeCurrentPeriodEnd": {
                                  "type": "string"
                                },
                                "interactions": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "interactionType": {
                                        "type": "string",
                                        "enum": [
                                          "CALL",
                                          "CHAT",
                                          "EMAIL",
                                          "WEB_USAGE",
                                          "IVR_HUGO_USAGE",
                                          "OUTBOUND_CORRESPONDENCE",
                                          "MARKETING_MATERIAL",
                                          "TEXT"
                                        ]
                                      },
                                      "content": {
                                        "type": "string"
                                      },
                                      "timestamp": {
                                        "type": "string"
                                      },
                                      "userId": {
                                        "type": "string"
                                      },
                                      "widgetId": {
                                        "type": "string"
                                      },
                                      "Widget": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "embeddedIn": {
                                            "type": "string"
                                          },
                                          "_count": {
                                            "type": "object",
                                            "properties": {
                                              "interactions": {
                                                "type": "integer"
                                              }
                                            },
                                            "additionalProperties": false,
                                            "required": [
                                              "interactions"
                                            ]
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "id",
                                          "embeddedIn",
                                          "_count"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "interactionType",
                                      "content",
                                      "timestamp",
                                      "userId"
                                    ]
                                  }
                                },
                                "sessions": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "sessionToken": {
                                        "type": "string"
                                      },
                                      "userId": {
                                        "type": "string"
                                      },
                                      "expires": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "sessionToken",
                                      "userId",
                                      "expires"
                                    ]
                                  }
                                },
                                "_count": {
                                  "type": "object",
                                  "properties": {
                                    "interactions": {
                                      "type": "integer"
                                    },
                                    "accounts": {
                                      "type": "integer"
                                    },
                                    "sessions": {
                                      "type": "integer"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "interactions",
                                    "accounts",
                                    "sessions"
                                  ]
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "createdAt",
                                "updatedAt",
                                "_count"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "userId",
                            "type",
                            "provider",
                            "providerAccountId",
                            "createdAt",
                            "updatedAt",
                            "user"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/UpsertOneFilter": {
      "post": {
        "operationId": "CustomerCommunicationUpsertOneFilter",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/customerCommunication_FilterWhereUniqueInput"
                  },
                  "create": {
                    "$ref": "#/components/schemas/customerCommunication_FilterCreateInput"
                  },
                  "update": {
                    "$ref": "#/components/schemas/customerCommunication_FilterUpdateInput_2"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "where",
                  "create",
                  "update"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_upsertOneFilter": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "audience": {
                              "type": "string",
                              "enum": [
                                "CALL_CENTER",
                                "CLIENT_PORTAL",
                                "GUARDIAN_ONLINE",
                                "GPAC",
                                "SMART_OFFICE",
                                "LIVING_BALANCE_SHEET"
                              ]
                            },
                            "output": {
                              "type": "string",
                              "enum": [
                                "CALLS",
                                "CHATS",
                                "EMAILS",
                                "WEB_USAGE",
                                "IVR_HUGO_USAGE",
                                "OUTBOUND_CORRESPONDENCE",
                                "MARKETING_MATERIALS",
                                "TEXTS"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "audience",
                            "output"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/UpsertOneInteraction": {
      "post": {
        "operationId": "CustomerCommunicationUpsertOneInteraction",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
                  },
                  "create": {
                    "$ref": "#/components/schemas/customerCommunication_InteractionCreateInput_2"
                  },
                  "update": {
                    "$ref": "#/components/schemas/customerCommunication_InteractionUpdateInput_2"
                  },
                  "customerCommunication_upsertOneInteraction_user_user_accounts_where": {
                    "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_27"
                  },
                  "customerCommunication_upsertOneInteraction_user_user_accounts_orderBy": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_AccountOrderByWithRelationInput_13"
                    }
                  },
                  "customerCommunication_upsertOneInteraction_user_user_accounts_cursor": {
                    "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_16"
                  },
                  "customerCommunication_upsertOneInteraction_user_user_accounts_take": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_upsertOneInteraction_user_user_accounts_skip": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_upsertOneInteraction_user_user_accounts_distinct": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
                      "enum": [
                        "id",
                        "userId",
                        "type",
                        "provider",
                        "providerAccountId",
                        "refresh_token",
                        "access_token",
                        "expires_at",
                        "token_type",
                        "scope",
                        "id_token",
                        "session_state",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  },
                  "customerCommunication_upsertOneInteraction_user_user_sessions_where": {
                    "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_27"
                  },
                  "customerCommunication_upsertOneInteraction_user_user_sessions_orderBy": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_SessionOrderByWithRelationInput_14"
                    }
                  },
                  "customerCommunication_upsertOneInteraction_user_user_sessions_cursor": {
                    "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
                  },
                  "customerCommunication_upsertOneInteraction_user_user_sessions_take": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_upsertOneInteraction_user_user_sessions_skip": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_upsertOneInteraction_user_user_sessions_distinct": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
                      "enum": [
                        "id",
                        "sessionToken",
                        "userId",
                        "expires"
                      ]
                    }
                  }
                },
                "additionalProperties": false,
                "required": [
                  "where",
                  "create",
                  "update"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_upsertOneInteraction": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "interactionType": {
                              "type": "string",
                              "enum": [
                                "CALL",
                                "CHAT",
                                "EMAIL",
                                "WEB_USAGE",
                                "IVR_HUGO_USAGE",
                                "OUTBOUND_CORRESPONDENCE",
                                "MARKETING_MATERIAL",
                                "TEXT"
                              ]
                            },
                            "content": {
                              "type": "string"
                            },
                            "timestamp": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            },
                            "widgetId": {
                              "type": "string"
                            },
                            "user": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "email": {
                                  "type": "string"
                                },
                                "emailVerified": {
                                  "type": "string"
                                },
                                "image": {
                                  "type": "string"
                                },
                                "createdAt": {
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "type": "string"
                                },
                                "userType": {
                                  "type": "string",
                                  "enum": [
                                    "CALL_CENTER_REP",
                                    "CUSTOMER",
                                    "FINANCIAL_REP"
                                  ]
                                },
                                "stripeCustomerId": {
                                  "type": "string"
                                },
                                "stripeSubscriptionId": {
                                  "type": "string"
                                },
                                "stripePriceId": {
                                  "type": "string"
                                },
                                "stripeCurrentPeriodEnd": {
                                  "type": "string"
                                },
                                "accounts": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "userId": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      },
                                      "provider": {
                                        "type": "string"
                                      },
                                      "providerAccountId": {
                                        "type": "string"
                                      },
                                      "refresh_token": {
                                        "type": "string"
                                      },
                                      "access_token": {
                                        "type": "string"
                                      },
                                      "expires_at": {
                                        "type": "integer"
                                      },
                                      "token_type": {
                                        "type": "string"
                                      },
                                      "scope": {
                                        "type": "string"
                                      },
                                      "id_token": {
                                        "type": "string"
                                      },
                                      "session_state": {
                                        "type": "string"
                                      },
                                      "createdAt": {
                                        "type": "string"
                                      },
                                      "updatedAt": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "userId",
                                      "type",
                                      "provider",
                                      "providerAccountId",
                                      "createdAt",
                                      "updatedAt"
                                    ]
                                  }
                                },
                                "sessions": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "sessionToken": {
                                        "type": "string"
                                      },
                                      "userId": {
                                        "type": "string"
                                      },
                                      "expires": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "sessionToken",
                                      "userId",
                                      "expires"
                                    ]
                                  }
                                },
                                "_count": {
                                  "type": "object",
                                  "properties": {
                                    "interactions": {
                                      "type": "integer"
                                    },
                                    "accounts": {
                                      "type": "integer"
                                    },
                                    "sessions": {
                                      "type": "integer"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "interactions",
                                    "accounts",
                                    "sessions"
                                  ]
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "createdAt",
                                "updatedAt",
                                "_count"
                              ]
                            },
                            "Widget": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "embeddedIn": {
                                  "type": "string"
                                },
                                "_count": {
                                  "type": "object",
                                  "properties": {
                                    "interactions": {
                                      "type": "integer"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "interactions"
                                  ]
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "embeddedIn",
                                "_count"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "interactionType",
                            "content",
                            "timestamp",
                            "userId",
                            "user"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/UpsertOneSession": {
      "post": {
        "operationId": "CustomerCommunicationUpsertOneSession",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
                  },
                  "create": {
                    "$ref": "#/components/schemas/customerCommunication_SessionCreateInput_2"
                  },
                  "update": {
                    "$ref": "#/components/schemas/customerCommunication_SessionUpdateInput_2"
                  },
                  "customerCommunication_upsertOneSession_user_user_interactions_where": {
                    "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_28"
                  },
                  "customerCommunication_upsertOneSession_user_user_interactions_orderBy": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_InteractionOrderByWithRelationInput_14"
                    }
                  },
                  "customerCommunication_upsertOneSession_user_user_interactions_cursor": {
                    "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
                  },
                  "customerCommunication_upsertOneSession_user_user_interactions_take": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_upsertOneSession_user_user_interactions_skip": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_upsertOneSession_user_user_interactions_distinct": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
                      "enum": [
                        "id",
                        "interactionType",
                        "content",
                        "timestamp",
                        "userId",
                        "widgetId"
                      ]
                    }
                  },
                  "customerCommunication_upsertOneSession_user_user_accounts_where": {
                    "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_28"
                  },
                  "customerCommunication_upsertOneSession_user_user_accounts_orderBy": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_AccountOrderByWithRelationInput_14"
                    }
                  },
                  "customerCommunication_upsertOneSession_user_user_accounts_cursor": {
                    "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_17"
                  },
                  "customerCommunication_upsertOneSession_user_user_accounts_take": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_upsertOneSession_user_user_accounts_skip": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_upsertOneSession_user_user_accounts_distinct": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
                      "enum": [
                        "id",
                        "userId",
                        "type",
                        "provider",
                        "providerAccountId",
                        "refresh_token",
                        "access_token",
                        "expires_at",
                        "token_type",
                        "scope",
                        "id_token",
                        "session_state",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  }
                },
                "additionalProperties": false,
                "required": [
                  "where",
                  "create",
                  "update"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_upsertOneSession": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "sessionToken": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            },
                            "expires": {
                              "type": "string"
                            },
                            "user": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "email": {
                                  "type": "string"
                                },
                                "emailVerified": {
                                  "type": "string"
                                },
                                "image": {
                                  "type": "string"
                                },
                                "createdAt": {
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "type": "string"
                                },
                                "userType": {
                                  "type": "string",
                                  "enum": [
                                    "CALL_CENTER_REP",
                                    "CUSTOMER",
                                    "FINANCIAL_REP"
                                  ]
                                },
                                "stripeCustomerId": {
                                  "type": "string"
                                },
                                "stripeSubscriptionId": {
                                  "type": "string"
                                },
                                "stripePriceId": {
                                  "type": "string"
                                },
                                "stripeCurrentPeriodEnd": {
                                  "type": "string"
                                },
                                "interactions": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "interactionType": {
                                        "type": "string",
                                        "enum": [
                                          "CALL",
                                          "CHAT",
                                          "EMAIL",
                                          "WEB_USAGE",
                                          "IVR_HUGO_USAGE",
                                          "OUTBOUND_CORRESPONDENCE",
                                          "MARKETING_MATERIAL",
                                          "TEXT"
                                        ]
                                      },
                                      "content": {
                                        "type": "string"
                                      },
                                      "timestamp": {
                                        "type": "string"
                                      },
                                      "userId": {
                                        "type": "string"
                                      },
                                      "widgetId": {
                                        "type": "string"
                                      },
                                      "Widget": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "embeddedIn": {
                                            "type": "string"
                                          },
                                          "_count": {
                                            "type": "object",
                                            "properties": {
                                              "interactions": {
                                                "type": "integer"
                                              }
                                            },
                                            "additionalProperties": false,
                                            "required": [
                                              "interactions"
                                            ]
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "id",
                                          "embeddedIn",
                                          "_count"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "interactionType",
                                      "content",
                                      "timestamp",
                                      "userId"
                                    ]
                                  }
                                },
                                "accounts": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "userId": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      },
                                      "provider": {
                                        "type": "string"
                                      },
                                      "providerAccountId": {
                                        "type": "string"
                                      },
                                      "refresh_token": {
                                        "type": "string"
                                      },
                                      "access_token": {
                                        "type": "string"
                                      },
                                      "expires_at": {
                                        "type": "integer"
                                      },
                                      "token_type": {
                                        "type": "string"
                                      },
                                      "scope": {
                                        "type": "string"
                                      },
                                      "id_token": {
                                        "type": "string"
                                      },
                                      "session_state": {
                                        "type": "string"
                                      },
                                      "createdAt": {
                                        "type": "string"
                                      },
                                      "updatedAt": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "userId",
                                      "type",
                                      "provider",
                                      "providerAccountId",
                                      "createdAt",
                                      "updatedAt"
                                    ]
                                  }
                                },
                                "_count": {
                                  "type": "object",
                                  "properties": {
                                    "interactions": {
                                      "type": "integer"
                                    },
                                    "accounts": {
                                      "type": "integer"
                                    },
                                    "sessions": {
                                      "type": "integer"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "interactions",
                                    "accounts",
                                    "sessions"
                                  ]
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "createdAt",
                                "updatedAt",
                                "_count"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "sessionToken",
                            "userId",
                            "expires",
                            "user"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/UpsertOneUser": {
      "post": {
        "operationId": "CustomerCommunicationUpsertOneUser",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/customerCommunication_UserWhereUniqueInput"
                  },
                  "create": {
                    "$ref": "#/components/schemas/customerCommunication_UserCreateInput_2"
                  },
                  "update": {
                    "$ref": "#/components/schemas/customerCommunication_UserUpdateInput_2"
                  },
                  "customerCommunication_upsertOneUser_interactions_where": {
                    "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_29"
                  },
                  "customerCommunication_upsertOneUser_interactions_orderBy": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_InteractionOrderByWithRelationInput_15"
                    }
                  },
                  "customerCommunication_upsertOneUser_interactions_cursor": {
                    "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
                  },
                  "customerCommunication_upsertOneUser_interactions_take": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_upsertOneUser_interactions_skip": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_upsertOneUser_interactions_distinct": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
                      "enum": [
                        "id",
                        "interactionType",
                        "content",
                        "timestamp",
                        "userId",
                        "widgetId"
                      ]
                    }
                  },
                  "customerCommunication_upsertOneUser_accounts_where": {
                    "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_29"
                  },
                  "customerCommunication_upsertOneUser_accounts_orderBy": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_AccountOrderByWithRelationInput_15"
                    }
                  },
                  "customerCommunication_upsertOneUser_accounts_cursor": {
                    "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_18"
                  },
                  "customerCommunication_upsertOneUser_accounts_take": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_upsertOneUser_accounts_skip": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_upsertOneUser_accounts_distinct": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
                      "enum": [
                        "id",
                        "userId",
                        "type",
                        "provider",
                        "providerAccountId",
                        "refresh_token",
                        "access_token",
                        "expires_at",
                        "token_type",
                        "scope",
                        "id_token",
                        "session_state",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  },
                  "customerCommunication_upsertOneUser_sessions_where": {
                    "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_29"
                  },
                  "customerCommunication_upsertOneUser_sessions_orderBy": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_SessionOrderByWithRelationInput_15"
                    }
                  },
                  "customerCommunication_upsertOneUser_sessions_cursor": {
                    "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
                  },
                  "customerCommunication_upsertOneUser_sessions_take": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_upsertOneUser_sessions_skip": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_upsertOneUser_sessions_distinct": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
                      "enum": [
                        "id",
                        "sessionToken",
                        "userId",
                        "expires"
                      ]
                    }
                  }
                },
                "additionalProperties": false,
                "required": [
                  "where",
                  "create",
                  "update"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_upsertOneUser": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            },
                            "emailVerified": {
                              "type": "string"
                            },
                            "image": {
                              "type": "string"
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            },
                            "userType": {
                              "type": "string",
                              "enum": [
                                "CALL_CENTER_REP",
                                "CUSTOMER",
                                "FINANCIAL_REP"
                              ]
                            },
                            "stripeCustomerId": {
                              "type": "string"
                            },
                            "stripeSubscriptionId": {
                              "type": "string"
                            },
                            "stripePriceId": {
                              "type": "string"
                            },
                            "stripeCurrentPeriodEnd": {
                              "type": "string"
                            },
                            "interactions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "interactionType": {
                                    "type": "string",
                                    "enum": [
                                      "CALL",
                                      "CHAT",
                                      "EMAIL",
                                      "WEB_USAGE",
                                      "IVR_HUGO_USAGE",
                                      "OUTBOUND_CORRESPONDENCE",
                                      "MARKETING_MATERIAL",
                                      "TEXT"
                                    ]
                                  },
                                  "content": {
                                    "type": "string"
                                  },
                                  "timestamp": {
                                    "type": "string"
                                  },
                                  "userId": {
                                    "type": "string"
                                  },
                                  "widgetId": {
                                    "type": "string"
                                  },
                                  "Widget": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "embeddedIn": {
                                        "type": "string"
                                      },
                                      "_count": {
                                        "type": "object",
                                        "properties": {
                                          "interactions": {
                                            "type": "integer"
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "interactions"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "embeddedIn",
                                      "_count"
                                    ]
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "interactionType",
                                  "content",
                                  "timestamp",
                                  "userId"
                                ]
                              }
                            },
                            "accounts": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "userId": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  },
                                  "provider": {
                                    "type": "string"
                                  },
                                  "providerAccountId": {
                                    "type": "string"
                                  },
                                  "refresh_token": {
                                    "type": "string"
                                  },
                                  "access_token": {
                                    "type": "string"
                                  },
                                  "expires_at": {
                                    "type": "integer"
                                  },
                                  "token_type": {
                                    "type": "string"
                                  },
                                  "scope": {
                                    "type": "string"
                                  },
                                  "id_token": {
                                    "type": "string"
                                  },
                                  "session_state": {
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "userId",
                                  "type",
                                  "provider",
                                  "providerAccountId",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              }
                            },
                            "sessions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "sessionToken": {
                                    "type": "string"
                                  },
                                  "userId": {
                                    "type": "string"
                                  },
                                  "expires": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "sessionToken",
                                  "userId",
                                  "expires"
                                ]
                              }
                            },
                            "_count": {
                              "type": "object",
                              "properties": {
                                "interactions": {
                                  "type": "integer"
                                },
                                "accounts": {
                                  "type": "integer"
                                },
                                "sessions": {
                                  "type": "integer"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "interactions",
                                "accounts",
                                "sessions"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "createdAt",
                            "updatedAt",
                            "_count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/UpsertOneVerificationToken": {
      "post": {
        "operationId": "CustomerCommunicationUpsertOneVerificationToken",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/customerCommunication_VerificationTokenWhereUniqueInput_3"
                  },
                  "create": {
                    "$ref": "#/components/schemas/customerCommunication_VerificationTokenCreateInput"
                  },
                  "update": {
                    "$ref": "#/components/schemas/customerCommunication_VerificationTokenUpdateInput_2"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "where",
                  "create",
                  "update"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_upsertOneVerificationToken": {
                          "type": "object",
                          "properties": {
                            "identifier": {
                              "type": "string"
                            },
                            "token": {
                              "type": "string"
                            },
                            "expires": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "identifier",
                            "token",
                            "expires"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/customerCommunication/UpsertOneWidget": {
      "post": {
        "operationId": "CustomerCommunicationUpsertOneWidget",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/customerCommunication_WidgetWhereUniqueInput"
                  },
                  "create": {
                    "$ref": "#/components/schemas/customerCommunication_WidgetCreateInput_2"
                  },
                  "update": {
                    "$ref": "#/components/schemas/customerCommunication_WidgetUpdateInput_2"
                  },
                  "customerCommunication_upsertOneWidget_interactions_where": {
                    "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_30"
                  },
                  "customerCommunication_upsertOneWidget_interactions_orderBy": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_InteractionOrderByWithRelationInput_16"
                    }
                  },
                  "customerCommunication_upsertOneWidget_interactions_cursor": {
                    "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
                  },
                  "customerCommunication_upsertOneWidget_interactions_take": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_upsertOneWidget_interactions_skip": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_upsertOneWidget_interactions_distinct": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "x-graphql-enum-name": "customerCommunication_InteractionScalarFieldEnum",
                      "enum": [
                        "id",
                        "interactionType",
                        "content",
                        "timestamp",
                        "userId",
                        "widgetId"
                      ]
                    }
                  },
                  "customerCommunication_upsertOneWidget_interactions_interactions_user_user_accounts_where": {
                    "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_30"
                  },
                  "customerCommunication_upsertOneWidget_interactions_interactions_user_user_accounts_orderBy": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_AccountOrderByWithRelationInput_16"
                    }
                  },
                  "customerCommunication_upsertOneWidget_interactions_interactions_user_user_accounts_cursor": {
                    "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_19"
                  },
                  "customerCommunication_upsertOneWidget_interactions_interactions_user_user_accounts_take": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_upsertOneWidget_interactions_interactions_user_user_accounts_skip": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_upsertOneWidget_interactions_interactions_user_user_accounts_distinct": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "x-graphql-enum-name": "customerCommunication_AccountScalarFieldEnum",
                      "enum": [
                        "id",
                        "userId",
                        "type",
                        "provider",
                        "providerAccountId",
                        "refresh_token",
                        "access_token",
                        "expires_at",
                        "token_type",
                        "scope",
                        "id_token",
                        "session_state",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  },
                  "customerCommunication_upsertOneWidget_interactions_interactions_user_user_sessions_where": {
                    "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_30"
                  },
                  "customerCommunication_upsertOneWidget_interactions_interactions_user_user_sessions_orderBy": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "$ref": "#/components/schemas/customerCommunication_SessionOrderByWithRelationInput_16"
                    }
                  },
                  "customerCommunication_upsertOneWidget_interactions_interactions_user_user_sessions_cursor": {
                    "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
                  },
                  "customerCommunication_upsertOneWidget_interactions_interactions_user_user_sessions_take": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_upsertOneWidget_interactions_interactions_user_user_sessions_skip": {
                    "type": [
                      "integer",
                      "null"
                    ]
                  },
                  "customerCommunication_upsertOneWidget_interactions_interactions_user_user_sessions_distinct": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "x-graphql-enum-name": "customerCommunication_SessionScalarFieldEnum",
                      "enum": [
                        "id",
                        "sessionToken",
                        "userId",
                        "expires"
                      ]
                    }
                  }
                },
                "additionalProperties": false,
                "required": [
                  "where",
                  "create",
                  "update"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_upsertOneWidget": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "embeddedIn": {
                              "type": "string"
                            },
                            "interactions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "interactionType": {
                                    "type": "string",
                                    "enum": [
                                      "CALL",
                                      "CHAT",
                                      "EMAIL",
                                      "WEB_USAGE",
                                      "IVR_HUGO_USAGE",
                                      "OUTBOUND_CORRESPONDENCE",
                                      "MARKETING_MATERIAL",
                                      "TEXT"
                                    ]
                                  },
                                  "content": {
                                    "type": "string"
                                  },
                                  "timestamp": {
                                    "type": "string"
                                  },
                                  "userId": {
                                    "type": "string"
                                  },
                                  "widgetId": {
                                    "type": "string"
                                  },
                                  "user": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "email": {
                                        "type": "string"
                                      },
                                      "emailVerified": {
                                        "type": "string"
                                      },
                                      "image": {
                                        "type": "string"
                                      },
                                      "createdAt": {
                                        "type": "string"
                                      },
                                      "updatedAt": {
                                        "type": "string"
                                      },
                                      "userType": {
                                        "type": "string",
                                        "enum": [
                                          "CALL_CENTER_REP",
                                          "CUSTOMER",
                                          "FINANCIAL_REP"
                                        ]
                                      },
                                      "stripeCustomerId": {
                                        "type": "string"
                                      },
                                      "stripeSubscriptionId": {
                                        "type": "string"
                                      },
                                      "stripePriceId": {
                                        "type": "string"
                                      },
                                      "stripeCurrentPeriodEnd": {
                                        "type": "string"
                                      },
                                      "accounts": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "userId": {
                                              "type": "string"
                                            },
                                            "type": {
                                              "type": "string"
                                            },
                                            "provider": {
                                              "type": "string"
                                            },
                                            "providerAccountId": {
                                              "type": "string"
                                            },
                                            "refresh_token": {
                                              "type": "string"
                                            },
                                            "access_token": {
                                              "type": "string"
                                            },
                                            "expires_at": {
                                              "type": "integer"
                                            },
                                            "token_type": {
                                              "type": "string"
                                            },
                                            "scope": {
                                              "type": "string"
                                            },
                                            "id_token": {
                                              "type": "string"
                                            },
                                            "session_state": {
                                              "type": "string"
                                            },
                                            "createdAt": {
                                              "type": "string"
                                            },
                                            "updatedAt": {
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false,
                                          "required": [
                                            "id",
                                            "userId",
                                            "type",
                                            "provider",
                                            "providerAccountId",
                                            "createdAt",
                                            "updatedAt"
                                          ]
                                        }
                                      },
                                      "sessions": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "sessionToken": {
                                              "type": "string"
                                            },
                                            "userId": {
                                              "type": "string"
                                            },
                                            "expires": {
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false,
                                          "required": [
                                            "id",
                                            "sessionToken",
                                            "userId",
                                            "expires"
                                          ]
                                        }
                                      },
                                      "_count": {
                                        "type": "object",
                                        "properties": {
                                          "interactions": {
                                            "type": "integer"
                                          },
                                          "accounts": {
                                            "type": "integer"
                                          },
                                          "sessions": {
                                            "type": "integer"
                                          }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                          "interactions",
                                          "accounts",
                                          "sessions"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                      "id",
                                      "createdAt",
                                      "updatedAt",
                                      "_count"
                                    ]
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "interactionType",
                                  "content",
                                  "timestamp",
                                  "userId",
                                  "user"
                                ]
                              }
                            },
                            "_count": {
                              "type": "object",
                              "properties": {
                                "interactions": {
                                  "type": "integer"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "interactions"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "embeddedIn",
                            "_count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/gpac/AggregateAdminAction": {
      "get": {
        "operationId": "GpacAggregateAdminAction",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "gpac_aggregateAdminAction": {
                          "type": "object",
                          "properties": {
                            "_count": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer"
                                },
                                "actionType": {
                                  "type": "integer"
                                },
                                "timestamp": {
                                  "type": "integer"
                                },
                                "details": {
                                  "type": "integer"
                                },
                                "userId": {
                                  "type": "integer"
                                },
                                "_all": {
                                  "type": "integer"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "actionType",
                                "timestamp",
                                "details",
                                "userId",
                                "_all"
                              ]
                            },
                            "_min": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "actionType": {
                                  "type": "string",
                                  "enum": [
                                    "POLICY_CREATION",
                                    "POLICY_MODIFICATION",
                                    "POLICY_CANCELLATION",
                                    "USER_REGISTRATION"
                                  ]
                                },
                                "timestamp": {
                                  "type": "string"
                                },
                                "userId": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "_max": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "actionType": {
                                  "type": "string",
                                  "enum": [
                                    "POLICY_CREATION",
                                    "POLICY_MODIFICATION",
                                    "POLICY_CANCELLATION",
                                    "USER_REGISTRATION"
                                  ]
                                },
                                "timestamp": {
                                  "type": "string"
                                },
                                "userId": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "gpac_aggregateAdminAction"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/gpac/AggregatePolicy": {
      "get": {
        "operationId": "GpacAggregatePolicy",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "gpac_aggregatePolicy": {
                          "type": "object",
                          "properties": {
                            "_count": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer"
                                },
                                "policyType": {
                                  "type": "integer"
                                },
                                "status": {
                                  "type": "integer"
                                },
                                "details": {
                                  "type": "integer"
                                },
                                "userId": {
                                  "type": "integer"
                                },
                                "_all": {
                                  "type": "integer"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "policyType",
                                "status",
                                "details",
                                "userId",
                                "_all"
                              ]
                            },
                            "_min": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "policyType": {
                                  "type": "string",
                                  "enum": [
                                    "LIFE_INSURANCE",
                                    "HEALTH_INSURANCE",
                                    "AUTO_INSURANCE"
                                  ]
                                },
                                "status": {
                                  "type": "string",
                                  "enum": [
                                    "ACTIVE",
                                    "PENDING",
                                    "LAPSED",
                                    "CANCELLED"
                                  ]
                                },
                                "userId": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "_max": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "policyType": {
                                  "type": "string",
                                  "enum": [
                                    "LIFE_INSURANCE",
                                    "HEALTH_INSURANCE",
                                    "AUTO_INSURANCE"
                                  ]
                                },
                                "status": {
                                  "type": "string",
                                  "enum": [
                                    "ACTIVE",
                                    "PENDING",
                                    "LAPSED",
                                    "CANCELLED"
                                  ]
                                },
                                "userId": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "gpac_aggregatePolicy"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/gpac/AggregateUser": {
      "get": {
        "operationId": "GpacAggregateUser",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "gpac_aggregateUser": {
                          "type": "object",
                          "properties": {
                            "_count": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer"
                                },
                                "username": {
                                  "type": "integer"
                                },
                                "password": {
                                  "type": "integer"
                                },
                                "role": {
                                  "type": "integer"
                                },
                                "_all": {
                                  "type": "integer"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "username",
                                "password",
                                "role",
                                "_all"
                              ]
                            },
                            "_min": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "username": {
                                  "type": "string"
                                },
                                "password": {
                                  "type": "string"
                                },
                                "role": {
                                  "type": "string",
                                  "enum": [
                                    "ADMIN",
                                    "POLICY_HOLDER",
                                    "AGENT",
                                    "UNDERWRITER"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            },
                            "_max": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "username": {
                                  "type": "string"
                                },
                                "password": {
                                  "type": "string"
                                },
                                "role": {
                                  "type": "string",
                                  "enum": [
                                    "ADMIN",
                                    "POLICY_HOLDER",
                                    "AGENT",
                                    "UNDERWRITER"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "gpac_aggregateUser"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/gpac/CreateManyAdminAction": {
      "post": {
        "operationId": "GpacCreateManyAdminAction",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/gpac_AdminActionCreateManyInput"
                    }
                  },
                  "skipDuplicates": {
                    "type": [
                      "boolean",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "gpac_createManyAdminAction": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/gpac/CreateManyPolicy": {
      "post": {
        "operationId": "GpacCreateManyPolicy",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/gpac_PolicyCreateManyInput"
                    }
                  },
                  "skipDuplicates": {
                    "type": [
                      "boolean",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "gpac_createManyPolicy": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/gpac/CreateManyUser": {
      "post": {
        "operationId": "GpacCreateManyUser",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/gpac_UserCreateManyInput"
                    }
                  },
                  "skipDuplicates": {
                    "type": [
                      "boolean",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "gpac_createManyUser": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/gpac/CreateOneAdminAction": {
      "post": {
        "operationId": "GpacCreateOneAdminAction",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/gpac_AdminActionCreateInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "gpac_createOneAdminAction": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "actionType": {
                              "type": "string",
                              "enum": [
                                "POLICY_CREATION",
                                "POLICY_MODIFICATION",
                                "POLICY_CANCELLATION",
                                "USER_REGISTRATION"
                              ]
                            },
                            "timestamp": {
                              "type": "string"
                            },
                            "details": {},
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "actionType",
                            "timestamp",
                            "details",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/gpac/CreateOnePolicy": {
      "post": {
        "operationId": "GpacCreateOnePolicy",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/gpac_PolicyCreateInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "gpac_createOnePolicy": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "policyType": {
                              "type": "string",
                              "enum": [
                                "LIFE_INSURANCE",
                                "HEALTH_INSURANCE",
                                "AUTO_INSURANCE"
                              ]
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "ACTIVE",
                                "PENDING",
                                "LAPSED",
                                "CANCELLED"
                              ]
                            },
                            "details": {},
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "policyType",
                            "status",
                            "details",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/gpac/CreateOneUser": {
      "post": {
        "operationId": "GpacCreateOneUser",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/gpac_UserCreateInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "gpac_createOneUser": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "password": {
                              "type": "string"
                            },
                            "role": {
                              "type": "string",
                              "enum": [
                                "ADMIN",
                                "POLICY_HOLDER",
                                "AGENT",
                                "UNDERWRITER"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "username",
                            "password",
                            "role"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/gpac/DeleteManyAdminAction": {
      "post": {
        "operationId": "GpacDeleteManyAdminAction",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/gpac_AdminActionWhereInput"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "gpac_deleteManyAdminAction": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/gpac/DeleteManyPolicy": {
      "post": {
        "operationId": "GpacDeleteManyPolicy",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/gpac_PolicyWhereInput"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "gpac_deleteManyPolicy": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/gpac/DeleteManyUser": {
      "post": {
        "operationId": "GpacDeleteManyUser",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/gpac_UserWhereInput"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "gpac_deleteManyUser": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/gpac/DeleteOneAdminAction": {
      "post": {
        "operationId": "GpacDeleteOneAdminAction",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/gpac_AdminActionWhereUniqueInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "where"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "gpac_deleteOneAdminAction": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "actionType": {
                              "type": "string",
                              "enum": [
                                "POLICY_CREATION",
                                "POLICY_MODIFICATION",
                                "POLICY_CANCELLATION",
                                "USER_REGISTRATION"
                              ]
                            },
                            "timestamp": {
                              "type": "string"
                            },
                            "details": {},
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "actionType",
                            "timestamp",
                            "details",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/gpac/DeleteOnePolicy": {
      "post": {
        "operationId": "GpacDeleteOnePolicy",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/gpac_PolicyWhereUniqueInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "where"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "gpac_deleteOnePolicy": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "policyType": {
                              "type": "string",
                              "enum": [
                                "LIFE_INSURANCE",
                                "HEALTH_INSURANCE",
                                "AUTO_INSURANCE"
                              ]
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "ACTIVE",
                                "PENDING",
                                "LAPSED",
                                "CANCELLED"
                              ]
                            },
                            "details": {},
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "policyType",
                            "status",
                            "details",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/gpac/DeleteOneUser": {
      "post": {
        "operationId": "GpacDeleteOneUser",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/gpac_UserWhereUniqueInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "where"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "gpac_deleteOneUser": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "password": {
                              "type": "string"
                            },
                            "role": {
                              "type": "string",
                              "enum": [
                                "ADMIN",
                                "POLICY_HOLDER",
                                "AGENT",
                                "UNDERWRITER"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "username",
                            "password",
                            "role"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/gpac/ExecuteRaw": {
      "post": {
        "operationId": "GpacExecuteRaw",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "query": {
                    "type": "string"
                  },
                  "parameters": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                },
                "additionalProperties": false,
                "required": [
                  "query"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "gpac_executeRaw": {
                          "type": "integer"
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "gpac_executeRaw"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/gpac/FindFirstAdminAction": {
      "get": {
        "operationId": "GpacFindFirstAdminAction",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "gpac_findFirstAdminAction": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "actionType": {
                              "type": "string",
                              "enum": [
                                "POLICY_CREATION",
                                "POLICY_MODIFICATION",
                                "POLICY_CANCELLATION",
                                "USER_REGISTRATION"
                              ]
                            },
                            "timestamp": {
                              "type": "string"
                            },
                            "details": {},
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "actionType",
                            "timestamp",
                            "details",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/gpac/FindFirstAdminActionOrThrow": {
      "get": {
        "operationId": "GpacFindFirstAdminActionOrThrow",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "gpac_findFirstAdminActionOrThrow": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "actionType": {
                              "type": "string",
                              "enum": [
                                "POLICY_CREATION",
                                "POLICY_MODIFICATION",
                                "POLICY_CANCELLATION",
                                "USER_REGISTRATION"
                              ]
                            },
                            "timestamp": {
                              "type": "string"
                            },
                            "details": {},
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "actionType",
                            "timestamp",
                            "details",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/gpac/FindFirstPolicy": {
      "get": {
        "operationId": "GpacFindFirstPolicy",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "gpac_findFirstPolicy": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "policyType": {
                              "type": "string",
                              "enum": [
                                "LIFE_INSURANCE",
                                "HEALTH_INSURANCE",
                                "AUTO_INSURANCE"
                              ]
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "ACTIVE",
                                "PENDING",
                                "LAPSED",
                                "CANCELLED"
                              ]
                            },
                            "details": {},
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "policyType",
                            "status",
                            "details",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/gpac/FindFirstPolicyOrThrow": {
      "get": {
        "operationId": "GpacFindFirstPolicyOrThrow",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "gpac_findFirstPolicyOrThrow": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "policyType": {
                              "type": "string",
                              "enum": [
                                "LIFE_INSURANCE",
                                "HEALTH_INSURANCE",
                                "AUTO_INSURANCE"
                              ]
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "ACTIVE",
                                "PENDING",
                                "LAPSED",
                                "CANCELLED"
                              ]
                            },
                            "details": {},
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "policyType",
                            "status",
                            "details",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/gpac/FindFirstUser": {
      "get": {
        "operationId": "GpacFindFirstUser",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "gpac_findFirstUser": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "password": {
                              "type": "string"
                            },
                            "role": {
                              "type": "string",
                              "enum": [
                                "ADMIN",
                                "POLICY_HOLDER",
                                "AGENT",
                                "UNDERWRITER"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "username",
                            "password",
                            "role"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/gpac/FindFirstUserOrThrow": {
      "get": {
        "operationId": "GpacFindFirstUserOrThrow",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "gpac_findFirstUserOrThrow": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "password": {
                              "type": "string"
                            },
                            "role": {
                              "type": "string",
                              "enum": [
                                "ADMIN",
                                "POLICY_HOLDER",
                                "AGENT",
                                "UNDERWRITER"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "username",
                            "password",
                            "role"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/gpac/FindManyAdminAction": {
      "get": {
        "operationId": "GpacFindManyAdminAction",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "gpac_findManyAdminAction": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "actionType": {
                                "type": "string",
                                "enum": [
                                  "POLICY_CREATION",
                                  "POLICY_MODIFICATION",
                                  "POLICY_CANCELLATION",
                                  "USER_REGISTRATION"
                                ]
                              },
                              "timestamp": {
                                "type": "string"
                              },
                              "details": {},
                              "userId": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "id",
                              "actionType",
                              "timestamp",
                              "details",
                              "userId"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "gpac_findManyAdminAction"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/gpac/FindManyPolicy": {
      "get": {
        "operationId": "GpacFindManyPolicy",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "gpac_findManyPolicy": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "policyType": {
                                "type": "string",
                                "enum": [
                                  "LIFE_INSURANCE",
                                  "HEALTH_INSURANCE",
                                  "AUTO_INSURANCE"
                                ]
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "ACTIVE",
                                  "PENDING",
                                  "LAPSED",
                                  "CANCELLED"
                                ]
                              },
                              "details": {},
                              "userId": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "id",
                              "policyType",
                              "status",
                              "details",
                              "userId"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "gpac_findManyPolicy"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/gpac/FindManyUser": {
      "get": {
        "operationId": "GpacFindManyUser",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "gpac_findManyUser": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "username": {
                                "type": "string"
                              },
                              "password": {
                                "type": "string"
                              },
                              "role": {
                                "type": "string",
                                "enum": [
                                  "ADMIN",
                                  "POLICY_HOLDER",
                                  "AGENT",
                                  "UNDERWRITER"
                                ]
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "id",
                              "username",
                              "password",
                              "role"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "gpac_findManyUser"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/gpac/FindUniqueAdminAction": {
      "get": {
        "operationId": "GpacFindUniqueAdminAction",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "gpac_findUniqueAdminAction": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "actionType": {
                              "type": "string",
                              "enum": [
                                "POLICY_CREATION",
                                "POLICY_MODIFICATION",
                                "POLICY_CANCELLATION",
                                "USER_REGISTRATION"
                              ]
                            },
                            "timestamp": {
                              "type": "string"
                            },
                            "details": {},
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "actionType",
                            "timestamp",
                            "details",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/gpac/FindUniqueAdminActionOrThrow": {
      "get": {
        "operationId": "GpacFindUniqueAdminActionOrThrow",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "gpac_findUniqueAdminActionOrThrow": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "actionType": {
                              "type": "string",
                              "enum": [
                                "POLICY_CREATION",
                                "POLICY_MODIFICATION",
                                "POLICY_CANCELLATION",
                                "USER_REGISTRATION"
                              ]
                            },
                            "timestamp": {
                              "type": "string"
                            },
                            "details": {},
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "actionType",
                            "timestamp",
                            "details",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/gpac/FindUniquePolicy": {
      "get": {
        "operationId": "GpacFindUniquePolicy",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "gpac_findUniquePolicy": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "policyType": {
                              "type": "string",
                              "enum": [
                                "LIFE_INSURANCE",
                                "HEALTH_INSURANCE",
                                "AUTO_INSURANCE"
                              ]
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "ACTIVE",
                                "PENDING",
                                "LAPSED",
                                "CANCELLED"
                              ]
                            },
                            "details": {},
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "policyType",
                            "status",
                            "details",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/gpac/FindUniquePolicyOrThrow": {
      "get": {
        "operationId": "GpacFindUniquePolicyOrThrow",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "gpac_findUniquePolicyOrThrow": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "policyType": {
                              "type": "string",
                              "enum": [
                                "LIFE_INSURANCE",
                                "HEALTH_INSURANCE",
                                "AUTO_INSURANCE"
                              ]
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "ACTIVE",
                                "PENDING",
                                "LAPSED",
                                "CANCELLED"
                              ]
                            },
                            "details": {},
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "policyType",
                            "status",
                            "details",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/gpac/FindUniqueUser": {
      "get": {
        "operationId": "GpacFindUniqueUser",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "gpac_findUniqueUser": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "password": {
                              "type": "string"
                            },
                            "role": {
                              "type": "string",
                              "enum": [
                                "ADMIN",
                                "POLICY_HOLDER",
                                "AGENT",
                                "UNDERWRITER"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "username",
                            "password",
                            "role"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/gpac/FindUniqueUserOrThrow": {
      "get": {
        "operationId": "GpacFindUniqueUserOrThrow",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "gpac_findUniqueUserOrThrow": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "password": {
                              "type": "string"
                            },
                            "role": {
                              "type": "string",
                              "enum": [
                                "ADMIN",
                                "POLICY_HOLDER",
                                "AGENT",
                                "UNDERWRITER"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "username",
                            "password",
                            "role"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/gpac/GroupByAdminAction": {
      "get": {
        "operationId": "GpacGroupByAdminAction",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "by.0",
            "description": "Type: string,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "gpac_groupByAdminAction": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "actionType": {
                                "type": "string",
                                "enum": [
                                  "POLICY_CREATION",
                                  "POLICY_MODIFICATION",
                                  "POLICY_CANCELLATION",
                                  "USER_REGISTRATION"
                                ]
                              },
                              "timestamp": {
                                "type": "string"
                              },
                              "details": {},
                              "userId": {
                                "type": "string"
                              },
                              "_count": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer"
                                  },
                                  "actionType": {
                                    "type": "integer"
                                  },
                                  "timestamp": {
                                    "type": "integer"
                                  },
                                  "details": {
                                    "type": "integer"
                                  },
                                  "userId": {
                                    "type": "integer"
                                  },
                                  "_all": {
                                    "type": "integer"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "actionType",
                                  "timestamp",
                                  "details",
                                  "userId",
                                  "_all"
                                ]
                              },
                              "_min": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "actionType": {
                                    "type": "string",
                                    "enum": [
                                      "POLICY_CREATION",
                                      "POLICY_MODIFICATION",
                                      "POLICY_CANCELLATION",
                                      "USER_REGISTRATION"
                                    ]
                                  },
                                  "timestamp": {
                                    "type": "string"
                                  },
                                  "userId": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "_max": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "actionType": {
                                    "type": "string",
                                    "enum": [
                                      "POLICY_CREATION",
                                      "POLICY_MODIFICATION",
                                      "POLICY_CANCELLATION",
                                      "USER_REGISTRATION"
                                    ]
                                  },
                                  "timestamp": {
                                    "type": "string"
                                  },
                                  "userId": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "id",
                              "actionType",
                              "timestamp",
                              "details",
                              "userId"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "gpac_groupByAdminAction"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/gpac/GroupByPolicy": {
      "get": {
        "operationId": "GpacGroupByPolicy",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "by.0",
            "description": "Type: string,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "gpac_groupByPolicy": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "policyType": {
                                "type": "string",
                                "enum": [
                                  "LIFE_INSURANCE",
                                  "HEALTH_INSURANCE",
                                  "AUTO_INSURANCE"
                                ]
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "ACTIVE",
                                  "PENDING",
                                  "LAPSED",
                                  "CANCELLED"
                                ]
                              },
                              "details": {},
                              "userId": {
                                "type": "string"
                              },
                              "_count": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer"
                                  },
                                  "policyType": {
                                    "type": "integer"
                                  },
                                  "status": {
                                    "type": "integer"
                                  },
                                  "details": {
                                    "type": "integer"
                                  },
                                  "userId": {
                                    "type": "integer"
                                  },
                                  "_all": {
                                    "type": "integer"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "policyType",
                                  "status",
                                  "details",
                                  "userId",
                                  "_all"
                                ]
                              },
                              "_min": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "policyType": {
                                    "type": "string",
                                    "enum": [
                                      "LIFE_INSURANCE",
                                      "HEALTH_INSURANCE",
                                      "AUTO_INSURANCE"
                                    ]
                                  },
                                  "status": {
                                    "type": "string",
                                    "enum": [
                                      "ACTIVE",
                                      "PENDING",
                                      "LAPSED",
                                      "CANCELLED"
                                    ]
                                  },
                                  "userId": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "_max": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "policyType": {
                                    "type": "string",
                                    "enum": [
                                      "LIFE_INSURANCE",
                                      "HEALTH_INSURANCE",
                                      "AUTO_INSURANCE"
                                    ]
                                  },
                                  "status": {
                                    "type": "string",
                                    "enum": [
                                      "ACTIVE",
                                      "PENDING",
                                      "LAPSED",
                                      "CANCELLED"
                                    ]
                                  },
                                  "userId": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "id",
                              "policyType",
                              "status",
                              "details",
                              "userId"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "gpac_groupByPolicy"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/gpac/GroupByUser": {
      "get": {
        "operationId": "GpacGroupByUser",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "by.0",
            "description": "Type: string,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "gpac_groupByUser": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "username": {
                                "type": "string"
                              },
                              "password": {
                                "type": "string"
                              },
                              "role": {
                                "type": "string",
                                "enum": [
                                  "ADMIN",
                                  "POLICY_HOLDER",
                                  "AGENT",
                                  "UNDERWRITER"
                                ]
                              },
                              "_count": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer"
                                  },
                                  "username": {
                                    "type": "integer"
                                  },
                                  "password": {
                                    "type": "integer"
                                  },
                                  "role": {
                                    "type": "integer"
                                  },
                                  "_all": {
                                    "type": "integer"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "username",
                                  "password",
                                  "role",
                                  "_all"
                                ]
                              },
                              "_min": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "username": {
                                    "type": "string"
                                  },
                                  "password": {
                                    "type": "string"
                                  },
                                  "role": {
                                    "type": "string",
                                    "enum": [
                                      "ADMIN",
                                      "POLICY_HOLDER",
                                      "AGENT",
                                      "UNDERWRITER"
                                    ]
                                  }
                                },
                                "additionalProperties": false
                              },
                              "_max": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "username": {
                                    "type": "string"
                                  },
                                  "password": {
                                    "type": "string"
                                  },
                                  "role": {
                                    "type": "string",
                                    "enum": [
                                      "ADMIN",
                                      "POLICY_HOLDER",
                                      "AGENT",
                                      "UNDERWRITER"
                                    ]
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "id",
                              "username",
                              "password",
                              "role"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "gpac_groupByUser"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/gpac/QueryRaw": {
      "get": {
        "operationId": "GpacQueryRaw",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "query",
            "description": "Type: string",
            "in": "query",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parameters",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "gpac_queryRaw": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "ID": {
                                "type": "string"
                              },
                              "Int": {
                                "type": "integer"
                              },
                              "Float": {
                                "type": "number"
                              },
                              "String": {
                                "type": "string"
                              },
                              "Boolean": {
                                "type": "boolean"
                              },
                              "DateTime": {
                                "type": "string"
                              },
                              "JSON": {},
                              "Object": {
                                "type": "object",
                                "properties": {
                                  "ID": {
                                    "type": "string"
                                  },
                                  "Int": {
                                    "type": "integer"
                                  },
                                  "Float": {
                                    "type": "number"
                                  },
                                  "String": {
                                    "type": "string"
                                  },
                                  "Boolean": {
                                    "type": "boolean"
                                  },
                                  "DateTime": {
                                    "type": "string"
                                  },
                                  "JSON": {},
                                  "OptionalID": {
                                    "type": "string"
                                  },
                                  "OptionalInt": {
                                    "type": "integer"
                                  },
                                  "OptionalFloat": {
                                    "type": "number"
                                  },
                                  "OptionalString": {
                                    "type": "string"
                                  },
                                  "OptionalBoolean": {
                                    "type": "boolean"
                                  },
                                  "OptionalDateTime": {
                                    "type": "string"
                                  },
                                  "OptionalJSON": {}
                                },
                                "additionalProperties": false,
                                "required": [
                                  "ID",
                                  "Int",
                                  "Float",
                                  "String",
                                  "Boolean",
                                  "DateTime",
                                  "JSON"
                                ]
                              },
                              "Array": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "ID": {
                                      "type": "string"
                                    },
                                    "Int": {
                                      "type": "integer"
                                    },
                                    "Float": {
                                      "type": "number"
                                    },
                                    "String": {
                                      "type": "string"
                                    },
                                    "Boolean": {
                                      "type": "boolean"
                                    },
                                    "DateTime": {
                                      "type": "string"
                                    },
                                    "JSON": {},
                                    "OptionalID": {
                                      "type": "string"
                                    },
                                    "OptionalInt": {
                                      "type": "integer"
                                    },
                                    "OptionalFloat": {
                                      "type": "number"
                                    },
                                    "OptionalString": {
                                      "type": "string"
                                    },
                                    "OptionalBoolean": {
                                      "type": "boolean"
                                    },
                                    "OptionalDateTime": {
                                      "type": "string"
                                    },
                                    "OptionalJSON": {}
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "ID",
                                    "Int",
                                    "Float",
                                    "String",
                                    "Boolean",
                                    "DateTime",
                                    "JSON"
                                  ]
                                }
                              },
                              "OptionalID": {
                                "type": "string"
                              },
                              "OptionalInt": {
                                "type": "integer"
                              },
                              "OptionalFloat": {
                                "type": "number"
                              },
                              "OptionalString": {
                                "type": "string"
                              },
                              "OptionalBoolean": {
                                "type": "boolean"
                              },
                              "OptionalDateTime": {
                                "type": "string"
                              },
                              "OptionalJSON": {},
                              "OptionalObject": {
                                "type": "object",
                                "properties": {
                                  "ID": {
                                    "type": "string"
                                  },
                                  "Int": {
                                    "type": "integer"
                                  },
                                  "Float": {
                                    "type": "number"
                                  },
                                  "String": {
                                    "type": "string"
                                  },
                                  "Boolean": {
                                    "type": "boolean"
                                  },
                                  "DateTime": {
                                    "type": "string"
                                  },
                                  "JSON": {},
                                  "OptionalID": {
                                    "type": "string"
                                  },
                                  "OptionalInt": {
                                    "type": "integer"
                                  },
                                  "OptionalFloat": {
                                    "type": "number"
                                  },
                                  "OptionalString": {
                                    "type": "string"
                                  },
                                  "OptionalBoolean": {
                                    "type": "boolean"
                                  },
                                  "OptionalDateTime": {
                                    "type": "string"
                                  },
                                  "OptionalJSON": {}
                                },
                                "additionalProperties": false,
                                "required": [
                                  "ID",
                                  "Int",
                                  "Float",
                                  "String",
                                  "Boolean",
                                  "DateTime",
                                  "JSON"
                                ]
                              },
                              "OptionalArray": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "ID": {
                                      "type": "string"
                                    },
                                    "Int": {
                                      "type": "integer"
                                    },
                                    "Float": {
                                      "type": "number"
                                    },
                                    "String": {
                                      "type": "string"
                                    },
                                    "Boolean": {
                                      "type": "boolean"
                                    },
                                    "DateTime": {
                                      "type": "string"
                                    },
                                    "JSON": {},
                                    "OptionalID": {
                                      "type": "string"
                                    },
                                    "OptionalInt": {
                                      "type": "integer"
                                    },
                                    "OptionalFloat": {
                                      "type": "number"
                                    },
                                    "OptionalString": {
                                      "type": "string"
                                    },
                                    "OptionalBoolean": {
                                      "type": "boolean"
                                    },
                                    "OptionalDateTime": {
                                      "type": "string"
                                    },
                                    "OptionalJSON": {}
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "ID",
                                    "Int",
                                    "Float",
                                    "String",
                                    "Boolean",
                                    "DateTime",
                                    "JSON"
                                  ]
                                }
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "ID",
                              "Int",
                              "Float",
                              "String",
                              "Boolean",
                              "DateTime",
                              "JSON",
                              "Object",
                              "Array",
                              "OptionalArray"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "gpac_queryRaw"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/gpac/QueryRawJSON": {
      "get": {
        "operationId": "GpacQueryRawJSON",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "query",
            "description": "Type: string",
            "in": "query",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parameters",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "gpac_queryRawJSON": {}
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/gpac/UpdateManyAdminAction": {
      "post": {
        "operationId": "GpacUpdateManyAdminAction",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/gpac_AdminActionUpdateManyMutationInput"
                  },
                  "where": {
                    "$ref": "#/components/schemas/gpac_AdminActionWhereInput_2"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "gpac_updateManyAdminAction": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/gpac/UpdateManyPolicy": {
      "post": {
        "operationId": "GpacUpdateManyPolicy",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/gpac_PolicyUpdateManyMutationInput"
                  },
                  "where": {
                    "$ref": "#/components/schemas/gpac_PolicyWhereInput_2"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "gpac_updateManyPolicy": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/gpac/UpdateManyUser": {
      "post": {
        "operationId": "GpacUpdateManyUser",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/gpac_UserUpdateManyMutationInput"
                  },
                  "where": {
                    "$ref": "#/components/schemas/gpac_UserWhereInput_2"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "gpac_updateManyUser": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/gpac/UpdateOneAdminAction": {
      "post": {
        "operationId": "GpacUpdateOneAdminAction",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/gpac_AdminActionUpdateInput"
                  },
                  "where": {
                    "$ref": "#/components/schemas/gpac_AdminActionWhereUniqueInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data",
                  "where"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "gpac_updateOneAdminAction": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "actionType": {
                              "type": "string",
                              "enum": [
                                "POLICY_CREATION",
                                "POLICY_MODIFICATION",
                                "POLICY_CANCELLATION",
                                "USER_REGISTRATION"
                              ]
                            },
                            "timestamp": {
                              "type": "string"
                            },
                            "details": {},
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "actionType",
                            "timestamp",
                            "details",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/gpac/UpdateOnePolicy": {
      "post": {
        "operationId": "GpacUpdateOnePolicy",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/gpac_PolicyUpdateInput"
                  },
                  "where": {
                    "$ref": "#/components/schemas/gpac_PolicyWhereUniqueInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data",
                  "where"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "gpac_updateOnePolicy": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "policyType": {
                              "type": "string",
                              "enum": [
                                "LIFE_INSURANCE",
                                "HEALTH_INSURANCE",
                                "AUTO_INSURANCE"
                              ]
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "ACTIVE",
                                "PENDING",
                                "LAPSED",
                                "CANCELLED"
                              ]
                            },
                            "details": {},
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "policyType",
                            "status",
                            "details",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/gpac/UpdateOneUser": {
      "post": {
        "operationId": "GpacUpdateOneUser",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/gpac_UserUpdateInput"
                  },
                  "where": {
                    "$ref": "#/components/schemas/gpac_UserWhereUniqueInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data",
                  "where"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "gpac_updateOneUser": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "password": {
                              "type": "string"
                            },
                            "role": {
                              "type": "string",
                              "enum": [
                                "ADMIN",
                                "POLICY_HOLDER",
                                "AGENT",
                                "UNDERWRITER"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "username",
                            "password",
                            "role"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/gpac/UpsertOneAdminAction": {
      "post": {
        "operationId": "GpacUpsertOneAdminAction",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/gpac_AdminActionWhereUniqueInput"
                  },
                  "create": {
                    "$ref": "#/components/schemas/gpac_AdminActionCreateInput"
                  },
                  "update": {
                    "$ref": "#/components/schemas/gpac_AdminActionUpdateInput_2"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "where",
                  "create",
                  "update"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "gpac_upsertOneAdminAction": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "actionType": {
                              "type": "string",
                              "enum": [
                                "POLICY_CREATION",
                                "POLICY_MODIFICATION",
                                "POLICY_CANCELLATION",
                                "USER_REGISTRATION"
                              ]
                            },
                            "timestamp": {
                              "type": "string"
                            },
                            "details": {},
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "actionType",
                            "timestamp",
                            "details",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/gpac/UpsertOnePolicy": {
      "post": {
        "operationId": "GpacUpsertOnePolicy",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/gpac_PolicyWhereUniqueInput"
                  },
                  "create": {
                    "$ref": "#/components/schemas/gpac_PolicyCreateInput"
                  },
                  "update": {
                    "$ref": "#/components/schemas/gpac_PolicyUpdateInput_2"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "where",
                  "create",
                  "update"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "gpac_upsertOnePolicy": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "policyType": {
                              "type": "string",
                              "enum": [
                                "LIFE_INSURANCE",
                                "HEALTH_INSURANCE",
                                "AUTO_INSURANCE"
                              ]
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "ACTIVE",
                                "PENDING",
                                "LAPSED",
                                "CANCELLED"
                              ]
                            },
                            "details": {},
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "policyType",
                            "status",
                            "details",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/gpac/UpsertOneUser": {
      "post": {
        "operationId": "GpacUpsertOneUser",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/gpac_UserWhereUniqueInput"
                  },
                  "create": {
                    "$ref": "#/components/schemas/gpac_UserCreateInput"
                  },
                  "update": {
                    "$ref": "#/components/schemas/gpac_UserUpdateInput_2"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "where",
                  "create",
                  "update"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "gpac_upsertOneUser": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "password": {
                              "type": "string"
                            },
                            "role": {
                              "type": "string",
                              "enum": [
                                "ADMIN",
                                "POLICY_HOLDER",
                                "AGENT",
                                "UNDERWRITER"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "username",
                            "password",
                            "role"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/guardianOnline/AggregateFeature": {
      "get": {
        "operationId": "GuardianOnlineAggregateFeature",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "guardianOnline_aggregateFeature": {
                          "type": "object",
                          "properties": {
                            "_count": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer"
                                },
                                "featureType": {
                                  "type": "integer"
                                },
                                "content": {
                                  "type": "integer"
                                },
                                "userId": {
                                  "type": "integer"
                                },
                                "_all": {
                                  "type": "integer"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "featureType",
                                "content",
                                "userId",
                                "_all"
                              ]
                            },
                            "_min": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "featureType": {
                                  "type": "string",
                                  "enum": [
                                    "DASHBOARD",
                                    "ACCOUNT_SUMMARY",
                                    "NOTIFICATIONS",
                                    "DOCUMENTS"
                                  ]
                                },
                                "userId": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "_max": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "featureType": {
                                  "type": "string",
                                  "enum": [
                                    "DASHBOARD",
                                    "ACCOUNT_SUMMARY",
                                    "NOTIFICATIONS",
                                    "DOCUMENTS"
                                  ]
                                },
                                "userId": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "guardianOnline_aggregateFeature"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/guardianOnline/AggregateUser": {
      "get": {
        "operationId": "GuardianOnlineAggregateUser",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "guardianOnline_aggregateUser": {
                          "type": "object",
                          "properties": {
                            "_count": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer"
                                },
                                "username": {
                                  "type": "integer"
                                },
                                "password": {
                                  "type": "integer"
                                },
                                "role": {
                                  "type": "integer"
                                },
                                "_all": {
                                  "type": "integer"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "username",
                                "password",
                                "role",
                                "_all"
                              ]
                            },
                            "_min": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "username": {
                                  "type": "string"
                                },
                                "password": {
                                  "type": "string"
                                },
                                "role": {
                                  "type": "string",
                                  "enum": [
                                    "ADMIN",
                                    "AGENT",
                                    "CUSTOMER",
                                    "FINANCIAL_REP"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            },
                            "_max": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "username": {
                                  "type": "string"
                                },
                                "password": {
                                  "type": "string"
                                },
                                "role": {
                                  "type": "string",
                                  "enum": [
                                    "ADMIN",
                                    "AGENT",
                                    "CUSTOMER",
                                    "FINANCIAL_REP"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "guardianOnline_aggregateUser"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/guardianOnline/AggregateUserLog": {
      "get": {
        "operationId": "GuardianOnlineAggregateUserLog",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "guardianOnline_aggregateUserLog": {
                          "type": "object",
                          "properties": {
                            "_count": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer"
                                },
                                "logType": {
                                  "type": "integer"
                                },
                                "contentType": {
                                  "type": "integer"
                                },
                                "timestamp": {
                                  "type": "integer"
                                },
                                "details": {
                                  "type": "integer"
                                },
                                "userId": {
                                  "type": "integer"
                                },
                                "_all": {
                                  "type": "integer"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "logType",
                                "contentType",
                                "timestamp",
                                "details",
                                "userId",
                                "_all"
                              ]
                            },
                            "_min": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "logType": {
                                  "type": "string",
                                  "enum": [
                                    "LOGIN",
                                    "LOGOUT",
                                    "FEATURE_ACCESS",
                                    "DOCUMENT_DOWNLOAD"
                                  ]
                                },
                                "contentType": {
                                  "type": "string",
                                  "enum": [
                                    "CALL",
                                    "CHAT",
                                    "EMAIL",
                                    "WEB_USAGE",
                                    "IVR_HUGO_USAGE",
                                    "OUTBOUND_CORRESPONDENCE",
                                    "MARKETING_MATERIAL",
                                    "TEXT"
                                  ]
                                },
                                "timestamp": {
                                  "type": "string"
                                },
                                "userId": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "_max": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "logType": {
                                  "type": "string",
                                  "enum": [
                                    "LOGIN",
                                    "LOGOUT",
                                    "FEATURE_ACCESS",
                                    "DOCUMENT_DOWNLOAD"
                                  ]
                                },
                                "contentType": {
                                  "type": "string",
                                  "enum": [
                                    "CALL",
                                    "CHAT",
                                    "EMAIL",
                                    "WEB_USAGE",
                                    "IVR_HUGO_USAGE",
                                    "OUTBOUND_CORRESPONDENCE",
                                    "MARKETING_MATERIAL",
                                    "TEXT"
                                  ]
                                },
                                "timestamp": {
                                  "type": "string"
                                },
                                "userId": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "guardianOnline_aggregateUserLog"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/guardianOnline/CreateManyFeature": {
      "post": {
        "operationId": "GuardianOnlineCreateManyFeature",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/guardianOnline_FeatureCreateManyInput"
                    }
                  },
                  "skipDuplicates": {
                    "type": [
                      "boolean",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "guardianOnline_createManyFeature": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/guardianOnline/CreateManyUser": {
      "post": {
        "operationId": "GuardianOnlineCreateManyUser",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/guardianOnline_UserCreateManyInput"
                    }
                  },
                  "skipDuplicates": {
                    "type": [
                      "boolean",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "guardianOnline_createManyUser": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/guardianOnline/CreateManyUserLog": {
      "post": {
        "operationId": "GuardianOnlineCreateManyUserLog",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/guardianOnline_UserLogCreateManyInput"
                    }
                  },
                  "skipDuplicates": {
                    "type": [
                      "boolean",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "guardianOnline_createManyUserLog": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/guardianOnline/CreateOneFeature": {
      "post": {
        "operationId": "GuardianOnlineCreateOneFeature",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/guardianOnline_FeatureCreateInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "guardianOnline_createOneFeature": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "featureType": {
                              "type": "string",
                              "enum": [
                                "DASHBOARD",
                                "ACCOUNT_SUMMARY",
                                "NOTIFICATIONS",
                                "DOCUMENTS"
                              ]
                            },
                            "content": {},
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "featureType",
                            "content",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/guardianOnline/CreateOneUser": {
      "post": {
        "operationId": "GuardianOnlineCreateOneUser",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/guardianOnline_UserCreateInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "guardianOnline_createOneUser": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "password": {
                              "type": "string"
                            },
                            "role": {
                              "type": "string",
                              "enum": [
                                "ADMIN",
                                "AGENT",
                                "CUSTOMER",
                                "FINANCIAL_REP"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "username",
                            "password",
                            "role"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/guardianOnline/CreateOneUserLog": {
      "post": {
        "operationId": "GuardianOnlineCreateOneUserLog",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/guardianOnline_UserLogCreateInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "guardianOnline_createOneUserLog": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "logType": {
                              "type": "string",
                              "enum": [
                                "LOGIN",
                                "LOGOUT",
                                "FEATURE_ACCESS",
                                "DOCUMENT_DOWNLOAD"
                              ]
                            },
                            "contentType": {
                              "type": "string",
                              "enum": [
                                "CALL",
                                "CHAT",
                                "EMAIL",
                                "WEB_USAGE",
                                "IVR_HUGO_USAGE",
                                "OUTBOUND_CORRESPONDENCE",
                                "MARKETING_MATERIAL",
                                "TEXT"
                              ]
                            },
                            "timestamp": {
                              "type": "string"
                            },
                            "details": {},
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "logType",
                            "contentType",
                            "timestamp",
                            "details",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/guardianOnline/DeleteManyFeature": {
      "post": {
        "operationId": "GuardianOnlineDeleteManyFeature",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/guardianOnline_FeatureWhereInput"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "guardianOnline_deleteManyFeature": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/guardianOnline/DeleteManyUser": {
      "post": {
        "operationId": "GuardianOnlineDeleteManyUser",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/guardianOnline_UserWhereInput"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "guardianOnline_deleteManyUser": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/guardianOnline/DeleteManyUserLog": {
      "post": {
        "operationId": "GuardianOnlineDeleteManyUserLog",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/guardianOnline_UserLogWhereInput"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "guardianOnline_deleteManyUserLog": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/guardianOnline/DeleteOneFeature": {
      "post": {
        "operationId": "GuardianOnlineDeleteOneFeature",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/guardianOnline_FeatureWhereUniqueInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "where"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "guardianOnline_deleteOneFeature": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "featureType": {
                              "type": "string",
                              "enum": [
                                "DASHBOARD",
                                "ACCOUNT_SUMMARY",
                                "NOTIFICATIONS",
                                "DOCUMENTS"
                              ]
                            },
                            "content": {},
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "featureType",
                            "content",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/guardianOnline/DeleteOneUser": {
      "post": {
        "operationId": "GuardianOnlineDeleteOneUser",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/guardianOnline_UserWhereUniqueInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "where"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "guardianOnline_deleteOneUser": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "password": {
                              "type": "string"
                            },
                            "role": {
                              "type": "string",
                              "enum": [
                                "ADMIN",
                                "AGENT",
                                "CUSTOMER",
                                "FINANCIAL_REP"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "username",
                            "password",
                            "role"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/guardianOnline/DeleteOneUserLog": {
      "post": {
        "operationId": "GuardianOnlineDeleteOneUserLog",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/guardianOnline_UserLogWhereUniqueInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "where"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "guardianOnline_deleteOneUserLog": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "logType": {
                              "type": "string",
                              "enum": [
                                "LOGIN",
                                "LOGOUT",
                                "FEATURE_ACCESS",
                                "DOCUMENT_DOWNLOAD"
                              ]
                            },
                            "contentType": {
                              "type": "string",
                              "enum": [
                                "CALL",
                                "CHAT",
                                "EMAIL",
                                "WEB_USAGE",
                                "IVR_HUGO_USAGE",
                                "OUTBOUND_CORRESPONDENCE",
                                "MARKETING_MATERIAL",
                                "TEXT"
                              ]
                            },
                            "timestamp": {
                              "type": "string"
                            },
                            "details": {},
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "logType",
                            "contentType",
                            "timestamp",
                            "details",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/guardianOnline/ExecuteRaw": {
      "post": {
        "operationId": "GuardianOnlineExecuteRaw",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "query": {
                    "type": "string"
                  },
                  "parameters": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                },
                "additionalProperties": false,
                "required": [
                  "query"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "guardianOnline_executeRaw": {
                          "type": "integer"
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "guardianOnline_executeRaw"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/guardianOnline/FindFirstFeature": {
      "get": {
        "operationId": "GuardianOnlineFindFirstFeature",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "guardianOnline_findFirstFeature": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "featureType": {
                              "type": "string",
                              "enum": [
                                "DASHBOARD",
                                "ACCOUNT_SUMMARY",
                                "NOTIFICATIONS",
                                "DOCUMENTS"
                              ]
                            },
                            "content": {},
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "featureType",
                            "content",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/guardianOnline/FindFirstFeatureOrThrow": {
      "get": {
        "operationId": "GuardianOnlineFindFirstFeatureOrThrow",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "guardianOnline_findFirstFeatureOrThrow": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "featureType": {
                              "type": "string",
                              "enum": [
                                "DASHBOARD",
                                "ACCOUNT_SUMMARY",
                                "NOTIFICATIONS",
                                "DOCUMENTS"
                              ]
                            },
                            "content": {},
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "featureType",
                            "content",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/guardianOnline/FindFirstUser": {
      "get": {
        "operationId": "GuardianOnlineFindFirstUser",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "guardianOnline_findFirstUser": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "password": {
                              "type": "string"
                            },
                            "role": {
                              "type": "string",
                              "enum": [
                                "ADMIN",
                                "AGENT",
                                "CUSTOMER",
                                "FINANCIAL_REP"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "username",
                            "password",
                            "role"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/guardianOnline/FindFirstUserLog": {
      "get": {
        "operationId": "GuardianOnlineFindFirstUserLog",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "guardianOnline_findFirstUserLog": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "logType": {
                              "type": "string",
                              "enum": [
                                "LOGIN",
                                "LOGOUT",
                                "FEATURE_ACCESS",
                                "DOCUMENT_DOWNLOAD"
                              ]
                            },
                            "contentType": {
                              "type": "string",
                              "enum": [
                                "CALL",
                                "CHAT",
                                "EMAIL",
                                "WEB_USAGE",
                                "IVR_HUGO_USAGE",
                                "OUTBOUND_CORRESPONDENCE",
                                "MARKETING_MATERIAL",
                                "TEXT"
                              ]
                            },
                            "timestamp": {
                              "type": "string"
                            },
                            "details": {},
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "logType",
                            "contentType",
                            "timestamp",
                            "details",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/guardianOnline/FindFirstUserLogOrThrow": {
      "get": {
        "operationId": "GuardianOnlineFindFirstUserLogOrThrow",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "guardianOnline_findFirstUserLogOrThrow": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "logType": {
                              "type": "string",
                              "enum": [
                                "LOGIN",
                                "LOGOUT",
                                "FEATURE_ACCESS",
                                "DOCUMENT_DOWNLOAD"
                              ]
                            },
                            "contentType": {
                              "type": "string",
                              "enum": [
                                "CALL",
                                "CHAT",
                                "EMAIL",
                                "WEB_USAGE",
                                "IVR_HUGO_USAGE",
                                "OUTBOUND_CORRESPONDENCE",
                                "MARKETING_MATERIAL",
                                "TEXT"
                              ]
                            },
                            "timestamp": {
                              "type": "string"
                            },
                            "details": {},
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "logType",
                            "contentType",
                            "timestamp",
                            "details",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/guardianOnline/FindFirstUserOrThrow": {
      "get": {
        "operationId": "GuardianOnlineFindFirstUserOrThrow",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "guardianOnline_findFirstUserOrThrow": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "password": {
                              "type": "string"
                            },
                            "role": {
                              "type": "string",
                              "enum": [
                                "ADMIN",
                                "AGENT",
                                "CUSTOMER",
                                "FINANCIAL_REP"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "username",
                            "password",
                            "role"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/guardianOnline/FindManyFeature": {
      "get": {
        "operationId": "GuardianOnlineFindManyFeature",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "guardianOnline_findManyFeature": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "featureType": {
                                "type": "string",
                                "enum": [
                                  "DASHBOARD",
                                  "ACCOUNT_SUMMARY",
                                  "NOTIFICATIONS",
                                  "DOCUMENTS"
                                ]
                              },
                              "content": {},
                              "userId": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "id",
                              "featureType",
                              "content",
                              "userId"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "guardianOnline_findManyFeature"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/guardianOnline/FindManyUser": {
      "get": {
        "operationId": "GuardianOnlineFindManyUser",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "guardianOnline_findManyUser": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "username": {
                                "type": "string"
                              },
                              "password": {
                                "type": "string"
                              },
                              "role": {
                                "type": "string",
                                "enum": [
                                  "ADMIN",
                                  "AGENT",
                                  "CUSTOMER",
                                  "FINANCIAL_REP"
                                ]
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "id",
                              "username",
                              "password",
                              "role"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "guardianOnline_findManyUser"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/guardianOnline/FindManyUserLog": {
      "get": {
        "operationId": "GuardianOnlineFindManyUserLog",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "guardianOnline_findManyUserLog": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "logType": {
                                "type": "string",
                                "enum": [
                                  "LOGIN",
                                  "LOGOUT",
                                  "FEATURE_ACCESS",
                                  "DOCUMENT_DOWNLOAD"
                                ]
                              },
                              "contentType": {
                                "type": "string",
                                "enum": [
                                  "CALL",
                                  "CHAT",
                                  "EMAIL",
                                  "WEB_USAGE",
                                  "IVR_HUGO_USAGE",
                                  "OUTBOUND_CORRESPONDENCE",
                                  "MARKETING_MATERIAL",
                                  "TEXT"
                                ]
                              },
                              "timestamp": {
                                "type": "string"
                              },
                              "details": {},
                              "userId": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "id",
                              "logType",
                              "contentType",
                              "timestamp",
                              "details",
                              "userId"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "guardianOnline_findManyUserLog"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/guardianOnline/FindUniqueFeature": {
      "get": {
        "operationId": "GuardianOnlineFindUniqueFeature",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "guardianOnline_findUniqueFeature": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "featureType": {
                              "type": "string",
                              "enum": [
                                "DASHBOARD",
                                "ACCOUNT_SUMMARY",
                                "NOTIFICATIONS",
                                "DOCUMENTS"
                              ]
                            },
                            "content": {},
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "featureType",
                            "content",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/guardianOnline/FindUniqueFeatureOrThrow": {
      "get": {
        "operationId": "GuardianOnlineFindUniqueFeatureOrThrow",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "guardianOnline_findUniqueFeatureOrThrow": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "featureType": {
                              "type": "string",
                              "enum": [
                                "DASHBOARD",
                                "ACCOUNT_SUMMARY",
                                "NOTIFICATIONS",
                                "DOCUMENTS"
                              ]
                            },
                            "content": {},
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "featureType",
                            "content",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/guardianOnline/FindUniqueUser": {
      "get": {
        "operationId": "GuardianOnlineFindUniqueUser",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "guardianOnline_findUniqueUser": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "password": {
                              "type": "string"
                            },
                            "role": {
                              "type": "string",
                              "enum": [
                                "ADMIN",
                                "AGENT",
                                "CUSTOMER",
                                "FINANCIAL_REP"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "username",
                            "password",
                            "role"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/guardianOnline/FindUniqueUserLog": {
      "get": {
        "operationId": "GuardianOnlineFindUniqueUserLog",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "guardianOnline_findUniqueUserLog": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "logType": {
                              "type": "string",
                              "enum": [
                                "LOGIN",
                                "LOGOUT",
                                "FEATURE_ACCESS",
                                "DOCUMENT_DOWNLOAD"
                              ]
                            },
                            "contentType": {
                              "type": "string",
                              "enum": [
                                "CALL",
                                "CHAT",
                                "EMAIL",
                                "WEB_USAGE",
                                "IVR_HUGO_USAGE",
                                "OUTBOUND_CORRESPONDENCE",
                                "MARKETING_MATERIAL",
                                "TEXT"
                              ]
                            },
                            "timestamp": {
                              "type": "string"
                            },
                            "details": {},
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "logType",
                            "contentType",
                            "timestamp",
                            "details",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/guardianOnline/FindUniqueUserLogOrThrow": {
      "get": {
        "operationId": "GuardianOnlineFindUniqueUserLogOrThrow",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "guardianOnline_findUniqueUserLogOrThrow": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "logType": {
                              "type": "string",
                              "enum": [
                                "LOGIN",
                                "LOGOUT",
                                "FEATURE_ACCESS",
                                "DOCUMENT_DOWNLOAD"
                              ]
                            },
                            "contentType": {
                              "type": "string",
                              "enum": [
                                "CALL",
                                "CHAT",
                                "EMAIL",
                                "WEB_USAGE",
                                "IVR_HUGO_USAGE",
                                "OUTBOUND_CORRESPONDENCE",
                                "MARKETING_MATERIAL",
                                "TEXT"
                              ]
                            },
                            "timestamp": {
                              "type": "string"
                            },
                            "details": {},
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "logType",
                            "contentType",
                            "timestamp",
                            "details",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/guardianOnline/FindUniqueUserOrThrow": {
      "get": {
        "operationId": "GuardianOnlineFindUniqueUserOrThrow",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "guardianOnline_findUniqueUserOrThrow": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "password": {
                              "type": "string"
                            },
                            "role": {
                              "type": "string",
                              "enum": [
                                "ADMIN",
                                "AGENT",
                                "CUSTOMER",
                                "FINANCIAL_REP"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "username",
                            "password",
                            "role"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/guardianOnline/GroupByFeature": {
      "get": {
        "operationId": "GuardianOnlineGroupByFeature",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "by.0",
            "description": "Type: string,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "guardianOnline_groupByFeature": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "featureType": {
                                "type": "string",
                                "enum": [
                                  "DASHBOARD",
                                  "ACCOUNT_SUMMARY",
                                  "NOTIFICATIONS",
                                  "DOCUMENTS"
                                ]
                              },
                              "content": {},
                              "userId": {
                                "type": "string"
                              },
                              "_count": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer"
                                  },
                                  "featureType": {
                                    "type": "integer"
                                  },
                                  "content": {
                                    "type": "integer"
                                  },
                                  "userId": {
                                    "type": "integer"
                                  },
                                  "_all": {
                                    "type": "integer"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "featureType",
                                  "content",
                                  "userId",
                                  "_all"
                                ]
                              },
                              "_min": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "featureType": {
                                    "type": "string",
                                    "enum": [
                                      "DASHBOARD",
                                      "ACCOUNT_SUMMARY",
                                      "NOTIFICATIONS",
                                      "DOCUMENTS"
                                    ]
                                  },
                                  "userId": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "_max": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "featureType": {
                                    "type": "string",
                                    "enum": [
                                      "DASHBOARD",
                                      "ACCOUNT_SUMMARY",
                                      "NOTIFICATIONS",
                                      "DOCUMENTS"
                                    ]
                                  },
                                  "userId": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "id",
                              "featureType",
                              "content",
                              "userId"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "guardianOnline_groupByFeature"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/guardianOnline/GroupByUser": {
      "get": {
        "operationId": "GuardianOnlineGroupByUser",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "by.0",
            "description": "Type: string,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "guardianOnline_groupByUser": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "username": {
                                "type": "string"
                              },
                              "password": {
                                "type": "string"
                              },
                              "role": {
                                "type": "string",
                                "enum": [
                                  "ADMIN",
                                  "AGENT",
                                  "CUSTOMER",
                                  "FINANCIAL_REP"
                                ]
                              },
                              "_count": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer"
                                  },
                                  "username": {
                                    "type": "integer"
                                  },
                                  "password": {
                                    "type": "integer"
                                  },
                                  "role": {
                                    "type": "integer"
                                  },
                                  "_all": {
                                    "type": "integer"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "username",
                                  "password",
                                  "role",
                                  "_all"
                                ]
                              },
                              "_min": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "username": {
                                    "type": "string"
                                  },
                                  "password": {
                                    "type": "string"
                                  },
                                  "role": {
                                    "type": "string",
                                    "enum": [
                                      "ADMIN",
                                      "AGENT",
                                      "CUSTOMER",
                                      "FINANCIAL_REP"
                                    ]
                                  }
                                },
                                "additionalProperties": false
                              },
                              "_max": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "username": {
                                    "type": "string"
                                  },
                                  "password": {
                                    "type": "string"
                                  },
                                  "role": {
                                    "type": "string",
                                    "enum": [
                                      "ADMIN",
                                      "AGENT",
                                      "CUSTOMER",
                                      "FINANCIAL_REP"
                                    ]
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "id",
                              "username",
                              "password",
                              "role"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "guardianOnline_groupByUser"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/guardianOnline/GroupByUserLog": {
      "get": {
        "operationId": "GuardianOnlineGroupByUserLog",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "by.0",
            "description": "Type: string,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "guardianOnline_groupByUserLog": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "logType": {
                                "type": "string",
                                "enum": [
                                  "LOGIN",
                                  "LOGOUT",
                                  "FEATURE_ACCESS",
                                  "DOCUMENT_DOWNLOAD"
                                ]
                              },
                              "contentType": {
                                "type": "string",
                                "enum": [
                                  "CALL",
                                  "CHAT",
                                  "EMAIL",
                                  "WEB_USAGE",
                                  "IVR_HUGO_USAGE",
                                  "OUTBOUND_CORRESPONDENCE",
                                  "MARKETING_MATERIAL",
                                  "TEXT"
                                ]
                              },
                              "timestamp": {
                                "type": "string"
                              },
                              "details": {},
                              "userId": {
                                "type": "string"
                              },
                              "_count": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer"
                                  },
                                  "logType": {
                                    "type": "integer"
                                  },
                                  "contentType": {
                                    "type": "integer"
                                  },
                                  "timestamp": {
                                    "type": "integer"
                                  },
                                  "details": {
                                    "type": "integer"
                                  },
                                  "userId": {
                                    "type": "integer"
                                  },
                                  "_all": {
                                    "type": "integer"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "logType",
                                  "contentType",
                                  "timestamp",
                                  "details",
                                  "userId",
                                  "_all"
                                ]
                              },
                              "_min": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "logType": {
                                    "type": "string",
                                    "enum": [
                                      "LOGIN",
                                      "LOGOUT",
                                      "FEATURE_ACCESS",
                                      "DOCUMENT_DOWNLOAD"
                                    ]
                                  },
                                  "contentType": {
                                    "type": "string",
                                    "enum": [
                                      "CALL",
                                      "CHAT",
                                      "EMAIL",
                                      "WEB_USAGE",
                                      "IVR_HUGO_USAGE",
                                      "OUTBOUND_CORRESPONDENCE",
                                      "MARKETING_MATERIAL",
                                      "TEXT"
                                    ]
                                  },
                                  "timestamp": {
                                    "type": "string"
                                  },
                                  "userId": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "_max": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "logType": {
                                    "type": "string",
                                    "enum": [
                                      "LOGIN",
                                      "LOGOUT",
                                      "FEATURE_ACCESS",
                                      "DOCUMENT_DOWNLOAD"
                                    ]
                                  },
                                  "contentType": {
                                    "type": "string",
                                    "enum": [
                                      "CALL",
                                      "CHAT",
                                      "EMAIL",
                                      "WEB_USAGE",
                                      "IVR_HUGO_USAGE",
                                      "OUTBOUND_CORRESPONDENCE",
                                      "MARKETING_MATERIAL",
                                      "TEXT"
                                    ]
                                  },
                                  "timestamp": {
                                    "type": "string"
                                  },
                                  "userId": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "id",
                              "logType",
                              "contentType",
                              "timestamp",
                              "details",
                              "userId"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "guardianOnline_groupByUserLog"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/guardianOnline/QueryRaw": {
      "get": {
        "operationId": "GuardianOnlineQueryRaw",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "query",
            "description": "Type: string",
            "in": "query",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parameters",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "guardianOnline_queryRaw": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "ID": {
                                "type": "string"
                              },
                              "Int": {
                                "type": "integer"
                              },
                              "Float": {
                                "type": "number"
                              },
                              "String": {
                                "type": "string"
                              },
                              "Boolean": {
                                "type": "boolean"
                              },
                              "DateTime": {
                                "type": "string"
                              },
                              "JSON": {},
                              "Object": {
                                "type": "object",
                                "properties": {
                                  "ID": {
                                    "type": "string"
                                  },
                                  "Int": {
                                    "type": "integer"
                                  },
                                  "Float": {
                                    "type": "number"
                                  },
                                  "String": {
                                    "type": "string"
                                  },
                                  "Boolean": {
                                    "type": "boolean"
                                  },
                                  "DateTime": {
                                    "type": "string"
                                  },
                                  "JSON": {},
                                  "OptionalID": {
                                    "type": "string"
                                  },
                                  "OptionalInt": {
                                    "type": "integer"
                                  },
                                  "OptionalFloat": {
                                    "type": "number"
                                  },
                                  "OptionalString": {
                                    "type": "string"
                                  },
                                  "OptionalBoolean": {
                                    "type": "boolean"
                                  },
                                  "OptionalDateTime": {
                                    "type": "string"
                                  },
                                  "OptionalJSON": {}
                                },
                                "additionalProperties": false,
                                "required": [
                                  "ID",
                                  "Int",
                                  "Float",
                                  "String",
                                  "Boolean",
                                  "DateTime",
                                  "JSON"
                                ]
                              },
                              "Array": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "ID": {
                                      "type": "string"
                                    },
                                    "Int": {
                                      "type": "integer"
                                    },
                                    "Float": {
                                      "type": "number"
                                    },
                                    "String": {
                                      "type": "string"
                                    },
                                    "Boolean": {
                                      "type": "boolean"
                                    },
                                    "DateTime": {
                                      "type": "string"
                                    },
                                    "JSON": {},
                                    "OptionalID": {
                                      "type": "string"
                                    },
                                    "OptionalInt": {
                                      "type": "integer"
                                    },
                                    "OptionalFloat": {
                                      "type": "number"
                                    },
                                    "OptionalString": {
                                      "type": "string"
                                    },
                                    "OptionalBoolean": {
                                      "type": "boolean"
                                    },
                                    "OptionalDateTime": {
                                      "type": "string"
                                    },
                                    "OptionalJSON": {}
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "ID",
                                    "Int",
                                    "Float",
                                    "String",
                                    "Boolean",
                                    "DateTime",
                                    "JSON"
                                  ]
                                }
                              },
                              "OptionalID": {
                                "type": "string"
                              },
                              "OptionalInt": {
                                "type": "integer"
                              },
                              "OptionalFloat": {
                                "type": "number"
                              },
                              "OptionalString": {
                                "type": "string"
                              },
                              "OptionalBoolean": {
                                "type": "boolean"
                              },
                              "OptionalDateTime": {
                                "type": "string"
                              },
                              "OptionalJSON": {},
                              "OptionalObject": {
                                "type": "object",
                                "properties": {
                                  "ID": {
                                    "type": "string"
                                  },
                                  "Int": {
                                    "type": "integer"
                                  },
                                  "Float": {
                                    "type": "number"
                                  },
                                  "String": {
                                    "type": "string"
                                  },
                                  "Boolean": {
                                    "type": "boolean"
                                  },
                                  "DateTime": {
                                    "type": "string"
                                  },
                                  "JSON": {},
                                  "OptionalID": {
                                    "type": "string"
                                  },
                                  "OptionalInt": {
                                    "type": "integer"
                                  },
                                  "OptionalFloat": {
                                    "type": "number"
                                  },
                                  "OptionalString": {
                                    "type": "string"
                                  },
                                  "OptionalBoolean": {
                                    "type": "boolean"
                                  },
                                  "OptionalDateTime": {
                                    "type": "string"
                                  },
                                  "OptionalJSON": {}
                                },
                                "additionalProperties": false,
                                "required": [
                                  "ID",
                                  "Int",
                                  "Float",
                                  "String",
                                  "Boolean",
                                  "DateTime",
                                  "JSON"
                                ]
                              },
                              "OptionalArray": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "ID": {
                                      "type": "string"
                                    },
                                    "Int": {
                                      "type": "integer"
                                    },
                                    "Float": {
                                      "type": "number"
                                    },
                                    "String": {
                                      "type": "string"
                                    },
                                    "Boolean": {
                                      "type": "boolean"
                                    },
                                    "DateTime": {
                                      "type": "string"
                                    },
                                    "JSON": {},
                                    "OptionalID": {
                                      "type": "string"
                                    },
                                    "OptionalInt": {
                                      "type": "integer"
                                    },
                                    "OptionalFloat": {
                                      "type": "number"
                                    },
                                    "OptionalString": {
                                      "type": "string"
                                    },
                                    "OptionalBoolean": {
                                      "type": "boolean"
                                    },
                                    "OptionalDateTime": {
                                      "type": "string"
                                    },
                                    "OptionalJSON": {}
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "ID",
                                    "Int",
                                    "Float",
                                    "String",
                                    "Boolean",
                                    "DateTime",
                                    "JSON"
                                  ]
                                }
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "ID",
                              "Int",
                              "Float",
                              "String",
                              "Boolean",
                              "DateTime",
                              "JSON",
                              "Object",
                              "Array",
                              "OptionalArray"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "guardianOnline_queryRaw"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/guardianOnline/QueryRawJSON": {
      "get": {
        "operationId": "GuardianOnlineQueryRawJSON",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "query",
            "description": "Type: string",
            "in": "query",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parameters",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "guardianOnline_queryRawJSON": {}
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/guardianOnline/UpdateManyFeature": {
      "post": {
        "operationId": "GuardianOnlineUpdateManyFeature",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/guardianOnline_FeatureUpdateManyMutationInput"
                  },
                  "where": {
                    "$ref": "#/components/schemas/guardianOnline_FeatureWhereInput_2"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "guardianOnline_updateManyFeature": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/guardianOnline/UpdateManyUser": {
      "post": {
        "operationId": "GuardianOnlineUpdateManyUser",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/guardianOnline_UserUpdateManyMutationInput"
                  },
                  "where": {
                    "$ref": "#/components/schemas/guardianOnline_UserWhereInput_2"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "guardianOnline_updateManyUser": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/guardianOnline/UpdateManyUserLog": {
      "post": {
        "operationId": "GuardianOnlineUpdateManyUserLog",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/guardianOnline_UserLogUpdateManyMutationInput"
                  },
                  "where": {
                    "$ref": "#/components/schemas/guardianOnline_UserLogWhereInput_2"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "guardianOnline_updateManyUserLog": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/guardianOnline/UpdateOneFeature": {
      "post": {
        "operationId": "GuardianOnlineUpdateOneFeature",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/guardianOnline_FeatureUpdateInput"
                  },
                  "where": {
                    "$ref": "#/components/schemas/guardianOnline_FeatureWhereUniqueInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data",
                  "where"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "guardianOnline_updateOneFeature": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "featureType": {
                              "type": "string",
                              "enum": [
                                "DASHBOARD",
                                "ACCOUNT_SUMMARY",
                                "NOTIFICATIONS",
                                "DOCUMENTS"
                              ]
                            },
                            "content": {},
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "featureType",
                            "content",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/guardianOnline/UpdateOneUser": {
      "post": {
        "operationId": "GuardianOnlineUpdateOneUser",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/guardianOnline_UserUpdateInput"
                  },
                  "where": {
                    "$ref": "#/components/schemas/guardianOnline_UserWhereUniqueInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data",
                  "where"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "guardianOnline_updateOneUser": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "password": {
                              "type": "string"
                            },
                            "role": {
                              "type": "string",
                              "enum": [
                                "ADMIN",
                                "AGENT",
                                "CUSTOMER",
                                "FINANCIAL_REP"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "username",
                            "password",
                            "role"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/guardianOnline/UpdateOneUserLog": {
      "post": {
        "operationId": "GuardianOnlineUpdateOneUserLog",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/guardianOnline_UserLogUpdateInput"
                  },
                  "where": {
                    "$ref": "#/components/schemas/guardianOnline_UserLogWhereUniqueInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data",
                  "where"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "guardianOnline_updateOneUserLog": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "logType": {
                              "type": "string",
                              "enum": [
                                "LOGIN",
                                "LOGOUT",
                                "FEATURE_ACCESS",
                                "DOCUMENT_DOWNLOAD"
                              ]
                            },
                            "contentType": {
                              "type": "string",
                              "enum": [
                                "CALL",
                                "CHAT",
                                "EMAIL",
                                "WEB_USAGE",
                                "IVR_HUGO_USAGE",
                                "OUTBOUND_CORRESPONDENCE",
                                "MARKETING_MATERIAL",
                                "TEXT"
                              ]
                            },
                            "timestamp": {
                              "type": "string"
                            },
                            "details": {},
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "logType",
                            "contentType",
                            "timestamp",
                            "details",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/guardianOnline/UpsertOneFeature": {
      "post": {
        "operationId": "GuardianOnlineUpsertOneFeature",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/guardianOnline_FeatureWhereUniqueInput"
                  },
                  "create": {
                    "$ref": "#/components/schemas/guardianOnline_FeatureCreateInput"
                  },
                  "update": {
                    "$ref": "#/components/schemas/guardianOnline_FeatureUpdateInput_2"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "where",
                  "create",
                  "update"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "guardianOnline_upsertOneFeature": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "featureType": {
                              "type": "string",
                              "enum": [
                                "DASHBOARD",
                                "ACCOUNT_SUMMARY",
                                "NOTIFICATIONS",
                                "DOCUMENTS"
                              ]
                            },
                            "content": {},
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "featureType",
                            "content",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/guardianOnline/UpsertOneUser": {
      "post": {
        "operationId": "GuardianOnlineUpsertOneUser",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/guardianOnline_UserWhereUniqueInput"
                  },
                  "create": {
                    "$ref": "#/components/schemas/guardianOnline_UserCreateInput"
                  },
                  "update": {
                    "$ref": "#/components/schemas/guardianOnline_UserUpdateInput_2"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "where",
                  "create",
                  "update"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "guardianOnline_upsertOneUser": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "password": {
                              "type": "string"
                            },
                            "role": {
                              "type": "string",
                              "enum": [
                                "ADMIN",
                                "AGENT",
                                "CUSTOMER",
                                "FINANCIAL_REP"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "username",
                            "password",
                            "role"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/guardianOnline/UpsertOneUserLog": {
      "post": {
        "operationId": "GuardianOnlineUpsertOneUserLog",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/guardianOnline_UserLogWhereUniqueInput"
                  },
                  "create": {
                    "$ref": "#/components/schemas/guardianOnline_UserLogCreateInput"
                  },
                  "update": {
                    "$ref": "#/components/schemas/guardianOnline_UserLogUpdateInput_2"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "where",
                  "create",
                  "update"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "guardianOnline_upsertOneUserLog": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "logType": {
                              "type": "string",
                              "enum": [
                                "LOGIN",
                                "LOGOUT",
                                "FEATURE_ACCESS",
                                "DOCUMENT_DOWNLOAD"
                              ]
                            },
                            "contentType": {
                              "type": "string",
                              "enum": [
                                "CALL",
                                "CHAT",
                                "EMAIL",
                                "WEB_USAGE",
                                "IVR_HUGO_USAGE",
                                "OUTBOUND_CORRESPONDENCE",
                                "MARKETING_MATERIAL",
                                "TEXT"
                              ]
                            },
                            "timestamp": {
                              "type": "string"
                            },
                            "details": {},
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "logType",
                            "contentType",
                            "timestamp",
                            "details",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/AggregateAsset": {
      "get": {
        "operationId": "LivingBalanceSheetAggregateAsset",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_aggregateAsset": {
                          "type": "object",
                          "properties": {
                            "_count": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer"
                                },
                                "assetType": {
                                  "type": "integer"
                                },
                                "value": {
                                  "type": "integer"
                                },
                                "userId": {
                                  "type": "integer"
                                },
                                "_all": {
                                  "type": "integer"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "assetType",
                                "value",
                                "userId",
                                "_all"
                              ]
                            },
                            "_avg": {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "number"
                                }
                              },
                              "additionalProperties": false
                            },
                            "_sum": {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "number"
                                }
                              },
                              "additionalProperties": false
                            },
                            "_min": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "assetType": {
                                  "type": "string",
                                  "enum": [
                                    "REAL_ESTATE",
                                    "STOCKS",
                                    "BONDS",
                                    "CASH"
                                  ]
                                },
                                "value": {
                                  "type": "number"
                                },
                                "userId": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "_max": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "assetType": {
                                  "type": "string",
                                  "enum": [
                                    "REAL_ESTATE",
                                    "STOCKS",
                                    "BONDS",
                                    "CASH"
                                  ]
                                },
                                "value": {
                                  "type": "number"
                                },
                                "userId": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "livingBalanceSheet_aggregateAsset"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/AggregateFinancialGoal": {
      "get": {
        "operationId": "LivingBalanceSheetAggregateFinancialGoal",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_aggregateFinancialGoal": {
                          "type": "object",
                          "properties": {
                            "_count": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer"
                                },
                                "goalType": {
                                  "type": "integer"
                                },
                                "target": {
                                  "type": "integer"
                                },
                                "deadline": {
                                  "type": "integer"
                                },
                                "userId": {
                                  "type": "integer"
                                },
                                "_all": {
                                  "type": "integer"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "goalType",
                                "target",
                                "deadline",
                                "userId",
                                "_all"
                              ]
                            },
                            "_avg": {
                              "type": "object",
                              "properties": {
                                "target": {
                                  "type": "number"
                                }
                              },
                              "additionalProperties": false
                            },
                            "_sum": {
                              "type": "object",
                              "properties": {
                                "target": {
                                  "type": "number"
                                }
                              },
                              "additionalProperties": false
                            },
                            "_min": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "goalType": {
                                  "type": "string",
                                  "enum": [
                                    "RETIREMENT",
                                    "EDUCATION",
                                    "VACATION",
                                    "EMERGENCY_FUND"
                                  ]
                                },
                                "target": {
                                  "type": "number"
                                },
                                "deadline": {
                                  "type": "string"
                                },
                                "userId": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "_max": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "goalType": {
                                  "type": "string",
                                  "enum": [
                                    "RETIREMENT",
                                    "EDUCATION",
                                    "VACATION",
                                    "EMERGENCY_FUND"
                                  ]
                                },
                                "target": {
                                  "type": "number"
                                },
                                "deadline": {
                                  "type": "string"
                                },
                                "userId": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "livingBalanceSheet_aggregateFinancialGoal"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/AggregateLiability": {
      "get": {
        "operationId": "LivingBalanceSheetAggregateLiability",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_aggregateLiability": {
                          "type": "object",
                          "properties": {
                            "_count": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer"
                                },
                                "liabilityType": {
                                  "type": "integer"
                                },
                                "amount": {
                                  "type": "integer"
                                },
                                "userId": {
                                  "type": "integer"
                                },
                                "_all": {
                                  "type": "integer"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "liabilityType",
                                "amount",
                                "userId",
                                "_all"
                              ]
                            },
                            "_avg": {
                              "type": "object",
                              "properties": {
                                "amount": {
                                  "type": "number"
                                }
                              },
                              "additionalProperties": false
                            },
                            "_sum": {
                              "type": "object",
                              "properties": {
                                "amount": {
                                  "type": "number"
                                }
                              },
                              "additionalProperties": false
                            },
                            "_min": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "liabilityType": {
                                  "type": "string",
                                  "enum": [
                                    "MORTGAGE",
                                    "LOAN",
                                    "CREDIT_CARD_DEBT"
                                  ]
                                },
                                "amount": {
                                  "type": "number"
                                },
                                "userId": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "_max": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "liabilityType": {
                                  "type": "string",
                                  "enum": [
                                    "MORTGAGE",
                                    "LOAN",
                                    "CREDIT_CARD_DEBT"
                                  ]
                                },
                                "amount": {
                                  "type": "number"
                                },
                                "userId": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "livingBalanceSheet_aggregateLiability"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/AggregateUser": {
      "get": {
        "operationId": "LivingBalanceSheetAggregateUser",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_aggregateUser": {
                          "type": "object",
                          "properties": {
                            "_count": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer"
                                },
                                "username": {
                                  "type": "integer"
                                },
                                "password": {
                                  "type": "integer"
                                },
                                "role": {
                                  "type": "integer"
                                },
                                "_all": {
                                  "type": "integer"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "username",
                                "password",
                                "role",
                                "_all"
                              ]
                            },
                            "_min": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "username": {
                                  "type": "string"
                                },
                                "password": {
                                  "type": "string"
                                },
                                "role": {
                                  "type": "string",
                                  "enum": [
                                    "ADMIN",
                                    "FINANCIAL_ADVISOR",
                                    "CLIENT"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            },
                            "_max": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "username": {
                                  "type": "string"
                                },
                                "password": {
                                  "type": "string"
                                },
                                "role": {
                                  "type": "string",
                                  "enum": [
                                    "ADMIN",
                                    "FINANCIAL_ADVISOR",
                                    "CLIENT"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "livingBalanceSheet_aggregateUser"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/CreateManyAsset": {
      "post": {
        "operationId": "LivingBalanceSheetCreateManyAsset",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/livingBalanceSheet_AssetCreateManyInput"
                    }
                  },
                  "skipDuplicates": {
                    "type": [
                      "boolean",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_createManyAsset": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/CreateManyFinancialGoal": {
      "post": {
        "operationId": "LivingBalanceSheetCreateManyFinancialGoal",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/livingBalanceSheet_FinancialGoalCreateManyInput"
                    }
                  },
                  "skipDuplicates": {
                    "type": [
                      "boolean",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_createManyFinancialGoal": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/CreateManyLiability": {
      "post": {
        "operationId": "LivingBalanceSheetCreateManyLiability",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/livingBalanceSheet_LiabilityCreateManyInput"
                    }
                  },
                  "skipDuplicates": {
                    "type": [
                      "boolean",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_createManyLiability": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/CreateManyUser": {
      "post": {
        "operationId": "LivingBalanceSheetCreateManyUser",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/livingBalanceSheet_UserCreateManyInput"
                    }
                  },
                  "skipDuplicates": {
                    "type": [
                      "boolean",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_createManyUser": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/CreateOneAsset": {
      "post": {
        "operationId": "LivingBalanceSheetCreateOneAsset",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/livingBalanceSheet_AssetCreateInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_createOneAsset": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "assetType": {
                              "type": "string",
                              "enum": [
                                "REAL_ESTATE",
                                "STOCKS",
                                "BONDS",
                                "CASH"
                              ]
                            },
                            "value": {
                              "type": "number"
                            },
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "assetType",
                            "value",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/CreateOneFinancialGoal": {
      "post": {
        "operationId": "LivingBalanceSheetCreateOneFinancialGoal",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/livingBalanceSheet_FinancialGoalCreateInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_createOneFinancialGoal": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "goalType": {
                              "type": "string",
                              "enum": [
                                "RETIREMENT",
                                "EDUCATION",
                                "VACATION",
                                "EMERGENCY_FUND"
                              ]
                            },
                            "target": {
                              "type": "number"
                            },
                            "deadline": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "goalType",
                            "target",
                            "deadline",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/CreateOneLiability": {
      "post": {
        "operationId": "LivingBalanceSheetCreateOneLiability",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/livingBalanceSheet_LiabilityCreateInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_createOneLiability": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "liabilityType": {
                              "type": "string",
                              "enum": [
                                "MORTGAGE",
                                "LOAN",
                                "CREDIT_CARD_DEBT"
                              ]
                            },
                            "amount": {
                              "type": "number"
                            },
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "liabilityType",
                            "amount",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/CreateOneUser": {
      "post": {
        "operationId": "LivingBalanceSheetCreateOneUser",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/livingBalanceSheet_UserCreateInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_createOneUser": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "password": {
                              "type": "string"
                            },
                            "role": {
                              "type": "string",
                              "enum": [
                                "ADMIN",
                                "FINANCIAL_ADVISOR",
                                "CLIENT"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "username",
                            "password",
                            "role"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/DeleteManyAsset": {
      "post": {
        "operationId": "LivingBalanceSheetDeleteManyAsset",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/livingBalanceSheet_AssetWhereInput"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_deleteManyAsset": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/DeleteManyFinancialGoal": {
      "post": {
        "operationId": "LivingBalanceSheetDeleteManyFinancialGoal",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/livingBalanceSheet_FinancialGoalWhereInput"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_deleteManyFinancialGoal": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/DeleteManyLiability": {
      "post": {
        "operationId": "LivingBalanceSheetDeleteManyLiability",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/livingBalanceSheet_LiabilityWhereInput"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_deleteManyLiability": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/DeleteManyUser": {
      "post": {
        "operationId": "LivingBalanceSheetDeleteManyUser",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/livingBalanceSheet_UserWhereInput"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_deleteManyUser": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/DeleteOneAsset": {
      "post": {
        "operationId": "LivingBalanceSheetDeleteOneAsset",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/livingBalanceSheet_AssetWhereUniqueInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "where"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_deleteOneAsset": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "assetType": {
                              "type": "string",
                              "enum": [
                                "REAL_ESTATE",
                                "STOCKS",
                                "BONDS",
                                "CASH"
                              ]
                            },
                            "value": {
                              "type": "number"
                            },
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "assetType",
                            "value",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/DeleteOneFinancialGoal": {
      "post": {
        "operationId": "LivingBalanceSheetDeleteOneFinancialGoal",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/livingBalanceSheet_FinancialGoalWhereUniqueInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "where"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_deleteOneFinancialGoal": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "goalType": {
                              "type": "string",
                              "enum": [
                                "RETIREMENT",
                                "EDUCATION",
                                "VACATION",
                                "EMERGENCY_FUND"
                              ]
                            },
                            "target": {
                              "type": "number"
                            },
                            "deadline": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "goalType",
                            "target",
                            "deadline",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/DeleteOneLiability": {
      "post": {
        "operationId": "LivingBalanceSheetDeleteOneLiability",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/livingBalanceSheet_LiabilityWhereUniqueInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "where"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_deleteOneLiability": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "liabilityType": {
                              "type": "string",
                              "enum": [
                                "MORTGAGE",
                                "LOAN",
                                "CREDIT_CARD_DEBT"
                              ]
                            },
                            "amount": {
                              "type": "number"
                            },
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "liabilityType",
                            "amount",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/DeleteOneUser": {
      "post": {
        "operationId": "LivingBalanceSheetDeleteOneUser",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/livingBalanceSheet_UserWhereUniqueInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "where"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_deleteOneUser": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "password": {
                              "type": "string"
                            },
                            "role": {
                              "type": "string",
                              "enum": [
                                "ADMIN",
                                "FINANCIAL_ADVISOR",
                                "CLIENT"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "username",
                            "password",
                            "role"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/ExecuteRaw": {
      "post": {
        "operationId": "LivingBalanceSheetExecuteRaw",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "query": {
                    "type": "string"
                  },
                  "parameters": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                },
                "additionalProperties": false,
                "required": [
                  "query"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_executeRaw": {
                          "type": "integer"
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "livingBalanceSheet_executeRaw"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/FindFirstAsset": {
      "get": {
        "operationId": "LivingBalanceSheetFindFirstAsset",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_findFirstAsset": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "assetType": {
                              "type": "string",
                              "enum": [
                                "REAL_ESTATE",
                                "STOCKS",
                                "BONDS",
                                "CASH"
                              ]
                            },
                            "value": {
                              "type": "number"
                            },
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "assetType",
                            "value",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/FindFirstAssetOrThrow": {
      "get": {
        "operationId": "LivingBalanceSheetFindFirstAssetOrThrow",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_findFirstAssetOrThrow": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "assetType": {
                              "type": "string",
                              "enum": [
                                "REAL_ESTATE",
                                "STOCKS",
                                "BONDS",
                                "CASH"
                              ]
                            },
                            "value": {
                              "type": "number"
                            },
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "assetType",
                            "value",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/FindFirstFinancialGoal": {
      "get": {
        "operationId": "LivingBalanceSheetFindFirstFinancialGoal",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_findFirstFinancialGoal": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "goalType": {
                              "type": "string",
                              "enum": [
                                "RETIREMENT",
                                "EDUCATION",
                                "VACATION",
                                "EMERGENCY_FUND"
                              ]
                            },
                            "target": {
                              "type": "number"
                            },
                            "deadline": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "goalType",
                            "target",
                            "deadline",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/FindFirstFinancialGoalOrThrow": {
      "get": {
        "operationId": "LivingBalanceSheetFindFirstFinancialGoalOrThrow",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_findFirstFinancialGoalOrThrow": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "goalType": {
                              "type": "string",
                              "enum": [
                                "RETIREMENT",
                                "EDUCATION",
                                "VACATION",
                                "EMERGENCY_FUND"
                              ]
                            },
                            "target": {
                              "type": "number"
                            },
                            "deadline": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "goalType",
                            "target",
                            "deadline",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/FindFirstLiability": {
      "get": {
        "operationId": "LivingBalanceSheetFindFirstLiability",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_findFirstLiability": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "liabilityType": {
                              "type": "string",
                              "enum": [
                                "MORTGAGE",
                                "LOAN",
                                "CREDIT_CARD_DEBT"
                              ]
                            },
                            "amount": {
                              "type": "number"
                            },
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "liabilityType",
                            "amount",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/FindFirstLiabilityOrThrow": {
      "get": {
        "operationId": "LivingBalanceSheetFindFirstLiabilityOrThrow",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_findFirstLiabilityOrThrow": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "liabilityType": {
                              "type": "string",
                              "enum": [
                                "MORTGAGE",
                                "LOAN",
                                "CREDIT_CARD_DEBT"
                              ]
                            },
                            "amount": {
                              "type": "number"
                            },
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "liabilityType",
                            "amount",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/FindFirstUser": {
      "get": {
        "operationId": "LivingBalanceSheetFindFirstUser",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_findFirstUser": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "password": {
                              "type": "string"
                            },
                            "role": {
                              "type": "string",
                              "enum": [
                                "ADMIN",
                                "FINANCIAL_ADVISOR",
                                "CLIENT"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "username",
                            "password",
                            "role"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/FindFirstUserOrThrow": {
      "get": {
        "operationId": "LivingBalanceSheetFindFirstUserOrThrow",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_findFirstUserOrThrow": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "password": {
                              "type": "string"
                            },
                            "role": {
                              "type": "string",
                              "enum": [
                                "ADMIN",
                                "FINANCIAL_ADVISOR",
                                "CLIENT"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "username",
                            "password",
                            "role"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/FindManyAsset": {
      "get": {
        "operationId": "LivingBalanceSheetFindManyAsset",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_findManyAsset": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "assetType": {
                                "type": "string",
                                "enum": [
                                  "REAL_ESTATE",
                                  "STOCKS",
                                  "BONDS",
                                  "CASH"
                                ]
                              },
                              "value": {
                                "type": "number"
                              },
                              "userId": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "id",
                              "assetType",
                              "value",
                              "userId"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "livingBalanceSheet_findManyAsset"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/FindManyFinancialGoal": {
      "get": {
        "operationId": "LivingBalanceSheetFindManyFinancialGoal",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_findManyFinancialGoal": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "goalType": {
                                "type": "string",
                                "enum": [
                                  "RETIREMENT",
                                  "EDUCATION",
                                  "VACATION",
                                  "EMERGENCY_FUND"
                                ]
                              },
                              "target": {
                                "type": "number"
                              },
                              "deadline": {
                                "type": "string"
                              },
                              "userId": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "id",
                              "goalType",
                              "target",
                              "deadline",
                              "userId"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "livingBalanceSheet_findManyFinancialGoal"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/FindManyLiability": {
      "get": {
        "operationId": "LivingBalanceSheetFindManyLiability",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_findManyLiability": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "liabilityType": {
                                "type": "string",
                                "enum": [
                                  "MORTGAGE",
                                  "LOAN",
                                  "CREDIT_CARD_DEBT"
                                ]
                              },
                              "amount": {
                                "type": "number"
                              },
                              "userId": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "id",
                              "liabilityType",
                              "amount",
                              "userId"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "livingBalanceSheet_findManyLiability"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/FindManyUser": {
      "get": {
        "operationId": "LivingBalanceSheetFindManyUser",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_findManyUser": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "username": {
                                "type": "string"
                              },
                              "password": {
                                "type": "string"
                              },
                              "role": {
                                "type": "string",
                                "enum": [
                                  "ADMIN",
                                  "FINANCIAL_ADVISOR",
                                  "CLIENT"
                                ]
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "id",
                              "username",
                              "password",
                              "role"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "livingBalanceSheet_findManyUser"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/FindUniqueAsset": {
      "get": {
        "operationId": "LivingBalanceSheetFindUniqueAsset",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_findUniqueAsset": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "assetType": {
                              "type": "string",
                              "enum": [
                                "REAL_ESTATE",
                                "STOCKS",
                                "BONDS",
                                "CASH"
                              ]
                            },
                            "value": {
                              "type": "number"
                            },
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "assetType",
                            "value",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/FindUniqueAssetOrThrow": {
      "get": {
        "operationId": "LivingBalanceSheetFindUniqueAssetOrThrow",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_findUniqueAssetOrThrow": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "assetType": {
                              "type": "string",
                              "enum": [
                                "REAL_ESTATE",
                                "STOCKS",
                                "BONDS",
                                "CASH"
                              ]
                            },
                            "value": {
                              "type": "number"
                            },
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "assetType",
                            "value",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/FindUniqueFinancialGoal": {
      "get": {
        "operationId": "LivingBalanceSheetFindUniqueFinancialGoal",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_findUniqueFinancialGoal": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "goalType": {
                              "type": "string",
                              "enum": [
                                "RETIREMENT",
                                "EDUCATION",
                                "VACATION",
                                "EMERGENCY_FUND"
                              ]
                            },
                            "target": {
                              "type": "number"
                            },
                            "deadline": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "goalType",
                            "target",
                            "deadline",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/FindUniqueFinancialGoalOrThrow": {
      "get": {
        "operationId": "LivingBalanceSheetFindUniqueFinancialGoalOrThrow",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_findUniqueFinancialGoalOrThrow": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "goalType": {
                              "type": "string",
                              "enum": [
                                "RETIREMENT",
                                "EDUCATION",
                                "VACATION",
                                "EMERGENCY_FUND"
                              ]
                            },
                            "target": {
                              "type": "number"
                            },
                            "deadline": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "goalType",
                            "target",
                            "deadline",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/FindUniqueLiability": {
      "get": {
        "operationId": "LivingBalanceSheetFindUniqueLiability",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_findUniqueLiability": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "liabilityType": {
                              "type": "string",
                              "enum": [
                                "MORTGAGE",
                                "LOAN",
                                "CREDIT_CARD_DEBT"
                              ]
                            },
                            "amount": {
                              "type": "number"
                            },
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "liabilityType",
                            "amount",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/FindUniqueLiabilityOrThrow": {
      "get": {
        "operationId": "LivingBalanceSheetFindUniqueLiabilityOrThrow",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_findUniqueLiabilityOrThrow": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "liabilityType": {
                              "type": "string",
                              "enum": [
                                "MORTGAGE",
                                "LOAN",
                                "CREDIT_CARD_DEBT"
                              ]
                            },
                            "amount": {
                              "type": "number"
                            },
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "liabilityType",
                            "amount",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/FindUniqueUser": {
      "get": {
        "operationId": "LivingBalanceSheetFindUniqueUser",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_findUniqueUser": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "password": {
                              "type": "string"
                            },
                            "role": {
                              "type": "string",
                              "enum": [
                                "ADMIN",
                                "FINANCIAL_ADVISOR",
                                "CLIENT"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "username",
                            "password",
                            "role"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/FindUniqueUserOrThrow": {
      "get": {
        "operationId": "LivingBalanceSheetFindUniqueUserOrThrow",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_findUniqueUserOrThrow": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "password": {
                              "type": "string"
                            },
                            "role": {
                              "type": "string",
                              "enum": [
                                "ADMIN",
                                "FINANCIAL_ADVISOR",
                                "CLIENT"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "username",
                            "password",
                            "role"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/GroupByAsset": {
      "get": {
        "operationId": "LivingBalanceSheetGroupByAsset",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "by.0",
            "description": "Type: string,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_groupByAsset": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "assetType": {
                                "type": "string",
                                "enum": [
                                  "REAL_ESTATE",
                                  "STOCKS",
                                  "BONDS",
                                  "CASH"
                                ]
                              },
                              "value": {
                                "type": "number"
                              },
                              "userId": {
                                "type": "string"
                              },
                              "_count": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer"
                                  },
                                  "assetType": {
                                    "type": "integer"
                                  },
                                  "value": {
                                    "type": "integer"
                                  },
                                  "userId": {
                                    "type": "integer"
                                  },
                                  "_all": {
                                    "type": "integer"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "assetType",
                                  "value",
                                  "userId",
                                  "_all"
                                ]
                              },
                              "_avg": {
                                "type": "object",
                                "properties": {
                                  "value": {
                                    "type": "number"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "_sum": {
                                "type": "object",
                                "properties": {
                                  "value": {
                                    "type": "number"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "_min": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "assetType": {
                                    "type": "string",
                                    "enum": [
                                      "REAL_ESTATE",
                                      "STOCKS",
                                      "BONDS",
                                      "CASH"
                                    ]
                                  },
                                  "value": {
                                    "type": "number"
                                  },
                                  "userId": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "_max": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "assetType": {
                                    "type": "string",
                                    "enum": [
                                      "REAL_ESTATE",
                                      "STOCKS",
                                      "BONDS",
                                      "CASH"
                                    ]
                                  },
                                  "value": {
                                    "type": "number"
                                  },
                                  "userId": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "id",
                              "assetType",
                              "value",
                              "userId"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "livingBalanceSheet_groupByAsset"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/GroupByFinancialGoal": {
      "get": {
        "operationId": "LivingBalanceSheetGroupByFinancialGoal",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "by.0",
            "description": "Type: string,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_groupByFinancialGoal": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "goalType": {
                                "type": "string",
                                "enum": [
                                  "RETIREMENT",
                                  "EDUCATION",
                                  "VACATION",
                                  "EMERGENCY_FUND"
                                ]
                              },
                              "target": {
                                "type": "number"
                              },
                              "deadline": {
                                "type": "string"
                              },
                              "userId": {
                                "type": "string"
                              },
                              "_count": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer"
                                  },
                                  "goalType": {
                                    "type": "integer"
                                  },
                                  "target": {
                                    "type": "integer"
                                  },
                                  "deadline": {
                                    "type": "integer"
                                  },
                                  "userId": {
                                    "type": "integer"
                                  },
                                  "_all": {
                                    "type": "integer"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "goalType",
                                  "target",
                                  "deadline",
                                  "userId",
                                  "_all"
                                ]
                              },
                              "_avg": {
                                "type": "object",
                                "properties": {
                                  "target": {
                                    "type": "number"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "_sum": {
                                "type": "object",
                                "properties": {
                                  "target": {
                                    "type": "number"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "_min": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "goalType": {
                                    "type": "string",
                                    "enum": [
                                      "RETIREMENT",
                                      "EDUCATION",
                                      "VACATION",
                                      "EMERGENCY_FUND"
                                    ]
                                  },
                                  "target": {
                                    "type": "number"
                                  },
                                  "deadline": {
                                    "type": "string"
                                  },
                                  "userId": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "_max": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "goalType": {
                                    "type": "string",
                                    "enum": [
                                      "RETIREMENT",
                                      "EDUCATION",
                                      "VACATION",
                                      "EMERGENCY_FUND"
                                    ]
                                  },
                                  "target": {
                                    "type": "number"
                                  },
                                  "deadline": {
                                    "type": "string"
                                  },
                                  "userId": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "id",
                              "goalType",
                              "target",
                              "deadline",
                              "userId"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "livingBalanceSheet_groupByFinancialGoal"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/GroupByLiability": {
      "get": {
        "operationId": "LivingBalanceSheetGroupByLiability",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "by.0",
            "description": "Type: string,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_groupByLiability": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "liabilityType": {
                                "type": "string",
                                "enum": [
                                  "MORTGAGE",
                                  "LOAN",
                                  "CREDIT_CARD_DEBT"
                                ]
                              },
                              "amount": {
                                "type": "number"
                              },
                              "userId": {
                                "type": "string"
                              },
                              "_count": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer"
                                  },
                                  "liabilityType": {
                                    "type": "integer"
                                  },
                                  "amount": {
                                    "type": "integer"
                                  },
                                  "userId": {
                                    "type": "integer"
                                  },
                                  "_all": {
                                    "type": "integer"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "liabilityType",
                                  "amount",
                                  "userId",
                                  "_all"
                                ]
                              },
                              "_avg": {
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "type": "number"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "_sum": {
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "type": "number"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "_min": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "liabilityType": {
                                    "type": "string",
                                    "enum": [
                                      "MORTGAGE",
                                      "LOAN",
                                      "CREDIT_CARD_DEBT"
                                    ]
                                  },
                                  "amount": {
                                    "type": "number"
                                  },
                                  "userId": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "_max": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "liabilityType": {
                                    "type": "string",
                                    "enum": [
                                      "MORTGAGE",
                                      "LOAN",
                                      "CREDIT_CARD_DEBT"
                                    ]
                                  },
                                  "amount": {
                                    "type": "number"
                                  },
                                  "userId": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "id",
                              "liabilityType",
                              "amount",
                              "userId"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "livingBalanceSheet_groupByLiability"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/GroupByUser": {
      "get": {
        "operationId": "LivingBalanceSheetGroupByUser",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "by.0",
            "description": "Type: string,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_groupByUser": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "username": {
                                "type": "string"
                              },
                              "password": {
                                "type": "string"
                              },
                              "role": {
                                "type": "string",
                                "enum": [
                                  "ADMIN",
                                  "FINANCIAL_ADVISOR",
                                  "CLIENT"
                                ]
                              },
                              "_count": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer"
                                  },
                                  "username": {
                                    "type": "integer"
                                  },
                                  "password": {
                                    "type": "integer"
                                  },
                                  "role": {
                                    "type": "integer"
                                  },
                                  "_all": {
                                    "type": "integer"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "username",
                                  "password",
                                  "role",
                                  "_all"
                                ]
                              },
                              "_min": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "username": {
                                    "type": "string"
                                  },
                                  "password": {
                                    "type": "string"
                                  },
                                  "role": {
                                    "type": "string",
                                    "enum": [
                                      "ADMIN",
                                      "FINANCIAL_ADVISOR",
                                      "CLIENT"
                                    ]
                                  }
                                },
                                "additionalProperties": false
                              },
                              "_max": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "username": {
                                    "type": "string"
                                  },
                                  "password": {
                                    "type": "string"
                                  },
                                  "role": {
                                    "type": "string",
                                    "enum": [
                                      "ADMIN",
                                      "FINANCIAL_ADVISOR",
                                      "CLIENT"
                                    ]
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "id",
                              "username",
                              "password",
                              "role"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "livingBalanceSheet_groupByUser"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/QueryRaw": {
      "get": {
        "operationId": "LivingBalanceSheetQueryRaw",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "query",
            "description": "Type: string",
            "in": "query",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parameters",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_queryRaw": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "ID": {
                                "type": "string"
                              },
                              "Int": {
                                "type": "integer"
                              },
                              "Float": {
                                "type": "number"
                              },
                              "String": {
                                "type": "string"
                              },
                              "Boolean": {
                                "type": "boolean"
                              },
                              "DateTime": {
                                "type": "string"
                              },
                              "JSON": {},
                              "Object": {
                                "type": "object",
                                "properties": {
                                  "ID": {
                                    "type": "string"
                                  },
                                  "Int": {
                                    "type": "integer"
                                  },
                                  "Float": {
                                    "type": "number"
                                  },
                                  "String": {
                                    "type": "string"
                                  },
                                  "Boolean": {
                                    "type": "boolean"
                                  },
                                  "DateTime": {
                                    "type": "string"
                                  },
                                  "JSON": {},
                                  "OptionalID": {
                                    "type": "string"
                                  },
                                  "OptionalInt": {
                                    "type": "integer"
                                  },
                                  "OptionalFloat": {
                                    "type": "number"
                                  },
                                  "OptionalString": {
                                    "type": "string"
                                  },
                                  "OptionalBoolean": {
                                    "type": "boolean"
                                  },
                                  "OptionalDateTime": {
                                    "type": "string"
                                  },
                                  "OptionalJSON": {}
                                },
                                "additionalProperties": false,
                                "required": [
                                  "ID",
                                  "Int",
                                  "Float",
                                  "String",
                                  "Boolean",
                                  "DateTime",
                                  "JSON"
                                ]
                              },
                              "Array": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "ID": {
                                      "type": "string"
                                    },
                                    "Int": {
                                      "type": "integer"
                                    },
                                    "Float": {
                                      "type": "number"
                                    },
                                    "String": {
                                      "type": "string"
                                    },
                                    "Boolean": {
                                      "type": "boolean"
                                    },
                                    "DateTime": {
                                      "type": "string"
                                    },
                                    "JSON": {},
                                    "OptionalID": {
                                      "type": "string"
                                    },
                                    "OptionalInt": {
                                      "type": "integer"
                                    },
                                    "OptionalFloat": {
                                      "type": "number"
                                    },
                                    "OptionalString": {
                                      "type": "string"
                                    },
                                    "OptionalBoolean": {
                                      "type": "boolean"
                                    },
                                    "OptionalDateTime": {
                                      "type": "string"
                                    },
                                    "OptionalJSON": {}
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "ID",
                                    "Int",
                                    "Float",
                                    "String",
                                    "Boolean",
                                    "DateTime",
                                    "JSON"
                                  ]
                                }
                              },
                              "OptionalID": {
                                "type": "string"
                              },
                              "OptionalInt": {
                                "type": "integer"
                              },
                              "OptionalFloat": {
                                "type": "number"
                              },
                              "OptionalString": {
                                "type": "string"
                              },
                              "OptionalBoolean": {
                                "type": "boolean"
                              },
                              "OptionalDateTime": {
                                "type": "string"
                              },
                              "OptionalJSON": {},
                              "OptionalObject": {
                                "type": "object",
                                "properties": {
                                  "ID": {
                                    "type": "string"
                                  },
                                  "Int": {
                                    "type": "integer"
                                  },
                                  "Float": {
                                    "type": "number"
                                  },
                                  "String": {
                                    "type": "string"
                                  },
                                  "Boolean": {
                                    "type": "boolean"
                                  },
                                  "DateTime": {
                                    "type": "string"
                                  },
                                  "JSON": {},
                                  "OptionalID": {
                                    "type": "string"
                                  },
                                  "OptionalInt": {
                                    "type": "integer"
                                  },
                                  "OptionalFloat": {
                                    "type": "number"
                                  },
                                  "OptionalString": {
                                    "type": "string"
                                  },
                                  "OptionalBoolean": {
                                    "type": "boolean"
                                  },
                                  "OptionalDateTime": {
                                    "type": "string"
                                  },
                                  "OptionalJSON": {}
                                },
                                "additionalProperties": false,
                                "required": [
                                  "ID",
                                  "Int",
                                  "Float",
                                  "String",
                                  "Boolean",
                                  "DateTime",
                                  "JSON"
                                ]
                              },
                              "OptionalArray": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "ID": {
                                      "type": "string"
                                    },
                                    "Int": {
                                      "type": "integer"
                                    },
                                    "Float": {
                                      "type": "number"
                                    },
                                    "String": {
                                      "type": "string"
                                    },
                                    "Boolean": {
                                      "type": "boolean"
                                    },
                                    "DateTime": {
                                      "type": "string"
                                    },
                                    "JSON": {},
                                    "OptionalID": {
                                      "type": "string"
                                    },
                                    "OptionalInt": {
                                      "type": "integer"
                                    },
                                    "OptionalFloat": {
                                      "type": "number"
                                    },
                                    "OptionalString": {
                                      "type": "string"
                                    },
                                    "OptionalBoolean": {
                                      "type": "boolean"
                                    },
                                    "OptionalDateTime": {
                                      "type": "string"
                                    },
                                    "OptionalJSON": {}
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "ID",
                                    "Int",
                                    "Float",
                                    "String",
                                    "Boolean",
                                    "DateTime",
                                    "JSON"
                                  ]
                                }
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "ID",
                              "Int",
                              "Float",
                              "String",
                              "Boolean",
                              "DateTime",
                              "JSON",
                              "Object",
                              "Array",
                              "OptionalArray"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "livingBalanceSheet_queryRaw"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/QueryRawJSON": {
      "get": {
        "operationId": "LivingBalanceSheetQueryRawJSON",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "query",
            "description": "Type: string",
            "in": "query",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parameters",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_queryRawJSON": {}
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/UpdateManyAsset": {
      "post": {
        "operationId": "LivingBalanceSheetUpdateManyAsset",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/livingBalanceSheet_AssetUpdateManyMutationInput"
                  },
                  "where": {
                    "$ref": "#/components/schemas/livingBalanceSheet_AssetWhereInput_2"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_updateManyAsset": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/UpdateManyFinancialGoal": {
      "post": {
        "operationId": "LivingBalanceSheetUpdateManyFinancialGoal",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/livingBalanceSheet_FinancialGoalUpdateManyMutationInput"
                  },
                  "where": {
                    "$ref": "#/components/schemas/livingBalanceSheet_FinancialGoalWhereInput_2"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_updateManyFinancialGoal": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/UpdateManyLiability": {
      "post": {
        "operationId": "LivingBalanceSheetUpdateManyLiability",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/livingBalanceSheet_LiabilityUpdateManyMutationInput"
                  },
                  "where": {
                    "$ref": "#/components/schemas/livingBalanceSheet_LiabilityWhereInput_2"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_updateManyLiability": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/UpdateManyUser": {
      "post": {
        "operationId": "LivingBalanceSheetUpdateManyUser",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/livingBalanceSheet_UserUpdateManyMutationInput"
                  },
                  "where": {
                    "$ref": "#/components/schemas/livingBalanceSheet_UserWhereInput_2"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_updateManyUser": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/UpdateOneAsset": {
      "post": {
        "operationId": "LivingBalanceSheetUpdateOneAsset",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/livingBalanceSheet_AssetUpdateInput"
                  },
                  "where": {
                    "$ref": "#/components/schemas/livingBalanceSheet_AssetWhereUniqueInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data",
                  "where"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_updateOneAsset": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "assetType": {
                              "type": "string",
                              "enum": [
                                "REAL_ESTATE",
                                "STOCKS",
                                "BONDS",
                                "CASH"
                              ]
                            },
                            "value": {
                              "type": "number"
                            },
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "assetType",
                            "value",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/UpdateOneFinancialGoal": {
      "post": {
        "operationId": "LivingBalanceSheetUpdateOneFinancialGoal",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/livingBalanceSheet_FinancialGoalUpdateInput"
                  },
                  "where": {
                    "$ref": "#/components/schemas/livingBalanceSheet_FinancialGoalWhereUniqueInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data",
                  "where"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_updateOneFinancialGoal": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "goalType": {
                              "type": "string",
                              "enum": [
                                "RETIREMENT",
                                "EDUCATION",
                                "VACATION",
                                "EMERGENCY_FUND"
                              ]
                            },
                            "target": {
                              "type": "number"
                            },
                            "deadline": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "goalType",
                            "target",
                            "deadline",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/UpdateOneLiability": {
      "post": {
        "operationId": "LivingBalanceSheetUpdateOneLiability",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/livingBalanceSheet_LiabilityUpdateInput"
                  },
                  "where": {
                    "$ref": "#/components/schemas/livingBalanceSheet_LiabilityWhereUniqueInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data",
                  "where"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_updateOneLiability": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "liabilityType": {
                              "type": "string",
                              "enum": [
                                "MORTGAGE",
                                "LOAN",
                                "CREDIT_CARD_DEBT"
                              ]
                            },
                            "amount": {
                              "type": "number"
                            },
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "liabilityType",
                            "amount",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/UpdateOneUser": {
      "post": {
        "operationId": "LivingBalanceSheetUpdateOneUser",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/livingBalanceSheet_UserUpdateInput"
                  },
                  "where": {
                    "$ref": "#/components/schemas/livingBalanceSheet_UserWhereUniqueInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data",
                  "where"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_updateOneUser": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "password": {
                              "type": "string"
                            },
                            "role": {
                              "type": "string",
                              "enum": [
                                "ADMIN",
                                "FINANCIAL_ADVISOR",
                                "CLIENT"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "username",
                            "password",
                            "role"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/UpsertOneAsset": {
      "post": {
        "operationId": "LivingBalanceSheetUpsertOneAsset",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/livingBalanceSheet_AssetWhereUniqueInput"
                  },
                  "create": {
                    "$ref": "#/components/schemas/livingBalanceSheet_AssetCreateInput"
                  },
                  "update": {
                    "$ref": "#/components/schemas/livingBalanceSheet_AssetUpdateInput_2"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "where",
                  "create",
                  "update"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_upsertOneAsset": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "assetType": {
                              "type": "string",
                              "enum": [
                                "REAL_ESTATE",
                                "STOCKS",
                                "BONDS",
                                "CASH"
                              ]
                            },
                            "value": {
                              "type": "number"
                            },
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "assetType",
                            "value",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/UpsertOneFinancialGoal": {
      "post": {
        "operationId": "LivingBalanceSheetUpsertOneFinancialGoal",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/livingBalanceSheet_FinancialGoalWhereUniqueInput"
                  },
                  "create": {
                    "$ref": "#/components/schemas/livingBalanceSheet_FinancialGoalCreateInput"
                  },
                  "update": {
                    "$ref": "#/components/schemas/livingBalanceSheet_FinancialGoalUpdateInput_2"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "where",
                  "create",
                  "update"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_upsertOneFinancialGoal": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "goalType": {
                              "type": "string",
                              "enum": [
                                "RETIREMENT",
                                "EDUCATION",
                                "VACATION",
                                "EMERGENCY_FUND"
                              ]
                            },
                            "target": {
                              "type": "number"
                            },
                            "deadline": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "goalType",
                            "target",
                            "deadline",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/UpsertOneLiability": {
      "post": {
        "operationId": "LivingBalanceSheetUpsertOneLiability",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/livingBalanceSheet_LiabilityWhereUniqueInput"
                  },
                  "create": {
                    "$ref": "#/components/schemas/livingBalanceSheet_LiabilityCreateInput"
                  },
                  "update": {
                    "$ref": "#/components/schemas/livingBalanceSheet_LiabilityUpdateInput_2"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "where",
                  "create",
                  "update"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_upsertOneLiability": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "liabilityType": {
                              "type": "string",
                              "enum": [
                                "MORTGAGE",
                                "LOAN",
                                "CREDIT_CARD_DEBT"
                              ]
                            },
                            "amount": {
                              "type": "number"
                            },
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "liabilityType",
                            "amount",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/livingBalanceSheet/UpsertOneUser": {
      "post": {
        "operationId": "LivingBalanceSheetUpsertOneUser",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/livingBalanceSheet_UserWhereUniqueInput"
                  },
                  "create": {
                    "$ref": "#/components/schemas/livingBalanceSheet_UserCreateInput"
                  },
                  "update": {
                    "$ref": "#/components/schemas/livingBalanceSheet_UserUpdateInput_2"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "where",
                  "create",
                  "update"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "livingBalanceSheet_upsertOneUser": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "password": {
                              "type": "string"
                            },
                            "role": {
                              "type": "string",
                              "enum": [
                                "ADMIN",
                                "FINANCIAL_ADVISOR",
                                "CLIENT"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "username",
                            "password",
                            "role"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/AggregateClient": {
      "get": {
        "operationId": "SmartOfficeAggregateClient",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_aggregateClient": {
                          "type": "object",
                          "properties": {
                            "_count": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer"
                                },
                                "name": {
                                  "type": "integer"
                                },
                                "email": {
                                  "type": "integer"
                                },
                                "phone": {
                                  "type": "integer"
                                },
                                "userId": {
                                  "type": "integer"
                                },
                                "_all": {
                                  "type": "integer"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "name",
                                "email",
                                "phone",
                                "userId",
                                "_all"
                              ]
                            },
                            "_min": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "email": {
                                  "type": "string"
                                },
                                "phone": {
                                  "type": "string"
                                },
                                "userId": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "_max": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "email": {
                                  "type": "string"
                                },
                                "phone": {
                                  "type": "string"
                                },
                                "userId": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "smartOffice_aggregateClient"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/AggregateSale": {
      "get": {
        "operationId": "SmartOfficeAggregateSale",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_aggregateSale": {
                          "type": "object",
                          "properties": {
                            "_count": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer"
                                },
                                "saleType": {
                                  "type": "integer"
                                },
                                "amount": {
                                  "type": "integer"
                                },
                                "timestamp": {
                                  "type": "integer"
                                },
                                "userId": {
                                  "type": "integer"
                                },
                                "_all": {
                                  "type": "integer"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "saleType",
                                "amount",
                                "timestamp",
                                "userId",
                                "_all"
                              ]
                            },
                            "_avg": {
                              "type": "object",
                              "properties": {
                                "amount": {
                                  "type": "number"
                                }
                              },
                              "additionalProperties": false
                            },
                            "_sum": {
                              "type": "object",
                              "properties": {
                                "amount": {
                                  "type": "number"
                                }
                              },
                              "additionalProperties": false
                            },
                            "_min": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "saleType": {
                                  "type": "string",
                                  "enum": [
                                    "NEW_POLICY",
                                    "RENEWAL",
                                    "UPGRADE"
                                  ]
                                },
                                "amount": {
                                  "type": "number"
                                },
                                "timestamp": {
                                  "type": "string"
                                },
                                "userId": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "_max": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "saleType": {
                                  "type": "string",
                                  "enum": [
                                    "NEW_POLICY",
                                    "RENEWAL",
                                    "UPGRADE"
                                  ]
                                },
                                "amount": {
                                  "type": "number"
                                },
                                "timestamp": {
                                  "type": "string"
                                },
                                "userId": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "smartOffice_aggregateSale"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/AggregateTask": {
      "get": {
        "operationId": "SmartOfficeAggregateTask",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_aggregateTask": {
                          "type": "object",
                          "properties": {
                            "_count": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer"
                                },
                                "taskType": {
                                  "type": "integer"
                                },
                                "status": {
                                  "type": "integer"
                                },
                                "details": {
                                  "type": "integer"
                                },
                                "userId": {
                                  "type": "integer"
                                },
                                "_all": {
                                  "type": "integer"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "taskType",
                                "status",
                                "details",
                                "userId",
                                "_all"
                              ]
                            },
                            "_min": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "taskType": {
                                  "type": "string",
                                  "enum": [
                                    "MEETING",
                                    "CALL",
                                    "EMAIL",
                                    "FOLLOW_UP"
                                  ]
                                },
                                "status": {
                                  "type": "string",
                                  "enum": [
                                    "PENDING",
                                    "COMPLETED",
                                    "CANCELLED"
                                  ]
                                },
                                "userId": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "_max": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "taskType": {
                                  "type": "string",
                                  "enum": [
                                    "MEETING",
                                    "CALL",
                                    "EMAIL",
                                    "FOLLOW_UP"
                                  ]
                                },
                                "status": {
                                  "type": "string",
                                  "enum": [
                                    "PENDING",
                                    "COMPLETED",
                                    "CANCELLED"
                                  ]
                                },
                                "userId": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "smartOffice_aggregateTask"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/AggregateUser": {
      "get": {
        "operationId": "SmartOfficeAggregateUser",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_aggregateUser": {
                          "type": "object",
                          "properties": {
                            "_count": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer"
                                },
                                "username": {
                                  "type": "integer"
                                },
                                "password": {
                                  "type": "integer"
                                },
                                "role": {
                                  "type": "integer"
                                },
                                "_all": {
                                  "type": "integer"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "id",
                                "username",
                                "password",
                                "role",
                                "_all"
                              ]
                            },
                            "_min": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "username": {
                                  "type": "string"
                                },
                                "password": {
                                  "type": "string"
                                },
                                "role": {
                                  "type": "string",
                                  "enum": [
                                    "ADMIN",
                                    "AGENT",
                                    "SALES_REP"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            },
                            "_max": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "username": {
                                  "type": "string"
                                },
                                "password": {
                                  "type": "string"
                                },
                                "role": {
                                  "type": "string",
                                  "enum": [
                                    "ADMIN",
                                    "AGENT",
                                    "SALES_REP"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "smartOffice_aggregateUser"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/CreateManyClient": {
      "post": {
        "operationId": "SmartOfficeCreateManyClient",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/smartOffice_ClientCreateManyInput"
                    }
                  },
                  "skipDuplicates": {
                    "type": [
                      "boolean",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_createManyClient": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/CreateManySale": {
      "post": {
        "operationId": "SmartOfficeCreateManySale",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/smartOffice_SaleCreateManyInput"
                    }
                  },
                  "skipDuplicates": {
                    "type": [
                      "boolean",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_createManySale": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/CreateManyTask": {
      "post": {
        "operationId": "SmartOfficeCreateManyTask",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/smartOffice_TaskCreateManyInput"
                    }
                  },
                  "skipDuplicates": {
                    "type": [
                      "boolean",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_createManyTask": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/CreateManyUser": {
      "post": {
        "operationId": "SmartOfficeCreateManyUser",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/smartOffice_UserCreateManyInput"
                    }
                  },
                  "skipDuplicates": {
                    "type": [
                      "boolean",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_createManyUser": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/CreateOneClient": {
      "post": {
        "operationId": "SmartOfficeCreateOneClient",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/smartOffice_ClientCreateInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_createOneClient": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            },
                            "phone": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "name",
                            "email",
                            "phone",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/CreateOneSale": {
      "post": {
        "operationId": "SmartOfficeCreateOneSale",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/smartOffice_SaleCreateInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_createOneSale": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "saleType": {
                              "type": "string",
                              "enum": [
                                "NEW_POLICY",
                                "RENEWAL",
                                "UPGRADE"
                              ]
                            },
                            "amount": {
                              "type": "number"
                            },
                            "timestamp": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "saleType",
                            "amount",
                            "timestamp",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/CreateOneTask": {
      "post": {
        "operationId": "SmartOfficeCreateOneTask",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/smartOffice_TaskCreateInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_createOneTask": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "taskType": {
                              "type": "string",
                              "enum": [
                                "MEETING",
                                "CALL",
                                "EMAIL",
                                "FOLLOW_UP"
                              ]
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "PENDING",
                                "COMPLETED",
                                "CANCELLED"
                              ]
                            },
                            "details": {},
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "taskType",
                            "status",
                            "details",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/CreateOneUser": {
      "post": {
        "operationId": "SmartOfficeCreateOneUser",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/smartOffice_UserCreateInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_createOneUser": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "password": {
                              "type": "string"
                            },
                            "role": {
                              "type": "string",
                              "enum": [
                                "ADMIN",
                                "AGENT",
                                "SALES_REP"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "username",
                            "password",
                            "role"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/DeleteManyClient": {
      "post": {
        "operationId": "SmartOfficeDeleteManyClient",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/smartOffice_ClientWhereInput"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_deleteManyClient": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/DeleteManySale": {
      "post": {
        "operationId": "SmartOfficeDeleteManySale",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/smartOffice_SaleWhereInput"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_deleteManySale": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/DeleteManyTask": {
      "post": {
        "operationId": "SmartOfficeDeleteManyTask",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/smartOffice_TaskWhereInput"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_deleteManyTask": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/DeleteManyUser": {
      "post": {
        "operationId": "SmartOfficeDeleteManyUser",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/smartOffice_UserWhereInput"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_deleteManyUser": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/DeleteOneClient": {
      "post": {
        "operationId": "SmartOfficeDeleteOneClient",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/smartOffice_ClientWhereUniqueInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "where"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_deleteOneClient": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            },
                            "phone": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "name",
                            "email",
                            "phone",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/DeleteOneSale": {
      "post": {
        "operationId": "SmartOfficeDeleteOneSale",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/smartOffice_SaleWhereUniqueInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "where"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_deleteOneSale": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "saleType": {
                              "type": "string",
                              "enum": [
                                "NEW_POLICY",
                                "RENEWAL",
                                "UPGRADE"
                              ]
                            },
                            "amount": {
                              "type": "number"
                            },
                            "timestamp": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "saleType",
                            "amount",
                            "timestamp",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/DeleteOneTask": {
      "post": {
        "operationId": "SmartOfficeDeleteOneTask",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/smartOffice_TaskWhereUniqueInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "where"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_deleteOneTask": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "taskType": {
                              "type": "string",
                              "enum": [
                                "MEETING",
                                "CALL",
                                "EMAIL",
                                "FOLLOW_UP"
                              ]
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "PENDING",
                                "COMPLETED",
                                "CANCELLED"
                              ]
                            },
                            "details": {},
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "taskType",
                            "status",
                            "details",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/DeleteOneUser": {
      "post": {
        "operationId": "SmartOfficeDeleteOneUser",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/smartOffice_UserWhereUniqueInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "where"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_deleteOneUser": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "password": {
                              "type": "string"
                            },
                            "role": {
                              "type": "string",
                              "enum": [
                                "ADMIN",
                                "AGENT",
                                "SALES_REP"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "username",
                            "password",
                            "role"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/ExecuteRaw": {
      "post": {
        "operationId": "SmartOfficeExecuteRaw",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "query": {
                    "type": "string"
                  },
                  "parameters": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                },
                "additionalProperties": false,
                "required": [
                  "query"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_executeRaw": {
                          "type": "integer"
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "smartOffice_executeRaw"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/FindFirstClient": {
      "get": {
        "operationId": "SmartOfficeFindFirstClient",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_findFirstClient": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            },
                            "phone": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "name",
                            "email",
                            "phone",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/FindFirstClientOrThrow": {
      "get": {
        "operationId": "SmartOfficeFindFirstClientOrThrow",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_findFirstClientOrThrow": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            },
                            "phone": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "name",
                            "email",
                            "phone",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/FindFirstSale": {
      "get": {
        "operationId": "SmartOfficeFindFirstSale",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_findFirstSale": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "saleType": {
                              "type": "string",
                              "enum": [
                                "NEW_POLICY",
                                "RENEWAL",
                                "UPGRADE"
                              ]
                            },
                            "amount": {
                              "type": "number"
                            },
                            "timestamp": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "saleType",
                            "amount",
                            "timestamp",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/FindFirstSaleOrThrow": {
      "get": {
        "operationId": "SmartOfficeFindFirstSaleOrThrow",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_findFirstSaleOrThrow": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "saleType": {
                              "type": "string",
                              "enum": [
                                "NEW_POLICY",
                                "RENEWAL",
                                "UPGRADE"
                              ]
                            },
                            "amount": {
                              "type": "number"
                            },
                            "timestamp": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "saleType",
                            "amount",
                            "timestamp",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/FindFirstTask": {
      "get": {
        "operationId": "SmartOfficeFindFirstTask",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_findFirstTask": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "taskType": {
                              "type": "string",
                              "enum": [
                                "MEETING",
                                "CALL",
                                "EMAIL",
                                "FOLLOW_UP"
                              ]
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "PENDING",
                                "COMPLETED",
                                "CANCELLED"
                              ]
                            },
                            "details": {},
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "taskType",
                            "status",
                            "details",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/FindFirstTaskOrThrow": {
      "get": {
        "operationId": "SmartOfficeFindFirstTaskOrThrow",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_findFirstTaskOrThrow": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "taskType": {
                              "type": "string",
                              "enum": [
                                "MEETING",
                                "CALL",
                                "EMAIL",
                                "FOLLOW_UP"
                              ]
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "PENDING",
                                "COMPLETED",
                                "CANCELLED"
                              ]
                            },
                            "details": {},
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "taskType",
                            "status",
                            "details",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/FindFirstUser": {
      "get": {
        "operationId": "SmartOfficeFindFirstUser",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_findFirstUser": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "password": {
                              "type": "string"
                            },
                            "role": {
                              "type": "string",
                              "enum": [
                                "ADMIN",
                                "AGENT",
                                "SALES_REP"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "username",
                            "password",
                            "role"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/FindFirstUserOrThrow": {
      "get": {
        "operationId": "SmartOfficeFindFirstUserOrThrow",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_findFirstUserOrThrow": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "password": {
                              "type": "string"
                            },
                            "role": {
                              "type": "string",
                              "enum": [
                                "ADMIN",
                                "AGENT",
                                "SALES_REP"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "username",
                            "password",
                            "role"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/FindManyClient": {
      "get": {
        "operationId": "SmartOfficeFindManyClient",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_findManyClient": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string"
                              },
                              "phone": {
                                "type": "string"
                              },
                              "userId": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "id",
                              "name",
                              "email",
                              "phone",
                              "userId"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "smartOffice_findManyClient"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/FindManySale": {
      "get": {
        "operationId": "SmartOfficeFindManySale",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_findManySale": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "saleType": {
                                "type": "string",
                                "enum": [
                                  "NEW_POLICY",
                                  "RENEWAL",
                                  "UPGRADE"
                                ]
                              },
                              "amount": {
                                "type": "number"
                              },
                              "timestamp": {
                                "type": "string"
                              },
                              "userId": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "id",
                              "saleType",
                              "amount",
                              "timestamp",
                              "userId"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "smartOffice_findManySale"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/FindManyTask": {
      "get": {
        "operationId": "SmartOfficeFindManyTask",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_findManyTask": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "taskType": {
                                "type": "string",
                                "enum": [
                                  "MEETING",
                                  "CALL",
                                  "EMAIL",
                                  "FOLLOW_UP"
                                ]
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "PENDING",
                                  "COMPLETED",
                                  "CANCELLED"
                                ]
                              },
                              "details": {},
                              "userId": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "id",
                              "taskType",
                              "status",
                              "details",
                              "userId"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "smartOffice_findManyTask"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/FindManyUser": {
      "get": {
        "operationId": "SmartOfficeFindManyUser",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "distinct",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_findManyUser": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "username": {
                                "type": "string"
                              },
                              "password": {
                                "type": "string"
                              },
                              "role": {
                                "type": "string",
                                "enum": [
                                  "ADMIN",
                                  "AGENT",
                                  "SALES_REP"
                                ]
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "id",
                              "username",
                              "password",
                              "role"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "smartOffice_findManyUser"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/FindUniqueClient": {
      "get": {
        "operationId": "SmartOfficeFindUniqueClient",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_findUniqueClient": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            },
                            "phone": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "name",
                            "email",
                            "phone",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/FindUniqueClientOrThrow": {
      "get": {
        "operationId": "SmartOfficeFindUniqueClientOrThrow",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_findUniqueClientOrThrow": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            },
                            "phone": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "name",
                            "email",
                            "phone",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/FindUniqueSale": {
      "get": {
        "operationId": "SmartOfficeFindUniqueSale",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_findUniqueSale": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "saleType": {
                              "type": "string",
                              "enum": [
                                "NEW_POLICY",
                                "RENEWAL",
                                "UPGRADE"
                              ]
                            },
                            "amount": {
                              "type": "number"
                            },
                            "timestamp": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "saleType",
                            "amount",
                            "timestamp",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/FindUniqueSaleOrThrow": {
      "get": {
        "operationId": "SmartOfficeFindUniqueSaleOrThrow",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_findUniqueSaleOrThrow": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "saleType": {
                              "type": "string",
                              "enum": [
                                "NEW_POLICY",
                                "RENEWAL",
                                "UPGRADE"
                              ]
                            },
                            "amount": {
                              "type": "number"
                            },
                            "timestamp": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "saleType",
                            "amount",
                            "timestamp",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/FindUniqueTask": {
      "get": {
        "operationId": "SmartOfficeFindUniqueTask",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_findUniqueTask": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "taskType": {
                              "type": "string",
                              "enum": [
                                "MEETING",
                                "CALL",
                                "EMAIL",
                                "FOLLOW_UP"
                              ]
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "PENDING",
                                "COMPLETED",
                                "CANCELLED"
                              ]
                            },
                            "details": {},
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "taskType",
                            "status",
                            "details",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/FindUniqueTaskOrThrow": {
      "get": {
        "operationId": "SmartOfficeFindUniqueTaskOrThrow",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_findUniqueTaskOrThrow": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "taskType": {
                              "type": "string",
                              "enum": [
                                "MEETING",
                                "CALL",
                                "EMAIL",
                                "FOLLOW_UP"
                              ]
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "PENDING",
                                "COMPLETED",
                                "CANCELLED"
                              ]
                            },
                            "details": {},
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "taskType",
                            "status",
                            "details",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/FindUniqueUser": {
      "get": {
        "operationId": "SmartOfficeFindUniqueUser",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_findUniqueUser": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "password": {
                              "type": "string"
                            },
                            "role": {
                              "type": "string",
                              "enum": [
                                "ADMIN",
                                "AGENT",
                                "SALES_REP"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "username",
                            "password",
                            "role"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/FindUniqueUserOrThrow": {
      "get": {
        "operationId": "SmartOfficeFindUniqueUserOrThrow",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_findUniqueUserOrThrow": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "password": {
                              "type": "string"
                            },
                            "role": {
                              "type": "string",
                              "enum": [
                                "ADMIN",
                                "AGENT",
                                "SALES_REP"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "username",
                            "password",
                            "role"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/GroupByClient": {
      "get": {
        "operationId": "SmartOfficeGroupByClient",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "by.0",
            "description": "Type: string,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_groupByClient": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string"
                              },
                              "phone": {
                                "type": "string"
                              },
                              "userId": {
                                "type": "string"
                              },
                              "_count": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer"
                                  },
                                  "name": {
                                    "type": "integer"
                                  },
                                  "email": {
                                    "type": "integer"
                                  },
                                  "phone": {
                                    "type": "integer"
                                  },
                                  "userId": {
                                    "type": "integer"
                                  },
                                  "_all": {
                                    "type": "integer"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "name",
                                  "email",
                                  "phone",
                                  "userId",
                                  "_all"
                                ]
                              },
                              "_min": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "email": {
                                    "type": "string"
                                  },
                                  "phone": {
                                    "type": "string"
                                  },
                                  "userId": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "_max": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "email": {
                                    "type": "string"
                                  },
                                  "phone": {
                                    "type": "string"
                                  },
                                  "userId": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "id",
                              "name",
                              "email",
                              "phone",
                              "userId"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "smartOffice_groupByClient"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/GroupBySale": {
      "get": {
        "operationId": "SmartOfficeGroupBySale",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "by.0",
            "description": "Type: string,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_groupBySale": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "saleType": {
                                "type": "string",
                                "enum": [
                                  "NEW_POLICY",
                                  "RENEWAL",
                                  "UPGRADE"
                                ]
                              },
                              "amount": {
                                "type": "number"
                              },
                              "timestamp": {
                                "type": "string"
                              },
                              "userId": {
                                "type": "string"
                              },
                              "_count": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer"
                                  },
                                  "saleType": {
                                    "type": "integer"
                                  },
                                  "amount": {
                                    "type": "integer"
                                  },
                                  "timestamp": {
                                    "type": "integer"
                                  },
                                  "userId": {
                                    "type": "integer"
                                  },
                                  "_all": {
                                    "type": "integer"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "saleType",
                                  "amount",
                                  "timestamp",
                                  "userId",
                                  "_all"
                                ]
                              },
                              "_avg": {
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "type": "number"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "_sum": {
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "type": "number"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "_min": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "saleType": {
                                    "type": "string",
                                    "enum": [
                                      "NEW_POLICY",
                                      "RENEWAL",
                                      "UPGRADE"
                                    ]
                                  },
                                  "amount": {
                                    "type": "number"
                                  },
                                  "timestamp": {
                                    "type": "string"
                                  },
                                  "userId": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "_max": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "saleType": {
                                    "type": "string",
                                    "enum": [
                                      "NEW_POLICY",
                                      "RENEWAL",
                                      "UPGRADE"
                                    ]
                                  },
                                  "amount": {
                                    "type": "number"
                                  },
                                  "timestamp": {
                                    "type": "string"
                                  },
                                  "userId": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "id",
                              "saleType",
                              "amount",
                              "timestamp",
                              "userId"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "smartOffice_groupBySale"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/GroupByTask": {
      "get": {
        "operationId": "SmartOfficeGroupByTask",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "by.0",
            "description": "Type: string,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_groupByTask": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "taskType": {
                                "type": "string",
                                "enum": [
                                  "MEETING",
                                  "CALL",
                                  "EMAIL",
                                  "FOLLOW_UP"
                                ]
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "PENDING",
                                  "COMPLETED",
                                  "CANCELLED"
                                ]
                              },
                              "details": {},
                              "userId": {
                                "type": "string"
                              },
                              "_count": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer"
                                  },
                                  "taskType": {
                                    "type": "integer"
                                  },
                                  "status": {
                                    "type": "integer"
                                  },
                                  "details": {
                                    "type": "integer"
                                  },
                                  "userId": {
                                    "type": "integer"
                                  },
                                  "_all": {
                                    "type": "integer"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "taskType",
                                  "status",
                                  "details",
                                  "userId",
                                  "_all"
                                ]
                              },
                              "_min": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "taskType": {
                                    "type": "string",
                                    "enum": [
                                      "MEETING",
                                      "CALL",
                                      "EMAIL",
                                      "FOLLOW_UP"
                                    ]
                                  },
                                  "status": {
                                    "type": "string",
                                    "enum": [
                                      "PENDING",
                                      "COMPLETED",
                                      "CANCELLED"
                                    ]
                                  },
                                  "userId": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "_max": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "taskType": {
                                    "type": "string",
                                    "enum": [
                                      "MEETING",
                                      "CALL",
                                      "EMAIL",
                                      "FOLLOW_UP"
                                    ]
                                  },
                                  "status": {
                                    "type": "string",
                                    "enum": [
                                      "PENDING",
                                      "COMPLETED",
                                      "CANCELLED"
                                    ]
                                  },
                                  "userId": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "id",
                              "taskType",
                              "status",
                              "details",
                              "userId"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "smartOffice_groupByTask"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/GroupByUser": {
      "get": {
        "operationId": "SmartOfficeGroupByUser",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "orderBy",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          },
          {
            "name": "take",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "skip",
            "description": "Type: integer,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          {
            "name": "by.0",
            "description": "Type: string,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "string",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_groupByUser": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "username": {
                                "type": "string"
                              },
                              "password": {
                                "type": "string"
                              },
                              "role": {
                                "type": "string",
                                "enum": [
                                  "ADMIN",
                                  "AGENT",
                                  "SALES_REP"
                                ]
                              },
                              "_count": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer"
                                  },
                                  "username": {
                                    "type": "integer"
                                  },
                                  "password": {
                                    "type": "integer"
                                  },
                                  "role": {
                                    "type": "integer"
                                  },
                                  "_all": {
                                    "type": "integer"
                                  }
                                },
                                "additionalProperties": false,
                                "required": [
                                  "id",
                                  "username",
                                  "password",
                                  "role",
                                  "_all"
                                ]
                              },
                              "_min": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "username": {
                                    "type": "string"
                                  },
                                  "password": {
                                    "type": "string"
                                  },
                                  "role": {
                                    "type": "string",
                                    "enum": [
                                      "ADMIN",
                                      "AGENT",
                                      "SALES_REP"
                                    ]
                                  }
                                },
                                "additionalProperties": false
                              },
                              "_max": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "username": {
                                    "type": "string"
                                  },
                                  "password": {
                                    "type": "string"
                                  },
                                  "role": {
                                    "type": "string",
                                    "enum": [
                                      "ADMIN",
                                      "AGENT",
                                      "SALES_REP"
                                    ]
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "id",
                              "username",
                              "password",
                              "role"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "smartOffice_groupByUser"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/QueryRaw": {
      "get": {
        "operationId": "SmartOfficeQueryRaw",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "query",
            "description": "Type: string",
            "in": "query",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parameters",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_queryRaw": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "ID": {
                                "type": "string"
                              },
                              "Int": {
                                "type": "integer"
                              },
                              "Float": {
                                "type": "number"
                              },
                              "String": {
                                "type": "string"
                              },
                              "Boolean": {
                                "type": "boolean"
                              },
                              "DateTime": {
                                "type": "string"
                              },
                              "JSON": {},
                              "Object": {
                                "type": "object",
                                "properties": {
                                  "ID": {
                                    "type": "string"
                                  },
                                  "Int": {
                                    "type": "integer"
                                  },
                                  "Float": {
                                    "type": "number"
                                  },
                                  "String": {
                                    "type": "string"
                                  },
                                  "Boolean": {
                                    "type": "boolean"
                                  },
                                  "DateTime": {
                                    "type": "string"
                                  },
                                  "JSON": {},
                                  "OptionalID": {
                                    "type": "string"
                                  },
                                  "OptionalInt": {
                                    "type": "integer"
                                  },
                                  "OptionalFloat": {
                                    "type": "number"
                                  },
                                  "OptionalString": {
                                    "type": "string"
                                  },
                                  "OptionalBoolean": {
                                    "type": "boolean"
                                  },
                                  "OptionalDateTime": {
                                    "type": "string"
                                  },
                                  "OptionalJSON": {}
                                },
                                "additionalProperties": false,
                                "required": [
                                  "ID",
                                  "Int",
                                  "Float",
                                  "String",
                                  "Boolean",
                                  "DateTime",
                                  "JSON"
                                ]
                              },
                              "Array": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "ID": {
                                      "type": "string"
                                    },
                                    "Int": {
                                      "type": "integer"
                                    },
                                    "Float": {
                                      "type": "number"
                                    },
                                    "String": {
                                      "type": "string"
                                    },
                                    "Boolean": {
                                      "type": "boolean"
                                    },
                                    "DateTime": {
                                      "type": "string"
                                    },
                                    "JSON": {},
                                    "OptionalID": {
                                      "type": "string"
                                    },
                                    "OptionalInt": {
                                      "type": "integer"
                                    },
                                    "OptionalFloat": {
                                      "type": "number"
                                    },
                                    "OptionalString": {
                                      "type": "string"
                                    },
                                    "OptionalBoolean": {
                                      "type": "boolean"
                                    },
                                    "OptionalDateTime": {
                                      "type": "string"
                                    },
                                    "OptionalJSON": {}
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "ID",
                                    "Int",
                                    "Float",
                                    "String",
                                    "Boolean",
                                    "DateTime",
                                    "JSON"
                                  ]
                                }
                              },
                              "OptionalID": {
                                "type": "string"
                              },
                              "OptionalInt": {
                                "type": "integer"
                              },
                              "OptionalFloat": {
                                "type": "number"
                              },
                              "OptionalString": {
                                "type": "string"
                              },
                              "OptionalBoolean": {
                                "type": "boolean"
                              },
                              "OptionalDateTime": {
                                "type": "string"
                              },
                              "OptionalJSON": {},
                              "OptionalObject": {
                                "type": "object",
                                "properties": {
                                  "ID": {
                                    "type": "string"
                                  },
                                  "Int": {
                                    "type": "integer"
                                  },
                                  "Float": {
                                    "type": "number"
                                  },
                                  "String": {
                                    "type": "string"
                                  },
                                  "Boolean": {
                                    "type": "boolean"
                                  },
                                  "DateTime": {
                                    "type": "string"
                                  },
                                  "JSON": {},
                                  "OptionalID": {
                                    "type": "string"
                                  },
                                  "OptionalInt": {
                                    "type": "integer"
                                  },
                                  "OptionalFloat": {
                                    "type": "number"
                                  },
                                  "OptionalString": {
                                    "type": "string"
                                  },
                                  "OptionalBoolean": {
                                    "type": "boolean"
                                  },
                                  "OptionalDateTime": {
                                    "type": "string"
                                  },
                                  "OptionalJSON": {}
                                },
                                "additionalProperties": false,
                                "required": [
                                  "ID",
                                  "Int",
                                  "Float",
                                  "String",
                                  "Boolean",
                                  "DateTime",
                                  "JSON"
                                ]
                              },
                              "OptionalArray": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "ID": {
                                      "type": "string"
                                    },
                                    "Int": {
                                      "type": "integer"
                                    },
                                    "Float": {
                                      "type": "number"
                                    },
                                    "String": {
                                      "type": "string"
                                    },
                                    "Boolean": {
                                      "type": "boolean"
                                    },
                                    "DateTime": {
                                      "type": "string"
                                    },
                                    "JSON": {},
                                    "OptionalID": {
                                      "type": "string"
                                    },
                                    "OptionalInt": {
                                      "type": "integer"
                                    },
                                    "OptionalFloat": {
                                      "type": "number"
                                    },
                                    "OptionalString": {
                                      "type": "string"
                                    },
                                    "OptionalBoolean": {
                                      "type": "boolean"
                                    },
                                    "OptionalDateTime": {
                                      "type": "string"
                                    },
                                    "OptionalJSON": {}
                                  },
                                  "additionalProperties": false,
                                  "required": [
                                    "ID",
                                    "Int",
                                    "Float",
                                    "String",
                                    "Boolean",
                                    "DateTime",
                                    "JSON"
                                  ]
                                }
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "ID",
                              "Int",
                              "Float",
                              "String",
                              "Boolean",
                              "DateTime",
                              "JSON",
                              "Object",
                              "Array",
                              "OptionalArray"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "smartOffice_queryRaw"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/QueryRawJSON": {
      "get": {
        "operationId": "SmartOfficeQueryRawJSON",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "query",
            "description": "Type: string",
            "in": "query",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parameters",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_queryRawJSON": {}
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/UpdateManyClient": {
      "post": {
        "operationId": "SmartOfficeUpdateManyClient",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/smartOffice_ClientUpdateManyMutationInput"
                  },
                  "where": {
                    "$ref": "#/components/schemas/smartOffice_ClientWhereInput_2"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_updateManyClient": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/UpdateManySale": {
      "post": {
        "operationId": "SmartOfficeUpdateManySale",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/smartOffice_SaleUpdateManyMutationInput"
                  },
                  "where": {
                    "$ref": "#/components/schemas/smartOffice_SaleWhereInput_2"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_updateManySale": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/UpdateManyTask": {
      "post": {
        "operationId": "SmartOfficeUpdateManyTask",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/smartOffice_TaskUpdateManyMutationInput"
                  },
                  "where": {
                    "$ref": "#/components/schemas/smartOffice_TaskWhereInput_2"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_updateManyTask": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/UpdateManyUser": {
      "post": {
        "operationId": "SmartOfficeUpdateManyUser",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/smartOffice_UserUpdateManyMutationInput"
                  },
                  "where": {
                    "$ref": "#/components/schemas/smartOffice_UserWhereInput_2"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_updateManyUser": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "count"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/UpdateOneClient": {
      "post": {
        "operationId": "SmartOfficeUpdateOneClient",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/smartOffice_ClientUpdateInput"
                  },
                  "where": {
                    "$ref": "#/components/schemas/smartOffice_ClientWhereUniqueInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data",
                  "where"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_updateOneClient": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            },
                            "phone": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "name",
                            "email",
                            "phone",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/UpdateOneSale": {
      "post": {
        "operationId": "SmartOfficeUpdateOneSale",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/smartOffice_SaleUpdateInput"
                  },
                  "where": {
                    "$ref": "#/components/schemas/smartOffice_SaleWhereUniqueInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data",
                  "where"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_updateOneSale": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "saleType": {
                              "type": "string",
                              "enum": [
                                "NEW_POLICY",
                                "RENEWAL",
                                "UPGRADE"
                              ]
                            },
                            "amount": {
                              "type": "number"
                            },
                            "timestamp": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "saleType",
                            "amount",
                            "timestamp",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/UpdateOneTask": {
      "post": {
        "operationId": "SmartOfficeUpdateOneTask",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/smartOffice_TaskUpdateInput"
                  },
                  "where": {
                    "$ref": "#/components/schemas/smartOffice_TaskWhereUniqueInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data",
                  "where"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_updateOneTask": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "taskType": {
                              "type": "string",
                              "enum": [
                                "MEETING",
                                "CALL",
                                "EMAIL",
                                "FOLLOW_UP"
                              ]
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "PENDING",
                                "COMPLETED",
                                "CANCELLED"
                              ]
                            },
                            "details": {},
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "taskType",
                            "status",
                            "details",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/UpdateOneUser": {
      "post": {
        "operationId": "SmartOfficeUpdateOneUser",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/smartOffice_UserUpdateInput"
                  },
                  "where": {
                    "$ref": "#/components/schemas/smartOffice_UserWhereUniqueInput"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "data",
                  "where"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_updateOneUser": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "password": {
                              "type": "string"
                            },
                            "role": {
                              "type": "string",
                              "enum": [
                                "ADMIN",
                                "AGENT",
                                "SALES_REP"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "username",
                            "password",
                            "role"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/UpsertOneClient": {
      "post": {
        "operationId": "SmartOfficeUpsertOneClient",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/smartOffice_ClientWhereUniqueInput"
                  },
                  "create": {
                    "$ref": "#/components/schemas/smartOffice_ClientCreateInput"
                  },
                  "update": {
                    "$ref": "#/components/schemas/smartOffice_ClientUpdateInput_2"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "where",
                  "create",
                  "update"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_upsertOneClient": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            },
                            "phone": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "name",
                            "email",
                            "phone",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/UpsertOneSale": {
      "post": {
        "operationId": "SmartOfficeUpsertOneSale",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/smartOffice_SaleWhereUniqueInput"
                  },
                  "create": {
                    "$ref": "#/components/schemas/smartOffice_SaleCreateInput"
                  },
                  "update": {
                    "$ref": "#/components/schemas/smartOffice_SaleUpdateInput_2"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "where",
                  "create",
                  "update"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_upsertOneSale": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "saleType": {
                              "type": "string",
                              "enum": [
                                "NEW_POLICY",
                                "RENEWAL",
                                "UPGRADE"
                              ]
                            },
                            "amount": {
                              "type": "number"
                            },
                            "timestamp": {
                              "type": "string"
                            },
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "saleType",
                            "amount",
                            "timestamp",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/UpsertOneTask": {
      "post": {
        "operationId": "SmartOfficeUpsertOneTask",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/smartOffice_TaskWhereUniqueInput"
                  },
                  "create": {
                    "$ref": "#/components/schemas/smartOffice_TaskCreateInput"
                  },
                  "update": {
                    "$ref": "#/components/schemas/smartOffice_TaskUpdateInput_2"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "where",
                  "create",
                  "update"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_upsertOneTask": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "taskType": {
                              "type": "string",
                              "enum": [
                                "MEETING",
                                "CALL",
                                "EMAIL",
                                "FOLLOW_UP"
                              ]
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "PENDING",
                                "COMPLETED",
                                "CANCELLED"
                              ]
                            },
                            "details": {},
                            "userId": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "taskType",
                            "status",
                            "details",
                            "userId"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/smartOffice/UpsertOneUser": {
      "post": {
        "operationId": "SmartOfficeUpsertOneUser",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "where": {
                    "$ref": "#/components/schemas/smartOffice_UserWhereUniqueInput"
                  },
                  "create": {
                    "$ref": "#/components/schemas/smartOffice_UserCreateInput"
                  },
                  "update": {
                    "$ref": "#/components/schemas/smartOffice_UserUpdateInput_2"
                  }
                },
                "additionalProperties": false,
                "required": [
                  "where",
                  "create",
                  "update"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "smartOffice_upsertOneUser": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "username": {
                              "type": "string"
                            },
                            "password": {
                              "type": "string"
                            },
                            "role": {
                              "type": "string",
                              "enum": [
                                "ADMIN",
                                "AGENT",
                                "SALES_REP"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "required": [
                            "id",
                            "username",
                            "password",
                            "role"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/users/CountUsers": {
      "get": {
        "operationId": "UsersCountUsers",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_aggregateUser": {
                          "type": "object",
                          "properties": {
                            "_count": {
                              "type": "object",
                              "properties": {
                                "_all": {
                                  "type": "integer"
                                }
                              },
                              "additionalProperties": false,
                              "required": [
                                "_all"
                              ]
                            },
                            "_min": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "_max": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "customerCommunication_aggregateUser"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/users/GetAllUsers": {
      "get": {
        "operationId": "UsersGetAllUsers",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "customerCommunication_findManyUser": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string"
                              },
                              "emailVerified": {
                                "type": "string"
                              },
                              "image": {
                                "type": "string"
                              },
                              "createdAt": {
                                "type": "string"
                              },
                              "updatedAt": {
                                "type": "string"
                              },
                              "stripeCustomerId": {
                                "type": "string"
                              },
                              "stripeSubscriptionId": {
                                "type": "string"
                              },
                              "stripePriceId": {
                                "type": "string"
                              },
                              "stripeCurrentPeriodEnd": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "id",
                              "createdAt",
                              "updatedAt"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "customerCommunication_findManyUser"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/weather/GetCityById": {
      "get": {
        "operationId": "WeatherGetCityById",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "id",
            "description": "Type: array,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "array",
                "null"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "weather_getCityById": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "coord": {
                                "type": "object",
                                "properties": {
                                  "lat": {
                                    "type": "number"
                                  },
                                  "lon": {
                                    "type": "number"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "country": {
                                "type": "string"
                              },
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "weather": {
                                "type": "object",
                                "properties": {
                                  "clouds": {
                                    "type": "object",
                                    "properties": {
                                      "all": {
                                        "type": "integer"
                                      },
                                      "humidity": {
                                        "type": "integer"
                                      },
                                      "visibility": {
                                        "type": "integer"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "summary": {
                                    "type": "object",
                                    "properties": {
                                      "description": {
                                        "type": "string"
                                      },
                                      "icon": {
                                        "type": "string"
                                      },
                                      "title": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "temperature": {
                                    "type": "object",
                                    "properties": {
                                      "actual": {
                                        "type": "number"
                                      },
                                      "feelsLike": {
                                        "type": "number"
                                      },
                                      "max": {
                                        "type": "number"
                                      },
                                      "min": {
                                        "type": "number"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "timestamp": {
                                    "type": "integer"
                                  },
                                  "wind": {
                                    "type": "object",
                                    "properties": {
                                      "deg": {
                                        "type": "integer"
                                      },
                                      "speed": {
                                        "type": "number"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/weather/GetCityByName": {
      "get": {
        "operationId": "WeatherGetCityByName",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "country",
            "description": "Type: string,null",
            "in": "query",
            "required": false,
            "allowEmptyValue": true,
            "schema": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          {
            "name": "name",
            "description": "Type: string",
            "in": "query",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "weather_getCityByName": {
                          "type": "object",
                          "properties": {
                            "coord": {
                              "type": "object",
                              "properties": {
                                "lat": {
                                  "type": "number"
                                },
                                "lon": {
                                  "type": "number"
                                }
                              },
                              "additionalProperties": false
                            },
                            "country": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "weather": {
                              "type": "object",
                              "properties": {
                                "clouds": {
                                  "type": "object",
                                  "properties": {
                                    "all": {
                                      "type": "integer"
                                    },
                                    "humidity": {
                                      "type": "integer"
                                    },
                                    "visibility": {
                                      "type": "integer"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "summary": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string"
                                    },
                                    "icon": {
                                      "type": "string"
                                    },
                                    "title": {
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "temperature": {
                                  "type": "object",
                                  "properties": {
                                    "actual": {
                                      "type": "number"
                                    },
                                    "feelsLike": {
                                      "type": "number"
                                    },
                                    "max": {
                                      "type": "number"
                                    },
                                    "min": {
                                      "type": "number"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "timestamp": {
                                  "type": "integer"
                                },
                                "wind": {
                                  "type": "object",
                                  "properties": {
                                    "deg": {
                                      "type": "integer"
                                    },
                                    "speed": {
                                      "type": "number"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      }
    },
    "/openai/extract-website-metadata": {
      "get": {
        "operationId": "OpenaiExtract_website_metadata",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "url",
            "description": "Type: string",
            "in": "query",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string"
                    },
                    "h1": {
                      "type": "string"
                    },
                    "summary": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "links": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "description",
                    "h1",
                    "links",
                    "summary",
                    "title"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      },
      "description": "Load metadata like title, description, social media images, headlines, and summary from a website"
    },
    "/openai/load-url": {
      "get": {
        "operationId": "OpenaiLoad_url",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "url",
            "description": "Type: string",
            "in": "query",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "content"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      },
      "description": "Load the content of a url"
    },
    "/openai/summarize-url-content": {
      "get": {
        "operationId": "OpenaiSummarize_url_content",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "url",
            "description": "Type: string",
            "in": "query",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "summary": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "summary"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      },
      "description": "Summarize the content of a URL"
    },
    "/openai/summary": {
      "get": {
        "operationId": "OpenaiSummary",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "url",
            "description": "Type: string",
            "in": "query",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "summary": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "summary"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      },
      "description": "Summarize the content of a URL"
    },
    "/openai/weather": {
      "get": {
        "operationId": "OpenaiWeather",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "country",
            "description": "Type: string",
            "in": "query",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "structuredOutput": {
                      "$ref": "#/components/schemas/8c71da61a2019e240cfce16b6043fb2f1f5ebf5e"
                    },
                    "messages": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ChatCompletionRequestMessage"
                      }
                    }
                  },
                  "required": [
                    "messages",
                    "structuredOutput"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      },
      "description": "This operation returns the weather of the capital of the given country"
    },
    "/users/get": {
      "get": {
        "operationId": "UsersGet",
        "x-wundergraph-operation-type": "query",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "id",
            "description": "Type: string",
            "in": "query",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "default": "Jens"
                    },
                    "bio": {
                      "type": "string",
                      "default": "Founder of WunderGraph"
                    }
                  },
                  "required": [
                    "bio",
                    "id",
                    "name"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      },
      "description": "generated/bundle/operations/users/get"
    },
    "/users/subscribe": {
      "get": {
        "operationId": "UsersSubscribe",
        "x-wundergraph-operation-type": "subscription",
        "x-wundergraph-requires-authentication": false,
        "parameters": [
          {
            "name": "id",
            "description": "Type: string",
            "in": "query",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "default": "Jens"
                    },
                    "bio": {
                      "type": "string",
                      "default": "Founder of WunderGraph"
                    },
                    "time": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "bio",
                    "id",
                    "name",
                    "time"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      },
      "description": "generated/bundle/operations/users/subscribe"
    },
    "/users/update": {
      "post": {
        "operationId": "UsersUpdate",
        "x-wundergraph-operation-type": "mutation",
        "x-wundergraph-requires-authentication": false,
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "bio": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name",
                  "bio"
                ],
                "additionalProperties": false,
                "$schema": "http://json-schema.org/draft-07/schema#"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "bio": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "bio",
                    "id",
                    "name"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidInputError"
                }
              }
            }
          }
        }
      },
      "description": "generated/bundle/operations/users/update"
    }
  },
  "components": {
    "schemas": {
      "InvalidInputError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "input": {},
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "propertyPath": {
                  "type": "string"
                },
                "invalidValue": {},
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "propertyPath",
                "invalidValue",
                "message"
              ]
            }
          }
        },
        "required": [
          "message",
          "input",
          "errors"
        ]
      },
      "clientPortal_ActivityCreateManyInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "activityType": {
            "type": "string",
            "x-graphql-enum-name": "clientPortal_Activity_activityType",
            "enum": [
              "LOGIN",
              "LOGOUT",
              "SERVICE_ACCESS",
              "QUOTE_REQUEST",
              "TRANSACTION"
            ]
          },
          "timestamp": {
            "type": "string"
          },
          "details": {},
          "clientId": {
            "type": "string"
          }
        }
      },
      "clientPortal_ClientCreateManyInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "clientPortal_ServiceCreateManyInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "serviceType": {
            "type": "string",
            "x-graphql-enum-name": "clientPortal_Service_serviceType",
            "enum": [
              "GENERAL_ACCESS",
              "QUOTES",
              "TRANSACTIONS"
            ]
          },
          "content": {},
          "clientId": {
            "type": "string"
          }
        }
      },
      "clientPortal_ActivityCreateInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "activityType": {
            "type": "string",
            "x-graphql-enum-name": "clientPortal_Activity_activityType",
            "enum": [
              "LOGIN",
              "LOGOUT",
              "SERVICE_ACCESS",
              "QUOTE_REQUEST",
              "TRANSACTION"
            ]
          },
          "timestamp": {
            "type": "string"
          },
          "details": {},
          "clientId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "activityType",
          "timestamp",
          "details",
          "clientId"
        ]
      },
      "clientPortal_ClientCreateInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "username",
          "password"
        ]
      },
      "clientPortal_ServiceCreateInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "serviceType": {
            "type": "string",
            "x-graphql-enum-name": "clientPortal_Service_serviceType",
            "enum": [
              "GENERAL_ACCESS",
              "QUOTES",
              "TRANSACTIONS"
            ]
          },
          "content": {},
          "clientId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "serviceType",
          "content",
          "clientId"
        ]
      },
      "clientPortal_ActivityWhereInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/clientPortal_ActivityWhereInput"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/clientPortal_ActivityWhereInput"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/clientPortal_ActivityWhereInput"
          },
          "id": {
            "$ref": "#/components/schemas/clientPortal_StringFilter"
          },
          "activityType": {
            "$ref": "#/components/schemas/clientPortal_EnumActivity_activityTypeFilter"
          },
          "timestamp": {
            "$ref": "#/components/schemas/clientPortal_DateTimeFilter"
          },
          "details": {
            "$ref": "#/components/schemas/clientPortal_JsonFilter"
          },
          "clientId": {
            "$ref": "#/components/schemas/clientPortal_StringFilter"
          }
        }
      },
      "clientPortal_StringFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/clientPortal_NestedStringFilter"
          }
        }
      },
      "clientPortal_NestedStringFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/clientPortal_NestedStringFilter"
          }
        }
      },
      "clientPortal_EnumActivity_activityTypeFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "clientPortal_Activity_activityType",
            "enum": [
              "LOGIN",
              "LOGOUT",
              "SERVICE_ACCESS",
              "QUOTE_REQUEST",
              "TRANSACTION"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ],
              "x-graphql-enum-name": "clientPortal_Activity_activityType",
              "enum": [
                "LOGIN",
                "LOGOUT",
                "SERVICE_ACCESS",
                "QUOTE_REQUEST",
                "TRANSACTION"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ],
              "x-graphql-enum-name": "clientPortal_Activity_activityType",
              "enum": [
                "LOGIN",
                "LOGOUT",
                "SERVICE_ACCESS",
                "QUOTE_REQUEST",
                "TRANSACTION"
              ]
            }
          },
          "not": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "clientPortal_Activity_activityType",
            "enum": [
              "LOGIN",
              "LOGOUT",
              "SERVICE_ACCESS",
              "QUOTE_REQUEST",
              "TRANSACTION"
            ]
          }
        }
      },
      "clientPortal_DateTimeFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/clientPortal_NestedDateTimeFilter"
          }
        }
      },
      "clientPortal_NestedDateTimeFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/clientPortal_NestedDateTimeFilter"
          }
        }
      },
      "clientPortal_JsonFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {},
          "path": {
            "type": [
              "string",
              "null"
            ]
          },
          "string_contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "string_starts_with": {
            "type": [
              "string",
              "null"
            ]
          },
          "string_ends_with": {
            "type": [
              "string",
              "null"
            ]
          },
          "array_contains": {},
          "array_starts_with": {},
          "array_ends_with": {},
          "lt": {},
          "lte": {},
          "gt": {},
          "gte": {},
          "not": {}
        }
      },
      "clientPortal_ClientWhereInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/clientPortal_ClientWhereInput"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/clientPortal_ClientWhereInput"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/clientPortal_ClientWhereInput"
          },
          "id": {
            "$ref": "#/components/schemas/clientPortal_StringFilter"
          },
          "username": {
            "$ref": "#/components/schemas/clientPortal_StringFilter"
          },
          "password": {
            "$ref": "#/components/schemas/clientPortal_StringFilter"
          }
        }
      },
      "clientPortal_StringFilter_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/clientPortal_NestedStringFilter"
          }
        }
      },
      "clientPortal_NestedStringFilter_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/clientPortal_NestedStringFilter_2"
          }
        }
      },
      "clientPortal_ServiceWhereInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/clientPortal_ServiceWhereInput"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/clientPortal_ServiceWhereInput"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/clientPortal_ServiceWhereInput"
          },
          "id": {
            "$ref": "#/components/schemas/clientPortal_StringFilter"
          },
          "serviceType": {
            "$ref": "#/components/schemas/clientPortal_EnumService_serviceTypeFilter"
          },
          "content": {
            "$ref": "#/components/schemas/clientPortal_JsonFilter"
          },
          "clientId": {
            "$ref": "#/components/schemas/clientPortal_StringFilter"
          }
        }
      },
      "clientPortal_StringFilter_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/clientPortal_NestedStringFilter"
          }
        }
      },
      "clientPortal_NestedStringFilter_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/clientPortal_NestedStringFilter_3"
          }
        }
      },
      "clientPortal_EnumService_serviceTypeFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "clientPortal_Service_serviceType",
            "enum": [
              "GENERAL_ACCESS",
              "QUOTES",
              "TRANSACTIONS"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ],
              "x-graphql-enum-name": "clientPortal_Service_serviceType",
              "enum": [
                "GENERAL_ACCESS",
                "QUOTES",
                "TRANSACTIONS"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ],
              "x-graphql-enum-name": "clientPortal_Service_serviceType",
              "enum": [
                "GENERAL_ACCESS",
                "QUOTES",
                "TRANSACTIONS"
              ]
            }
          },
          "not": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "clientPortal_Service_serviceType",
            "enum": [
              "GENERAL_ACCESS",
              "QUOTES",
              "TRANSACTIONS"
            ]
          }
        }
      },
      "clientPortal_ActivityWhereUniqueInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "clientPortal_ClientWhereUniqueInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "clientPortal_ServiceWhereUniqueInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "clientPortal_ActivityUpdateManyMutationInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/clientPortal_StringFieldUpdateOperationsInput"
          },
          "activityType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "clientPortal_Activity_activityType",
            "enum": [
              "LOGIN",
              "LOGOUT",
              "SERVICE_ACCESS",
              "QUOTE_REQUEST",
              "TRANSACTION"
            ]
          },
          "timestamp": {
            "$ref": "#/components/schemas/clientPortal_DateTimeFieldUpdateOperationsInput"
          },
          "details": {},
          "clientId": {
            "$ref": "#/components/schemas/clientPortal_StringFieldUpdateOperationsInput"
          }
        }
      },
      "clientPortal_StringFieldUpdateOperationsInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "set": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "clientPortal_DateTimeFieldUpdateOperationsInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "set": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "clientPortal_ActivityWhereInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/clientPortal_ActivityWhereInput_2"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/clientPortal_ActivityWhereInput_2"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/clientPortal_ActivityWhereInput_2"
          },
          "id": {
            "$ref": "#/components/schemas/clientPortal_StringFilter"
          },
          "activityType": {
            "$ref": "#/components/schemas/clientPortal_EnumActivity_activityTypeFilter"
          },
          "timestamp": {
            "$ref": "#/components/schemas/clientPortal_DateTimeFilter"
          },
          "details": {
            "$ref": "#/components/schemas/clientPortal_JsonFilter"
          },
          "clientId": {
            "$ref": "#/components/schemas/clientPortal_StringFilter"
          }
        }
      },
      "clientPortal_StringFilter_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/clientPortal_NestedStringFilter"
          }
        }
      },
      "clientPortal_NestedStringFilter_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/clientPortal_NestedStringFilter_4"
          }
        }
      },
      "clientPortal_DateTimeFilter_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/clientPortal_NestedDateTimeFilter"
          }
        }
      },
      "clientPortal_NestedDateTimeFilter_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/clientPortal_NestedDateTimeFilter_2"
          }
        }
      },
      "clientPortal_ClientUpdateManyMutationInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/clientPortal_StringFieldUpdateOperationsInput"
          },
          "username": {
            "$ref": "#/components/schemas/clientPortal_StringFieldUpdateOperationsInput"
          },
          "password": {
            "$ref": "#/components/schemas/clientPortal_StringFieldUpdateOperationsInput"
          }
        }
      },
      "clientPortal_ClientWhereInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/clientPortal_ClientWhereInput_2"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/clientPortal_ClientWhereInput_2"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/clientPortal_ClientWhereInput_2"
          },
          "id": {
            "$ref": "#/components/schemas/clientPortal_StringFilter"
          },
          "username": {
            "$ref": "#/components/schemas/clientPortal_StringFilter"
          },
          "password": {
            "$ref": "#/components/schemas/clientPortal_StringFilter"
          }
        }
      },
      "clientPortal_StringFilter_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/clientPortal_NestedStringFilter"
          }
        }
      },
      "clientPortal_NestedStringFilter_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/clientPortal_NestedStringFilter_5"
          }
        }
      },
      "clientPortal_ServiceUpdateManyMutationInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/clientPortal_StringFieldUpdateOperationsInput"
          },
          "serviceType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "clientPortal_Service_serviceType",
            "enum": [
              "GENERAL_ACCESS",
              "QUOTES",
              "TRANSACTIONS"
            ]
          },
          "content": {},
          "clientId": {
            "$ref": "#/components/schemas/clientPortal_StringFieldUpdateOperationsInput"
          }
        }
      },
      "clientPortal_ServiceWhereInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/clientPortal_ServiceWhereInput_2"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/clientPortal_ServiceWhereInput_2"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/clientPortal_ServiceWhereInput_2"
          },
          "id": {
            "$ref": "#/components/schemas/clientPortal_StringFilter"
          },
          "serviceType": {
            "$ref": "#/components/schemas/clientPortal_EnumService_serviceTypeFilter"
          },
          "content": {
            "$ref": "#/components/schemas/clientPortal_JsonFilter"
          },
          "clientId": {
            "$ref": "#/components/schemas/clientPortal_StringFilter"
          }
        }
      },
      "clientPortal_StringFilter_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/clientPortal_NestedStringFilter"
          }
        }
      },
      "clientPortal_NestedStringFilter_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/clientPortal_NestedStringFilter_6"
          }
        }
      },
      "clientPortal_ActivityUpdateInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/clientPortal_StringFieldUpdateOperationsInput"
          },
          "activityType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "clientPortal_Activity_activityType",
            "enum": [
              "LOGIN",
              "LOGOUT",
              "SERVICE_ACCESS",
              "QUOTE_REQUEST",
              "TRANSACTION"
            ]
          },
          "timestamp": {
            "$ref": "#/components/schemas/clientPortal_DateTimeFieldUpdateOperationsInput"
          },
          "details": {},
          "clientId": {
            "$ref": "#/components/schemas/clientPortal_StringFieldUpdateOperationsInput"
          }
        }
      },
      "clientPortal_ClientUpdateInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/clientPortal_StringFieldUpdateOperationsInput"
          },
          "username": {
            "$ref": "#/components/schemas/clientPortal_StringFieldUpdateOperationsInput"
          },
          "password": {
            "$ref": "#/components/schemas/clientPortal_StringFieldUpdateOperationsInput"
          }
        }
      },
      "clientPortal_ServiceUpdateInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/clientPortal_StringFieldUpdateOperationsInput"
          },
          "serviceType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "clientPortal_Service_serviceType",
            "enum": [
              "GENERAL_ACCESS",
              "QUOTES",
              "TRANSACTIONS"
            ]
          },
          "content": {},
          "clientId": {
            "$ref": "#/components/schemas/clientPortal_StringFieldUpdateOperationsInput"
          }
        }
      },
      "clientPortal_ActivityUpdateInput_2": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/clientPortal_StringFieldUpdateOperationsInput"
          },
          "activityType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "clientPortal_Activity_activityType",
            "enum": [
              "LOGIN",
              "LOGOUT",
              "SERVICE_ACCESS",
              "QUOTE_REQUEST",
              "TRANSACTION"
            ]
          },
          "timestamp": {
            "$ref": "#/components/schemas/clientPortal_DateTimeFieldUpdateOperationsInput"
          },
          "details": {},
          "clientId": {
            "$ref": "#/components/schemas/clientPortal_StringFieldUpdateOperationsInput"
          }
        }
      },
      "clientPortal_ClientUpdateInput_2": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/clientPortal_StringFieldUpdateOperationsInput"
          },
          "username": {
            "$ref": "#/components/schemas/clientPortal_StringFieldUpdateOperationsInput"
          },
          "password": {
            "$ref": "#/components/schemas/clientPortal_StringFieldUpdateOperationsInput"
          }
        }
      },
      "clientPortal_ServiceUpdateInput_2": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/clientPortal_StringFieldUpdateOperationsInput"
          },
          "serviceType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "clientPortal_Service_serviceType",
            "enum": [
              "GENERAL_ACCESS",
              "QUOTES",
              "TRANSACTIONS"
            ]
          },
          "content": {},
          "clientId": {
            "$ref": "#/components/schemas/clientPortal_StringFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_AccountCreateManyInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "userId": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "providerAccountId": {
            "type": "string"
          },
          "refresh_token": {
            "type": [
              "string",
              "null"
            ]
          },
          "access_token": {
            "type": [
              "string",
              "null"
            ]
          },
          "expires_at": {
            "type": [
              "integer",
              "null"
            ]
          },
          "token_type": {
            "type": [
              "string",
              "null"
            ]
          },
          "scope": {
            "type": [
              "string",
              "null"
            ]
          },
          "id_token": {
            "type": [
              "string",
              "null"
            ]
          },
          "session_state": {
            "type": [
              "string",
              "null"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "customerCommunication_FilterCreateManyInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "audience": {
            "type": "string",
            "x-graphql-enum-name": "customerCommunication_AudienceType",
            "enum": [
              "CALL_CENTER",
              "CLIENT_PORTAL",
              "GUARDIAN_ONLINE",
              "GPAC",
              "SMART_OFFICE",
              "LIVING_BALANCE_SHEET"
            ]
          },
          "output": {
            "type": "string",
            "x-graphql-enum-name": "customerCommunication_OutputType",
            "enum": [
              "CALLS",
              "CHATS",
              "EMAILS",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIALS",
              "TEXTS"
            ]
          }
        }
      },
      "customerCommunication_InteractionCreateManyInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "interactionType": {
            "type": "string",
            "x-graphql-enum-name": "customerCommunication_InteractionType",
            "enum": [
              "CALL",
              "CHAT",
              "EMAIL",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIAL",
              "TEXT"
            ]
          },
          "content": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "widgetId": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "customerCommunication_SessionCreateManyInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "sessionToken": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "expires": {
            "type": "string"
          }
        }
      },
      "customerCommunication_UserCreateManyInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "name": {
            "type": [
              "string",
              "null"
            ]
          },
          "email": {
            "type": [
              "string",
              "null"
            ]
          },
          "emailVerified": {
            "type": [
              "string",
              "null"
            ]
          },
          "image": {
            "type": [
              "string",
              "null"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ]
          },
          "userType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_UserType",
            "enum": [
              "CALL_CENTER_REP",
              "CUSTOMER",
              "FINANCIAL_REP"
            ]
          },
          "stripeCustomerId": {
            "type": [
              "string",
              "null"
            ]
          },
          "stripeSubscriptionId": {
            "type": [
              "string",
              "null"
            ]
          },
          "stripePriceId": {
            "type": [
              "string",
              "null"
            ]
          },
          "stripeCurrentPeriodEnd": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "customerCommunication_VerificationTokenCreateManyInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "identifier": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "expires": {
            "type": "string"
          }
        }
      },
      "customerCommunication_WidgetCreateManyInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "embeddedIn": {
            "type": "string"
          }
        }
      },
      "customerCommunication_AccountCreateInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "type": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "providerAccountId": {
            "type": "string"
          },
          "refresh_token": {
            "type": [
              "string",
              "null"
            ]
          },
          "access_token": {
            "type": [
              "string",
              "null"
            ]
          },
          "expires_at": {
            "type": [
              "integer",
              "null"
            ]
          },
          "token_type": {
            "type": [
              "string",
              "null"
            ]
          },
          "scope": {
            "type": [
              "string",
              "null"
            ]
          },
          "id_token": {
            "type": [
              "string",
              "null"
            ]
          },
          "session_state": {
            "type": [
              "string",
              "null"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateNestedOneWithoutAccountsInput"
          }
        },
        "required": [
          "type",
          "provider",
          "providerAccountId",
          "user"
        ]
      },
      "customerCommunication_UserCreateNestedOneWithoutAccountsInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateWithoutAccountsInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateOrConnectWithoutAccountsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereUniqueInput"
          }
        }
      },
      "customerCommunication_UserCreateWithoutAccountsInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "name": {
            "type": [
              "string",
              "null"
            ]
          },
          "email": {
            "type": [
              "string",
              "null"
            ]
          },
          "emailVerified": {
            "type": [
              "string",
              "null"
            ]
          },
          "image": {
            "type": [
              "string",
              "null"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ]
          },
          "userType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_UserType",
            "enum": [
              "CALL_CENTER_REP",
              "CUSTOMER",
              "FINANCIAL_REP"
            ]
          },
          "stripeCustomerId": {
            "type": [
              "string",
              "null"
            ]
          },
          "stripeSubscriptionId": {
            "type": [
              "string",
              "null"
            ]
          },
          "stripePriceId": {
            "type": [
              "string",
              "null"
            ]
          },
          "stripeCurrentPeriodEnd": {
            "type": [
              "string",
              "null"
            ]
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateNestedManyWithoutUserInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateNestedManyWithoutUserInput"
          }
        }
      },
      "customerCommunication_InteractionCreateNestedManyWithoutUserInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateWithoutUserInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateOrConnectWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateManyUserInputEnvelope"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          }
        }
      },
      "customerCommunication_InteractionCreateWithoutUserInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "interactionType": {
            "type": "string",
            "x-graphql-enum-name": "customerCommunication_InteractionType",
            "enum": [
              "CALL",
              "CHAT",
              "EMAIL",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIAL",
              "TEXT"
            ]
          },
          "content": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateNestedOneWithoutInteractionsInput"
          }
        }
      },
      "customerCommunication_WidgetCreateNestedOneWithoutInteractionsInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateWithoutInteractionsInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereUniqueInput"
          }
        }
      },
      "customerCommunication_WidgetCreateWithoutInteractionsInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "embeddedIn": {
            "type": "string"
          }
        }
      },
      "customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateWithoutInteractionsInput"
          }
        }
      },
      "customerCommunication_WidgetWhereUniqueInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "customerCommunication_InteractionCreateOrConnectWithoutUserInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateWithoutUserInput"
          }
        }
      },
      "customerCommunication_InteractionWhereUniqueInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "customerCommunication_InteractionCreateManyUserInputEnvelope": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateManyUserInput"
          },
          "skipDuplicates": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      "customerCommunication_InteractionCreateManyUserInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "interactionType": {
            "type": "string",
            "x-graphql-enum-name": "customerCommunication_InteractionType",
            "enum": [
              "CALL",
              "CHAT",
              "EMAIL",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIAL",
              "TEXT"
            ]
          },
          "content": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "widgetId": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "required": [
          "interactionType",
          "content",
          "timestamp"
        ]
      },
      "customerCommunication_SessionCreateNestedManyWithoutUserInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateWithoutUserInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateOrConnectWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateManyUserInputEnvelope"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          }
        }
      },
      "customerCommunication_SessionCreateWithoutUserInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "sessionToken": {
            "type": "string"
          },
          "expires": {
            "type": "string"
          }
        }
      },
      "customerCommunication_SessionCreateOrConnectWithoutUserInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateWithoutUserInput"
          }
        }
      },
      "customerCommunication_SessionWhereUniqueInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "sessionToken": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "customerCommunication_SessionCreateManyUserInputEnvelope": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateManyUserInput"
          },
          "skipDuplicates": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      "customerCommunication_SessionCreateManyUserInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "sessionToken": {
            "type": "string"
          },
          "expires": {
            "type": "string"
          }
        },
        "required": [
          "sessionToken",
          "expires"
        ]
      },
      "customerCommunication_UserCreateOrConnectWithoutAccountsInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateWithoutAccountsInput"
          }
        }
      },
      "customerCommunication_UserWhereUniqueInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "email": {
            "type": [
              "string",
              "null"
            ]
          },
          "stripeCustomerId": {
            "type": [
              "string",
              "null"
            ]
          },
          "stripeSubscriptionId": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "customerCommunication_InteractionWhereInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "interactionType": {
            "$ref": "#/components/schemas/customerCommunication_EnumInteractionTypeFilter"
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "widgetId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetRelationFilter"
          }
        }
      },
      "customerCommunication_StringFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter"
          }
        }
      },
      "customerCommunication_NestedStringFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter"
          }
        }
      },
      "customerCommunication_EnumInteractionTypeFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_InteractionType",
            "enum": [
              "CALL",
              "CHAT",
              "EMAIL",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIAL",
              "TEXT"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ],
              "x-graphql-enum-name": "customerCommunication_InteractionType",
              "enum": [
                "CALL",
                "CHAT",
                "EMAIL",
                "WEB_USAGE",
                "IVR_HUGO_USAGE",
                "OUTBOUND_CORRESPONDENCE",
                "MARKETING_MATERIAL",
                "TEXT"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ],
              "x-graphql-enum-name": "customerCommunication_InteractionType",
              "enum": [
                "CALL",
                "CHAT",
                "EMAIL",
                "WEB_USAGE",
                "IVR_HUGO_USAGE",
                "OUTBOUND_CORRESPONDENCE",
                "MARKETING_MATERIAL",
                "TEXT"
              ]
            }
          },
          "not": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_InteractionType",
            "enum": [
              "CALL",
              "CHAT",
              "EMAIL",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIAL",
              "TEXT"
            ]
          }
        }
      },
      "customerCommunication_DateTimeFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter"
          }
        }
      },
      "customerCommunication_StringNullableFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter"
          }
        }
      },
      "customerCommunication_NestedStringNullableFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter"
          }
        }
      },
      "customerCommunication_UserRelationFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          }
        }
      },
      "customerCommunication_UserWhereInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "name": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "email": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "emailVerified": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "image": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter"
          },
          "userType": {
            "$ref": "#/components/schemas/customerCommunication_EnumUserTypeNullableFilter"
          },
          "stripeCustomerId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "stripeSubscriptionId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "stripePriceId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "stripeCurrentPeriodEnd": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountListRelationFilter"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionListRelationFilter"
          }
        }
      },
      "customerCommunication_DateTimeNullableFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeNullableFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter"
          }
        }
      },
      "customerCommunication_EnumUserTypeNullableFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_UserType",
            "enum": [
              "CALL_CENTER_REP",
              "CUSTOMER",
              "FINANCIAL_REP"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ],
              "x-graphql-enum-name": "customerCommunication_UserType",
              "enum": [
                "CALL_CENTER_REP",
                "CUSTOMER",
                "FINANCIAL_REP"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ],
              "x-graphql-enum-name": "customerCommunication_UserType",
              "enum": [
                "CALL_CENTER_REP",
                "CUSTOMER",
                "FINANCIAL_REP"
              ]
            }
          },
          "not": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_UserType",
            "enum": [
              "CALL_CENTER_REP",
              "CUSTOMER",
              "FINANCIAL_REP"
            ]
          }
        }
      },
      "customerCommunication_InteractionListRelationFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput"
          }
        }
      },
      "customerCommunication_AccountListRelationFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          }
        }
      },
      "customerCommunication_AccountWhereInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_IntNullableFilter"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter"
          }
        }
      },
      "customerCommunication_IntNullableFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter"
          }
        }
      },
      "customerCommunication_NestedIntNullableFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter"
          }
        }
      },
      "customerCommunication_SessionListRelationFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          }
        }
      },
      "customerCommunication_SessionWhereInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter"
          }
        }
      },
      "customerCommunication_WidgetRelationFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          }
        }
      },
      "customerCommunication_WidgetWhereInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "embeddedIn": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter"
          }
        }
      },
      "customerCommunication_InteractionOrderByWithRelationInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactionType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "content": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "timestamp": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "widgetId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserOrderByWithRelationInput"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetOrderByWithRelationInput"
          }
        }
      },
      "customerCommunication_UserOrderByWithRelationInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "name": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "email": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "emailVerified": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "image": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeCustomerId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeSubscriptionId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripePriceId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeCurrentPeriodEnd": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionOrderByRelationAggregateInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountOrderByRelationAggregateInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionOrderByRelationAggregateInput"
          }
        }
      },
      "customerCommunication_InteractionOrderByRelationAggregateInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "_count": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          }
        }
      },
      "customerCommunication_AccountOrderByRelationAggregateInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "_count": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          }
        }
      },
      "customerCommunication_SessionOrderByRelationAggregateInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "_count": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          }
        }
      },
      "customerCommunication_WidgetOrderByWithRelationInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "embeddedIn": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionOrderByRelationAggregateInput"
          }
        }
      },
      "customerCommunication_SessionOrderByWithRelationInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "sessionToken": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "expires": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserOrderByWithRelationInput"
          }
        }
      },
      "customerCommunication_FilterCreateInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "audience": {
            "type": "string",
            "x-graphql-enum-name": "customerCommunication_AudienceType",
            "enum": [
              "CALL_CENTER",
              "CLIENT_PORTAL",
              "GUARDIAN_ONLINE",
              "GPAC",
              "SMART_OFFICE",
              "LIVING_BALANCE_SHEET"
            ]
          },
          "output": {
            "type": "string",
            "x-graphql-enum-name": "customerCommunication_OutputType",
            "enum": [
              "CALLS",
              "CHATS",
              "EMAILS",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIALS",
              "TEXTS"
            ]
          }
        },
        "required": [
          "audience",
          "output"
        ]
      },
      "customerCommunication_InteractionCreateInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "interactionType": {
            "type": "string",
            "x-graphql-enum-name": "customerCommunication_InteractionType",
            "enum": [
              "CALL",
              "CHAT",
              "EMAIL",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIAL",
              "TEXT"
            ]
          },
          "content": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateNestedOneWithoutInteractionsInput"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateNestedOneWithoutInteractionsInput"
          }
        },
        "required": [
          "interactionType",
          "content",
          "timestamp",
          "user"
        ]
      },
      "customerCommunication_UserCreateNestedOneWithoutInteractionsInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateWithoutInteractionsInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateOrConnectWithoutInteractionsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereUniqueInput"
          }
        }
      },
      "customerCommunication_UserCreateWithoutInteractionsInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "name": {
            "type": [
              "string",
              "null"
            ]
          },
          "email": {
            "type": [
              "string",
              "null"
            ]
          },
          "emailVerified": {
            "type": [
              "string",
              "null"
            ]
          },
          "image": {
            "type": [
              "string",
              "null"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ]
          },
          "userType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_UserType",
            "enum": [
              "CALL_CENTER_REP",
              "CUSTOMER",
              "FINANCIAL_REP"
            ]
          },
          "stripeCustomerId": {
            "type": [
              "string",
              "null"
            ]
          },
          "stripeSubscriptionId": {
            "type": [
              "string",
              "null"
            ]
          },
          "stripePriceId": {
            "type": [
              "string",
              "null"
            ]
          },
          "stripeCurrentPeriodEnd": {
            "type": [
              "string",
              "null"
            ]
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateNestedManyWithoutUserInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateNestedManyWithoutUserInput"
          }
        }
      },
      "customerCommunication_AccountCreateNestedManyWithoutUserInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateWithoutUserInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateOrConnectWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateManyUserInputEnvelope"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput"
          }
        }
      },
      "customerCommunication_AccountCreateWithoutUserInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "type": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "providerAccountId": {
            "type": "string"
          },
          "refresh_token": {
            "type": [
              "string",
              "null"
            ]
          },
          "access_token": {
            "type": [
              "string",
              "null"
            ]
          },
          "expires_at": {
            "type": [
              "integer",
              "null"
            ]
          },
          "token_type": {
            "type": [
              "string",
              "null"
            ]
          },
          "scope": {
            "type": [
              "string",
              "null"
            ]
          },
          "id_token": {
            "type": [
              "string",
              "null"
            ]
          },
          "session_state": {
            "type": [
              "string",
              "null"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "customerCommunication_AccountCreateOrConnectWithoutUserInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateWithoutUserInput"
          }
        }
      },
      "customerCommunication_AccountWhereUniqueInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "provider_providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput"
          }
        }
      },
      "customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "provider": {
            "type": "string"
          },
          "providerAccountId": {
            "type": "string"
          }
        }
      },
      "customerCommunication_AccountCreateManyUserInputEnvelope": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateManyUserInput"
          },
          "skipDuplicates": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      "customerCommunication_AccountCreateManyUserInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "type": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "providerAccountId": {
            "type": "string"
          },
          "refresh_token": {
            "type": [
              "string",
              "null"
            ]
          },
          "access_token": {
            "type": [
              "string",
              "null"
            ]
          },
          "expires_at": {
            "type": [
              "integer",
              "null"
            ]
          },
          "token_type": {
            "type": [
              "string",
              "null"
            ]
          },
          "scope": {
            "type": [
              "string",
              "null"
            ]
          },
          "id_token": {
            "type": [
              "string",
              "null"
            ]
          },
          "session_state": {
            "type": [
              "string",
              "null"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "required": [
          "type",
          "provider",
          "providerAccountId"
        ]
      },
      "customerCommunication_SessionCreateNestedManyWithoutUserInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateWithoutUserInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateOrConnectWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateManyUserInputEnvelope"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          }
        }
      },
      "customerCommunication_SessionCreateOrConnectWithoutUserInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateWithoutUserInput"
          }
        }
      },
      "customerCommunication_SessionCreateManyUserInputEnvelope_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateManyUserInput"
          },
          "skipDuplicates": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      "customerCommunication_UserCreateOrConnectWithoutInteractionsInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateWithoutInteractionsInput"
          }
        }
      },
      "customerCommunication_WidgetCreateNestedOneWithoutInteractionsInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateWithoutInteractionsInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereUniqueInput"
          }
        }
      },
      "customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateWithoutInteractionsInput"
          }
        }
      },
      "customerCommunication_AccountWhereInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_2"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_2"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_2"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_IntNullableFilter"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter"
          }
        }
      },
      "customerCommunication_StringFilter_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter"
          }
        }
      },
      "customerCommunication_NestedStringFilter_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter_2"
          }
        }
      },
      "customerCommunication_StringNullableFilter_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter"
          }
        }
      },
      "customerCommunication_NestedStringNullableFilter_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter_2"
          }
        }
      },
      "customerCommunication_IntNullableFilter_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter"
          }
        }
      },
      "customerCommunication_NestedIntNullableFilter_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter_2"
          }
        }
      },
      "customerCommunication_DateTimeFilter_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeFilter_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter_2"
          }
        }
      },
      "customerCommunication_UserRelationFilter_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          }
        }
      },
      "customerCommunication_UserWhereInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_2"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_UserWhereInput_2"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_2"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_2"
          },
          "name": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_2"
          },
          "email": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_2"
          },
          "emailVerified": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "image": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_2"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_2"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_2"
          },
          "userType": {
            "$ref": "#/components/schemas/customerCommunication_EnumUserTypeNullableFilter"
          },
          "stripeCustomerId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_2"
          },
          "stripeSubscriptionId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_2"
          },
          "stripePriceId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_2"
          },
          "stripeCurrentPeriodEnd": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountListRelationFilter"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionListRelationFilter"
          }
        }
      },
      "customerCommunication_DateTimeNullableFilter_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeNullableFilter_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter_2"
          }
        }
      },
      "customerCommunication_InteractionListRelationFilter_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput"
          }
        }
      },
      "customerCommunication_InteractionWhereInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_2"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_2"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_2"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_2"
          },
          "interactionType": {
            "$ref": "#/components/schemas/customerCommunication_EnumInteractionTypeFilter"
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_2"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_2"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_2"
          },
          "widgetId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_2"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_2"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetRelationFilter"
          }
        }
      },
      "customerCommunication_WidgetRelationFilter_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          }
        }
      },
      "customerCommunication_WidgetWhereInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_2"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_2"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_2"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_2"
          },
          "embeddedIn": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_2"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter_2"
          }
        }
      },
      "customerCommunication_AccountListRelationFilter_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_2"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_2"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_2"
          }
        }
      },
      "customerCommunication_SessionListRelationFilter_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          }
        }
      },
      "customerCommunication_SessionWhereInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_2"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_2"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_2"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_2"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_2"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_2"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_2"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_2"
          }
        }
      },
      "customerCommunication_AccountOrderByWithRelationInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "type": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "provider": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "providerAccountId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "refresh_token": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "access_token": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "expires_at": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "token_type": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "scope": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "id_token": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "session_state": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserOrderByWithRelationInput"
          }
        }
      },
      "customerCommunication_UserOrderByWithRelationInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "name": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "email": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "emailVerified": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "image": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeCustomerId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeSubscriptionId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripePriceId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeCurrentPeriodEnd": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionOrderByRelationAggregateInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountOrderByRelationAggregateInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionOrderByRelationAggregateInput"
          }
        }
      },
      "customerCommunication_SessionOrderByWithRelationInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "sessionToken": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "expires": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserOrderByWithRelationInput_2"
          }
        }
      },
      "customerCommunication_SessionCreateInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "sessionToken": {
            "type": "string"
          },
          "expires": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateNestedOneWithoutSessionsInput"
          }
        },
        "required": [
          "sessionToken",
          "expires",
          "user"
        ]
      },
      "customerCommunication_UserCreateNestedOneWithoutSessionsInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateWithoutSessionsInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateOrConnectWithoutSessionsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereUniqueInput"
          }
        }
      },
      "customerCommunication_UserCreateWithoutSessionsInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "name": {
            "type": [
              "string",
              "null"
            ]
          },
          "email": {
            "type": [
              "string",
              "null"
            ]
          },
          "emailVerified": {
            "type": [
              "string",
              "null"
            ]
          },
          "image": {
            "type": [
              "string",
              "null"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ]
          },
          "userType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_UserType",
            "enum": [
              "CALL_CENTER_REP",
              "CUSTOMER",
              "FINANCIAL_REP"
            ]
          },
          "stripeCustomerId": {
            "type": [
              "string",
              "null"
            ]
          },
          "stripeSubscriptionId": {
            "type": [
              "string",
              "null"
            ]
          },
          "stripePriceId": {
            "type": [
              "string",
              "null"
            ]
          },
          "stripeCurrentPeriodEnd": {
            "type": [
              "string",
              "null"
            ]
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateNestedManyWithoutUserInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateNestedManyWithoutUserInput"
          }
        }
      },
      "customerCommunication_InteractionCreateNestedManyWithoutUserInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateWithoutUserInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateOrConnectWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateManyUserInputEnvelope"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          }
        }
      },
      "customerCommunication_InteractionCreateWithoutUserInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "interactionType": {
            "type": "string",
            "x-graphql-enum-name": "customerCommunication_InteractionType",
            "enum": [
              "CALL",
              "CHAT",
              "EMAIL",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIAL",
              "TEXT"
            ]
          },
          "content": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateNestedOneWithoutInteractionsInput"
          }
        }
      },
      "customerCommunication_WidgetCreateNestedOneWithoutInteractionsInput_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateWithoutInteractionsInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereUniqueInput"
          }
        }
      },
      "customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateWithoutInteractionsInput"
          }
        }
      },
      "customerCommunication_InteractionCreateOrConnectWithoutUserInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateWithoutUserInput_2"
          }
        }
      },
      "customerCommunication_InteractionCreateManyUserInputEnvelope_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateManyUserInput"
          },
          "skipDuplicates": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      "customerCommunication_AccountCreateNestedManyWithoutUserInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateWithoutUserInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateOrConnectWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateManyUserInputEnvelope"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput"
          }
        }
      },
      "customerCommunication_AccountCreateOrConnectWithoutUserInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateWithoutUserInput"
          }
        }
      },
      "customerCommunication_AccountWhereUniqueInput_2": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "provider_providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput"
          }
        }
      },
      "customerCommunication_AccountCreateManyUserInputEnvelope_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateManyUserInput"
          },
          "skipDuplicates": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      "customerCommunication_UserCreateOrConnectWithoutSessionsInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateWithoutSessionsInput"
          }
        }
      },
      "customerCommunication_InteractionWhereInput_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_3"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_3"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_3"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "interactionType": {
            "$ref": "#/components/schemas/customerCommunication_EnumInteractionTypeFilter"
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "widgetId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetRelationFilter"
          }
        }
      },
      "customerCommunication_StringFilter_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter"
          }
        }
      },
      "customerCommunication_NestedStringFilter_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter_3"
          }
        }
      },
      "customerCommunication_DateTimeFilter_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeFilter_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter_3"
          }
        }
      },
      "customerCommunication_StringNullableFilter_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter"
          }
        }
      },
      "customerCommunication_NestedStringNullableFilter_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter_3"
          }
        }
      },
      "customerCommunication_UserRelationFilter_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          }
        }
      },
      "customerCommunication_UserWhereInput_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_3"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_UserWhereInput_3"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_3"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_3"
          },
          "name": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_3"
          },
          "email": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_3"
          },
          "emailVerified": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "image": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_3"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_3"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_3"
          },
          "userType": {
            "$ref": "#/components/schemas/customerCommunication_EnumUserTypeNullableFilter"
          },
          "stripeCustomerId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_3"
          },
          "stripeSubscriptionId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_3"
          },
          "stripePriceId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_3"
          },
          "stripeCurrentPeriodEnd": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountListRelationFilter"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionListRelationFilter"
          }
        }
      },
      "customerCommunication_DateTimeNullableFilter_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeNullableFilter_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter_3"
          }
        }
      },
      "customerCommunication_InteractionListRelationFilter_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_3"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_3"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_3"
          }
        }
      },
      "customerCommunication_AccountListRelationFilter_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          }
        }
      },
      "customerCommunication_AccountWhereInput_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_3"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_3"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_3"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_3"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_3"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_3"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_3"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_3"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_3"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_3"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_IntNullableFilter"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_3"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_3"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_3"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_3"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_3"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_3"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_3"
          }
        }
      },
      "customerCommunication_IntNullableFilter_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter"
          }
        }
      },
      "customerCommunication_NestedIntNullableFilter_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter_3"
          }
        }
      },
      "customerCommunication_SessionListRelationFilter_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          }
        }
      },
      "customerCommunication_SessionWhereInput_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_3"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_3"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_3"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_3"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_3"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_3"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_3"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_3"
          }
        }
      },
      "customerCommunication_WidgetRelationFilter_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          }
        }
      },
      "customerCommunication_WidgetWhereInput_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_3"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_3"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_3"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_3"
          },
          "embeddedIn": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_3"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter_3"
          }
        }
      },
      "customerCommunication_InteractionOrderByWithRelationInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactionType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "content": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "timestamp": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "widgetId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserOrderByWithRelationInput"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetOrderByWithRelationInput"
          }
        }
      },
      "customerCommunication_UserOrderByWithRelationInput_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "name": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "email": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "emailVerified": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "image": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeCustomerId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeSubscriptionId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripePriceId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeCurrentPeriodEnd": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionOrderByRelationAggregateInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountOrderByRelationAggregateInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionOrderByRelationAggregateInput"
          }
        }
      },
      "customerCommunication_WidgetOrderByWithRelationInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "embeddedIn": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionOrderByRelationAggregateInput"
          }
        }
      },
      "customerCommunication_AccountOrderByWithRelationInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "type": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "provider": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "providerAccountId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "refresh_token": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "access_token": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "expires_at": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "token_type": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "scope": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "id_token": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "session_state": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserOrderByWithRelationInput_3"
          }
        }
      },
      "customerCommunication_UserCreateInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "name": {
            "type": [
              "string",
              "null"
            ]
          },
          "email": {
            "type": [
              "string",
              "null"
            ]
          },
          "emailVerified": {
            "type": [
              "string",
              "null"
            ]
          },
          "image": {
            "type": [
              "string",
              "null"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ]
          },
          "userType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_UserType",
            "enum": [
              "CALL_CENTER_REP",
              "CUSTOMER",
              "FINANCIAL_REP"
            ]
          },
          "stripeCustomerId": {
            "type": [
              "string",
              "null"
            ]
          },
          "stripeSubscriptionId": {
            "type": [
              "string",
              "null"
            ]
          },
          "stripePriceId": {
            "type": [
              "string",
              "null"
            ]
          },
          "stripeCurrentPeriodEnd": {
            "type": [
              "string",
              "null"
            ]
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateNestedManyWithoutUserInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateNestedManyWithoutUserInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateNestedManyWithoutUserInput"
          }
        }
      },
      "customerCommunication_InteractionCreateNestedManyWithoutUserInput_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateWithoutUserInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateOrConnectWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateManyUserInputEnvelope"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          }
        }
      },
      "customerCommunication_InteractionCreateWithoutUserInput_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "interactionType": {
            "type": "string",
            "x-graphql-enum-name": "customerCommunication_InteractionType",
            "enum": [
              "CALL",
              "CHAT",
              "EMAIL",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIAL",
              "TEXT"
            ]
          },
          "content": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateNestedOneWithoutInteractionsInput"
          }
        }
      },
      "customerCommunication_WidgetCreateNestedOneWithoutInteractionsInput_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateWithoutInteractionsInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereUniqueInput"
          }
        }
      },
      "customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateWithoutInteractionsInput"
          }
        }
      },
      "customerCommunication_InteractionCreateOrConnectWithoutUserInput_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateWithoutUserInput_3"
          }
        }
      },
      "customerCommunication_InteractionCreateManyUserInputEnvelope_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateManyUserInput"
          },
          "skipDuplicates": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      "customerCommunication_AccountCreateNestedManyWithoutUserInput_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateWithoutUserInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateOrConnectWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateManyUserInputEnvelope"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput"
          }
        }
      },
      "customerCommunication_AccountCreateOrConnectWithoutUserInput_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateWithoutUserInput"
          }
        }
      },
      "customerCommunication_AccountWhereUniqueInput_3": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "provider_providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput"
          }
        }
      },
      "customerCommunication_AccountCreateManyUserInputEnvelope_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateManyUserInput"
          },
          "skipDuplicates": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      "customerCommunication_SessionCreateNestedManyWithoutUserInput_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateWithoutUserInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateOrConnectWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateManyUserInputEnvelope"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          }
        }
      },
      "customerCommunication_SessionCreateOrConnectWithoutUserInput_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateWithoutUserInput"
          }
        }
      },
      "customerCommunication_SessionCreateManyUserInputEnvelope_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateManyUserInput"
          },
          "skipDuplicates": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      "customerCommunication_InteractionWhereInput_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_4"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_4"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_4"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "interactionType": {
            "$ref": "#/components/schemas/customerCommunication_EnumInteractionTypeFilter"
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "widgetId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetRelationFilter"
          }
        }
      },
      "customerCommunication_StringFilter_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter"
          }
        }
      },
      "customerCommunication_NestedStringFilter_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter_4"
          }
        }
      },
      "customerCommunication_DateTimeFilter_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeFilter_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter_4"
          }
        }
      },
      "customerCommunication_StringNullableFilter_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter"
          }
        }
      },
      "customerCommunication_NestedStringNullableFilter_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter_4"
          }
        }
      },
      "customerCommunication_UserRelationFilter_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          }
        }
      },
      "customerCommunication_UserWhereInput_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_4"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_UserWhereInput_4"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_4"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_4"
          },
          "name": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_4"
          },
          "email": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_4"
          },
          "emailVerified": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "image": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_4"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_4"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_4"
          },
          "userType": {
            "$ref": "#/components/schemas/customerCommunication_EnumUserTypeNullableFilter"
          },
          "stripeCustomerId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_4"
          },
          "stripeSubscriptionId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_4"
          },
          "stripePriceId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_4"
          },
          "stripeCurrentPeriodEnd": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountListRelationFilter"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionListRelationFilter"
          }
        }
      },
      "customerCommunication_DateTimeNullableFilter_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeNullableFilter_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter_4"
          }
        }
      },
      "customerCommunication_InteractionListRelationFilter_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_4"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_4"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_4"
          }
        }
      },
      "customerCommunication_AccountListRelationFilter_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          }
        }
      },
      "customerCommunication_AccountWhereInput_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_4"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_4"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_4"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_4"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_4"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_4"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_4"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_4"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_4"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_4"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_IntNullableFilter"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_4"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_4"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_4"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_4"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_4"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_4"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_4"
          }
        }
      },
      "customerCommunication_IntNullableFilter_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter"
          }
        }
      },
      "customerCommunication_NestedIntNullableFilter_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter_4"
          }
        }
      },
      "customerCommunication_SessionListRelationFilter_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          }
        }
      },
      "customerCommunication_SessionWhereInput_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_4"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_4"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_4"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_4"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_4"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_4"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_4"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_4"
          }
        }
      },
      "customerCommunication_WidgetRelationFilter_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          }
        }
      },
      "customerCommunication_WidgetWhereInput_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_4"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_4"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_4"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_4"
          },
          "embeddedIn": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_4"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter_4"
          }
        }
      },
      "customerCommunication_InteractionOrderByWithRelationInput_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactionType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "content": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "timestamp": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "widgetId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserOrderByWithRelationInput"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetOrderByWithRelationInput"
          }
        }
      },
      "customerCommunication_UserOrderByWithRelationInput_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "name": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "email": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "emailVerified": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "image": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeCustomerId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeSubscriptionId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripePriceId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeCurrentPeriodEnd": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionOrderByRelationAggregateInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountOrderByRelationAggregateInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionOrderByRelationAggregateInput"
          }
        }
      },
      "customerCommunication_WidgetOrderByWithRelationInput_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "embeddedIn": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionOrderByRelationAggregateInput"
          }
        }
      },
      "customerCommunication_AccountOrderByWithRelationInput_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "type": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "provider": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "providerAccountId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "refresh_token": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "access_token": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "expires_at": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "token_type": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "scope": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "id_token": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "session_state": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserOrderByWithRelationInput_4"
          }
        }
      },
      "customerCommunication_SessionOrderByWithRelationInput_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "sessionToken": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "expires": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserOrderByWithRelationInput_4"
          }
        }
      },
      "customerCommunication_VerificationTokenCreateInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "expires": {
            "type": "string"
          }
        },
        "required": [
          "identifier",
          "token",
          "expires"
        ]
      },
      "customerCommunication_WidgetCreateInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "embeddedIn": {
            "type": "string"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateNestedManyWithoutWidgetInput"
          }
        },
        "required": [
          "embeddedIn"
        ]
      },
      "customerCommunication_InteractionCreateNestedManyWithoutWidgetInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateWithoutWidgetInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateOrConnectWithoutWidgetInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateManyWidgetInputEnvelope"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          }
        }
      },
      "customerCommunication_InteractionCreateWithoutWidgetInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "interactionType": {
            "type": "string",
            "x-graphql-enum-name": "customerCommunication_InteractionType",
            "enum": [
              "CALL",
              "CHAT",
              "EMAIL",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIAL",
              "TEXT"
            ]
          },
          "content": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateNestedOneWithoutInteractionsInput"
          }
        }
      },
      "customerCommunication_UserCreateNestedOneWithoutInteractionsInput_2": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateWithoutInteractionsInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateOrConnectWithoutInteractionsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereUniqueInput"
          }
        }
      },
      "customerCommunication_UserCreateWithoutInteractionsInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "name": {
            "type": [
              "string",
              "null"
            ]
          },
          "email": {
            "type": [
              "string",
              "null"
            ]
          },
          "emailVerified": {
            "type": [
              "string",
              "null"
            ]
          },
          "image": {
            "type": [
              "string",
              "null"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ]
          },
          "userType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_UserType",
            "enum": [
              "CALL_CENTER_REP",
              "CUSTOMER",
              "FINANCIAL_REP"
            ]
          },
          "stripeCustomerId": {
            "type": [
              "string",
              "null"
            ]
          },
          "stripeSubscriptionId": {
            "type": [
              "string",
              "null"
            ]
          },
          "stripePriceId": {
            "type": [
              "string",
              "null"
            ]
          },
          "stripeCurrentPeriodEnd": {
            "type": [
              "string",
              "null"
            ]
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateNestedManyWithoutUserInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateNestedManyWithoutUserInput"
          }
        }
      },
      "customerCommunication_AccountCreateNestedManyWithoutUserInput_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateWithoutUserInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateOrConnectWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateManyUserInputEnvelope"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput"
          }
        }
      },
      "customerCommunication_AccountCreateOrConnectWithoutUserInput_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateWithoutUserInput"
          }
        }
      },
      "customerCommunication_AccountWhereUniqueInput_4": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "provider_providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput"
          }
        }
      },
      "customerCommunication_AccountCreateManyUserInputEnvelope_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateManyUserInput"
          },
          "skipDuplicates": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      "customerCommunication_SessionCreateNestedManyWithoutUserInput_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateWithoutUserInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateOrConnectWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateManyUserInputEnvelope"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          }
        }
      },
      "customerCommunication_SessionCreateOrConnectWithoutUserInput_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateWithoutUserInput"
          }
        }
      },
      "customerCommunication_SessionCreateManyUserInputEnvelope_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateManyUserInput"
          },
          "skipDuplicates": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      "customerCommunication_UserCreateOrConnectWithoutInteractionsInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateWithoutInteractionsInput_2"
          }
        }
      },
      "customerCommunication_InteractionCreateOrConnectWithoutWidgetInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateWithoutWidgetInput"
          }
        }
      },
      "customerCommunication_InteractionCreateManyWidgetInputEnvelope": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateManyWidgetInput"
          },
          "skipDuplicates": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      "customerCommunication_InteractionCreateManyWidgetInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "interactionType": {
            "type": "string",
            "x-graphql-enum-name": "customerCommunication_InteractionType",
            "enum": [
              "CALL",
              "CHAT",
              "EMAIL",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIAL",
              "TEXT"
            ]
          },
          "content": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        },
        "required": [
          "interactionType",
          "content",
          "timestamp",
          "userId"
        ]
      },
      "customerCommunication_InteractionWhereInput_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_5"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_5"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_5"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "interactionType": {
            "$ref": "#/components/schemas/customerCommunication_EnumInteractionTypeFilter"
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "widgetId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetRelationFilter"
          }
        }
      },
      "customerCommunication_StringFilter_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter"
          }
        }
      },
      "customerCommunication_NestedStringFilter_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter_5"
          }
        }
      },
      "customerCommunication_DateTimeFilter_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeFilter_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter_5"
          }
        }
      },
      "customerCommunication_StringNullableFilter_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter"
          }
        }
      },
      "customerCommunication_NestedStringNullableFilter_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter_5"
          }
        }
      },
      "customerCommunication_UserRelationFilter_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          }
        }
      },
      "customerCommunication_UserWhereInput_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_5"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_UserWhereInput_5"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_5"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_5"
          },
          "name": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_5"
          },
          "email": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_5"
          },
          "emailVerified": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "image": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_5"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_5"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_5"
          },
          "userType": {
            "$ref": "#/components/schemas/customerCommunication_EnumUserTypeNullableFilter"
          },
          "stripeCustomerId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_5"
          },
          "stripeSubscriptionId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_5"
          },
          "stripePriceId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_5"
          },
          "stripeCurrentPeriodEnd": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountListRelationFilter"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionListRelationFilter"
          }
        }
      },
      "customerCommunication_DateTimeNullableFilter_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeNullableFilter_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter_5"
          }
        }
      },
      "customerCommunication_InteractionListRelationFilter_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_5"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_5"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_5"
          }
        }
      },
      "customerCommunication_AccountListRelationFilter_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          }
        }
      },
      "customerCommunication_AccountWhereInput_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_5"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_5"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_5"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_5"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_5"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_5"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_5"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_5"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_5"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_5"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_IntNullableFilter"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_5"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_5"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_5"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_5"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_5"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_5"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_5"
          }
        }
      },
      "customerCommunication_IntNullableFilter_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter"
          }
        }
      },
      "customerCommunication_NestedIntNullableFilter_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter_5"
          }
        }
      },
      "customerCommunication_SessionListRelationFilter_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          }
        }
      },
      "customerCommunication_SessionWhereInput_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_5"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_5"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_5"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_5"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_5"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_5"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_5"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_5"
          }
        }
      },
      "customerCommunication_WidgetRelationFilter_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          }
        }
      },
      "customerCommunication_WidgetWhereInput_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_5"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_5"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_5"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_5"
          },
          "embeddedIn": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_5"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter_5"
          }
        }
      },
      "customerCommunication_InteractionOrderByWithRelationInput_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactionType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "content": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "timestamp": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "widgetId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserOrderByWithRelationInput"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetOrderByWithRelationInput"
          }
        }
      },
      "customerCommunication_UserOrderByWithRelationInput_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "name": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "email": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "emailVerified": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "image": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeCustomerId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeSubscriptionId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripePriceId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeCurrentPeriodEnd": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionOrderByRelationAggregateInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountOrderByRelationAggregateInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionOrderByRelationAggregateInput"
          }
        }
      },
      "customerCommunication_WidgetOrderByWithRelationInput_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "embeddedIn": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionOrderByRelationAggregateInput"
          }
        }
      },
      "customerCommunication_AccountOrderByWithRelationInput_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "type": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "provider": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "providerAccountId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "refresh_token": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "access_token": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "expires_at": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "token_type": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "scope": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "id_token": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "session_state": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserOrderByWithRelationInput_5"
          }
        }
      },
      "customerCommunication_SessionOrderByWithRelationInput_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "sessionToken": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "expires": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserOrderByWithRelationInput_5"
          }
        }
      },
      "customerCommunication_AccountWhereInput_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_6"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_6"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_6"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_IntNullableFilter"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter"
          }
        }
      },
      "customerCommunication_StringFilter_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter"
          }
        }
      },
      "customerCommunication_NestedStringFilter_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter_6"
          }
        }
      },
      "customerCommunication_StringNullableFilter_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter"
          }
        }
      },
      "customerCommunication_NestedStringNullableFilter_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter_6"
          }
        }
      },
      "customerCommunication_IntNullableFilter_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter"
          }
        }
      },
      "customerCommunication_NestedIntNullableFilter_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter_6"
          }
        }
      },
      "customerCommunication_DateTimeFilter_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeFilter_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter_6"
          }
        }
      },
      "customerCommunication_UserRelationFilter_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          }
        }
      },
      "customerCommunication_UserWhereInput_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_6"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_UserWhereInput_6"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_6"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_6"
          },
          "name": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_6"
          },
          "email": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_6"
          },
          "emailVerified": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "image": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_6"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_6"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_6"
          },
          "userType": {
            "$ref": "#/components/schemas/customerCommunication_EnumUserTypeNullableFilter"
          },
          "stripeCustomerId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_6"
          },
          "stripeSubscriptionId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_6"
          },
          "stripePriceId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_6"
          },
          "stripeCurrentPeriodEnd": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountListRelationFilter"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionListRelationFilter"
          }
        }
      },
      "customerCommunication_DateTimeNullableFilter_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeNullableFilter_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter_6"
          }
        }
      },
      "customerCommunication_InteractionListRelationFilter_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput"
          }
        }
      },
      "customerCommunication_InteractionWhereInput_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_6"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_6"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_6"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_6"
          },
          "interactionType": {
            "$ref": "#/components/schemas/customerCommunication_EnumInteractionTypeFilter"
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_6"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_6"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_6"
          },
          "widgetId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_6"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_6"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetRelationFilter"
          }
        }
      },
      "customerCommunication_WidgetRelationFilter_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          }
        }
      },
      "customerCommunication_WidgetWhereInput_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_6"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_6"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_6"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_6"
          },
          "embeddedIn": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_6"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter_6"
          }
        }
      },
      "customerCommunication_AccountListRelationFilter_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_6"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_6"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_6"
          }
        }
      },
      "customerCommunication_SessionListRelationFilter_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          }
        }
      },
      "customerCommunication_SessionWhereInput_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_6"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_6"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_6"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_6"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_6"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_6"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_6"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_6"
          }
        }
      },
      "customerCommunication_FilterWhereInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_FilterWhereInput"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_FilterWhereInput"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_FilterWhereInput"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "audience": {
            "$ref": "#/components/schemas/customerCommunication_EnumAudienceTypeFilter"
          },
          "output": {
            "$ref": "#/components/schemas/customerCommunication_EnumOutputTypeFilter"
          }
        }
      },
      "customerCommunication_StringFilter_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter"
          }
        }
      },
      "customerCommunication_NestedStringFilter_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter_7"
          }
        }
      },
      "customerCommunication_EnumAudienceTypeFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_AudienceType",
            "enum": [
              "CALL_CENTER",
              "CLIENT_PORTAL",
              "GUARDIAN_ONLINE",
              "GPAC",
              "SMART_OFFICE",
              "LIVING_BALANCE_SHEET"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ],
              "x-graphql-enum-name": "customerCommunication_AudienceType",
              "enum": [
                "CALL_CENTER",
                "CLIENT_PORTAL",
                "GUARDIAN_ONLINE",
                "GPAC",
                "SMART_OFFICE",
                "LIVING_BALANCE_SHEET"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ],
              "x-graphql-enum-name": "customerCommunication_AudienceType",
              "enum": [
                "CALL_CENTER",
                "CLIENT_PORTAL",
                "GUARDIAN_ONLINE",
                "GPAC",
                "SMART_OFFICE",
                "LIVING_BALANCE_SHEET"
              ]
            }
          },
          "not": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_AudienceType",
            "enum": [
              "CALL_CENTER",
              "CLIENT_PORTAL",
              "GUARDIAN_ONLINE",
              "GPAC",
              "SMART_OFFICE",
              "LIVING_BALANCE_SHEET"
            ]
          }
        }
      },
      "customerCommunication_EnumOutputTypeFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_OutputType",
            "enum": [
              "CALLS",
              "CHATS",
              "EMAILS",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIALS",
              "TEXTS"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ],
              "x-graphql-enum-name": "customerCommunication_OutputType",
              "enum": [
                "CALLS",
                "CHATS",
                "EMAILS",
                "WEB_USAGE",
                "IVR_HUGO_USAGE",
                "OUTBOUND_CORRESPONDENCE",
                "MARKETING_MATERIALS",
                "TEXTS"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ],
              "x-graphql-enum-name": "customerCommunication_OutputType",
              "enum": [
                "CALLS",
                "CHATS",
                "EMAILS",
                "WEB_USAGE",
                "IVR_HUGO_USAGE",
                "OUTBOUND_CORRESPONDENCE",
                "MARKETING_MATERIALS",
                "TEXTS"
              ]
            }
          },
          "not": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_OutputType",
            "enum": [
              "CALLS",
              "CHATS",
              "EMAILS",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIALS",
              "TEXTS"
            ]
          }
        }
      },
      "customerCommunication_InteractionWhereInput_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_7"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_7"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_7"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "interactionType": {
            "$ref": "#/components/schemas/customerCommunication_EnumInteractionTypeFilter"
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "widgetId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetRelationFilter"
          }
        }
      },
      "customerCommunication_StringFilter_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter"
          }
        }
      },
      "customerCommunication_NestedStringFilter_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter_8"
          }
        }
      },
      "customerCommunication_DateTimeFilter_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeFilter_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter_7"
          }
        }
      },
      "customerCommunication_StringNullableFilter_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter"
          }
        }
      },
      "customerCommunication_NestedStringNullableFilter_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter_7"
          }
        }
      },
      "customerCommunication_UserRelationFilter_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          }
        }
      },
      "customerCommunication_UserWhereInput_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_7"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_UserWhereInput_7"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_7"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_8"
          },
          "name": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_7"
          },
          "email": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_7"
          },
          "emailVerified": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "image": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_7"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_7"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_7"
          },
          "userType": {
            "$ref": "#/components/schemas/customerCommunication_EnumUserTypeNullableFilter"
          },
          "stripeCustomerId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_7"
          },
          "stripeSubscriptionId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_7"
          },
          "stripePriceId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_7"
          },
          "stripeCurrentPeriodEnd": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountListRelationFilter"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionListRelationFilter"
          }
        }
      },
      "customerCommunication_DateTimeNullableFilter_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeNullableFilter_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter_7"
          }
        }
      },
      "customerCommunication_InteractionListRelationFilter_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_7"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_7"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_7"
          }
        }
      },
      "customerCommunication_AccountListRelationFilter_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          }
        }
      },
      "customerCommunication_AccountWhereInput_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_7"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_7"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_7"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_8"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_8"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_8"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_8"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_8"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_7"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_7"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_IntNullableFilter"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_7"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_7"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_7"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_7"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_7"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_7"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_7"
          }
        }
      },
      "customerCommunication_IntNullableFilter_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter"
          }
        }
      },
      "customerCommunication_NestedIntNullableFilter_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter_7"
          }
        }
      },
      "customerCommunication_SessionListRelationFilter_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          }
        }
      },
      "customerCommunication_SessionWhereInput_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_7"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_7"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_7"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_8"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_8"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_8"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_7"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_7"
          }
        }
      },
      "customerCommunication_WidgetRelationFilter_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          }
        }
      },
      "customerCommunication_WidgetWhereInput_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_7"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_7"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_7"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_8"
          },
          "embeddedIn": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_8"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter_7"
          }
        }
      },
      "customerCommunication_SessionWhereInput_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_8"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_8"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_8"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter"
          }
        }
      },
      "customerCommunication_StringFilter_9": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter"
          }
        }
      },
      "customerCommunication_NestedStringFilter_9": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter_9"
          }
        }
      },
      "customerCommunication_DateTimeFilter_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeFilter_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter_8"
          }
        }
      },
      "customerCommunication_UserRelationFilter_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          }
        }
      },
      "customerCommunication_UserWhereInput_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_8"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_UserWhereInput_8"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_8"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_9"
          },
          "name": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "email": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "emailVerified": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "image": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_8"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_8"
          },
          "userType": {
            "$ref": "#/components/schemas/customerCommunication_EnumUserTypeNullableFilter"
          },
          "stripeCustomerId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "stripeSubscriptionId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "stripePriceId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "stripeCurrentPeriodEnd": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountListRelationFilter"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionListRelationFilter"
          }
        }
      },
      "customerCommunication_StringNullableFilter_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter"
          }
        }
      },
      "customerCommunication_NestedStringNullableFilter_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter_8"
          }
        }
      },
      "customerCommunication_DateTimeNullableFilter_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeNullableFilter_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter_8"
          }
        }
      },
      "customerCommunication_InteractionListRelationFilter_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput"
          }
        }
      },
      "customerCommunication_InteractionWhereInput_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_8"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_8"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_8"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_9"
          },
          "interactionType": {
            "$ref": "#/components/schemas/customerCommunication_EnumInteractionTypeFilter"
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_9"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_8"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_9"
          },
          "widgetId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_8"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_8"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetRelationFilter"
          }
        }
      },
      "customerCommunication_WidgetRelationFilter_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          }
        }
      },
      "customerCommunication_WidgetWhereInput_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_8"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_8"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_8"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_9"
          },
          "embeddedIn": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_9"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter_8"
          }
        }
      },
      "customerCommunication_AccountListRelationFilter_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          }
        }
      },
      "customerCommunication_AccountWhereInput_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_8"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_8"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_8"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_9"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_9"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_9"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_9"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_9"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_8"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_8"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_IntNullableFilter"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_8"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_8"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_8"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_8"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_8"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_8"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_8"
          }
        }
      },
      "customerCommunication_IntNullableFilter_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter"
          }
        }
      },
      "customerCommunication_NestedIntNullableFilter_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter_8"
          }
        }
      },
      "customerCommunication_SessionListRelationFilter_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_8"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_8"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_8"
          }
        }
      },
      "customerCommunication_UserWhereInput_9": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_9"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_UserWhereInput_9"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_9"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "name": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "email": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "emailVerified": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "image": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter"
          },
          "userType": {
            "$ref": "#/components/schemas/customerCommunication_EnumUserTypeNullableFilter"
          },
          "stripeCustomerId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "stripeSubscriptionId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "stripePriceId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "stripeCurrentPeriodEnd": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountListRelationFilter"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionListRelationFilter"
          }
        }
      },
      "customerCommunication_StringFilter_10": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter"
          }
        }
      },
      "customerCommunication_NestedStringFilter_10": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter_10"
          }
        }
      },
      "customerCommunication_StringNullableFilter_9": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter"
          }
        }
      },
      "customerCommunication_NestedStringNullableFilter_9": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter_9"
          }
        }
      },
      "customerCommunication_DateTimeNullableFilter_9": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeNullableFilter_9": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter_9"
          }
        }
      },
      "customerCommunication_DateTimeFilter_9": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeFilter_9": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter_9"
          }
        }
      },
      "customerCommunication_InteractionListRelationFilter_9": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput"
          }
        }
      },
      "customerCommunication_InteractionWhereInput_9": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_9"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_9"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_9"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_10"
          },
          "interactionType": {
            "$ref": "#/components/schemas/customerCommunication_EnumInteractionTypeFilter"
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_10"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_9"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_10"
          },
          "widgetId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_9"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetRelationFilter"
          }
        }
      },
      "customerCommunication_UserRelationFilter_9": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_9"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_9"
          }
        }
      },
      "customerCommunication_WidgetRelationFilter_9": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          }
        }
      },
      "customerCommunication_WidgetWhereInput_9": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_9"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_9"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_9"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_10"
          },
          "embeddedIn": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_10"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter_9"
          }
        }
      },
      "customerCommunication_AccountListRelationFilter_9": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          }
        }
      },
      "customerCommunication_AccountWhereInput_9": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_9"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_9"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_9"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_10"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_10"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_10"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_10"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_10"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_9"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_9"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_IntNullableFilter"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_9"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_9"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_9"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_9"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_9"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_9"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_9"
          }
        }
      },
      "customerCommunication_IntNullableFilter_9": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter"
          }
        }
      },
      "customerCommunication_NestedIntNullableFilter_9": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter_9"
          }
        }
      },
      "customerCommunication_SessionListRelationFilter_9": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          }
        }
      },
      "customerCommunication_SessionWhereInput_9": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_9"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_9"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_9"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_10"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_10"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_10"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_9"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_9"
          }
        }
      },
      "customerCommunication_VerificationTokenWhereInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_VerificationTokenWhereInput"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_VerificationTokenWhereInput"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_VerificationTokenWhereInput"
          },
          "identifier": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "token": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter"
          }
        }
      },
      "customerCommunication_StringFilter_11": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter"
          }
        }
      },
      "customerCommunication_NestedStringFilter_11": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter_11"
          }
        }
      },
      "customerCommunication_DateTimeFilter_10": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeFilter_10": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter_10"
          }
        }
      },
      "customerCommunication_WidgetWhereInput_10": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_10"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_10"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_10"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "embeddedIn": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter"
          }
        }
      },
      "customerCommunication_StringFilter_12": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter"
          }
        }
      },
      "customerCommunication_NestedStringFilter_12": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter_12"
          }
        }
      },
      "customerCommunication_InteractionListRelationFilter_10": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput"
          }
        }
      },
      "customerCommunication_InteractionWhereInput_10": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_10"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_10"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_10"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_12"
          },
          "interactionType": {
            "$ref": "#/components/schemas/customerCommunication_EnumInteractionTypeFilter"
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_12"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_12"
          },
          "widgetId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetRelationFilter"
          }
        }
      },
      "customerCommunication_DateTimeFilter_11": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeFilter_11": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter_11"
          }
        }
      },
      "customerCommunication_StringNullableFilter_10": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter"
          }
        }
      },
      "customerCommunication_NestedStringNullableFilter_10": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter_10"
          }
        }
      },
      "customerCommunication_UserRelationFilter_10": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          }
        }
      },
      "customerCommunication_UserWhereInput_10": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_10"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_UserWhereInput_10"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_10"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_12"
          },
          "name": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_10"
          },
          "email": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_10"
          },
          "emailVerified": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "image": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_10"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_11"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_11"
          },
          "userType": {
            "$ref": "#/components/schemas/customerCommunication_EnumUserTypeNullableFilter"
          },
          "stripeCustomerId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_10"
          },
          "stripeSubscriptionId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_10"
          },
          "stripePriceId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_10"
          },
          "stripeCurrentPeriodEnd": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter_10"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountListRelationFilter"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionListRelationFilter"
          }
        }
      },
      "customerCommunication_DateTimeNullableFilter_10": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeNullableFilter_10": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter_10"
          }
        }
      },
      "customerCommunication_AccountListRelationFilter_10": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          }
        }
      },
      "customerCommunication_AccountWhereInput_10": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_10"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_10"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_10"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_12"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_12"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_12"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_12"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_12"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_10"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_10"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_IntNullableFilter"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_10"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_10"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_10"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_10"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_11"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_11"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_10"
          }
        }
      },
      "customerCommunication_IntNullableFilter_10": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter"
          }
        }
      },
      "customerCommunication_NestedIntNullableFilter_10": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter_10"
          }
        }
      },
      "customerCommunication_SessionListRelationFilter_10": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          }
        }
      },
      "customerCommunication_SessionWhereInput_10": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_10"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_10"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_10"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_12"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_12"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_12"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_11"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_10"
          }
        }
      },
      "customerCommunication_WidgetRelationFilter_10": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_10"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_10"
          }
        }
      },
      "customerCommunication_AccountWhereUniqueInput_5": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "provider_providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput"
          }
        }
      },
      "customerCommunication_InteractionWhereInput_11": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_11"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_11"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_11"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "interactionType": {
            "$ref": "#/components/schemas/customerCommunication_EnumInteractionTypeFilter"
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "widgetId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetRelationFilter"
          }
        }
      },
      "customerCommunication_StringFilter_13": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter"
          }
        }
      },
      "customerCommunication_NestedStringFilter_13": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter_13"
          }
        }
      },
      "customerCommunication_DateTimeFilter_12": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeFilter_12": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter_12"
          }
        }
      },
      "customerCommunication_StringNullableFilter_11": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter"
          }
        }
      },
      "customerCommunication_NestedStringNullableFilter_11": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter_11"
          }
        }
      },
      "customerCommunication_UserRelationFilter_11": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          }
        }
      },
      "customerCommunication_UserWhereInput_11": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_11"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_UserWhereInput_11"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_11"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_13"
          },
          "name": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_11"
          },
          "email": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_11"
          },
          "emailVerified": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "image": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_11"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_12"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_12"
          },
          "userType": {
            "$ref": "#/components/schemas/customerCommunication_EnumUserTypeNullableFilter"
          },
          "stripeCustomerId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_11"
          },
          "stripeSubscriptionId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_11"
          },
          "stripePriceId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_11"
          },
          "stripeCurrentPeriodEnd": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountListRelationFilter"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionListRelationFilter"
          }
        }
      },
      "customerCommunication_DateTimeNullableFilter_11": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeNullableFilter_11": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter_11"
          }
        }
      },
      "customerCommunication_InteractionListRelationFilter_11": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_11"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_11"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_11"
          }
        }
      },
      "customerCommunication_AccountListRelationFilter_11": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          }
        }
      },
      "customerCommunication_AccountWhereInput_11": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_11"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_11"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_11"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_13"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_13"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_13"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_13"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_13"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_11"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_11"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_IntNullableFilter"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_11"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_11"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_11"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_11"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_12"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_12"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_11"
          }
        }
      },
      "customerCommunication_IntNullableFilter_11": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter"
          }
        }
      },
      "customerCommunication_NestedIntNullableFilter_11": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter_11"
          }
        }
      },
      "customerCommunication_SessionListRelationFilter_11": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          }
        }
      },
      "customerCommunication_SessionWhereInput_11": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_11"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_11"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_11"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_13"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_13"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_13"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_12"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_11"
          }
        }
      },
      "customerCommunication_WidgetRelationFilter_11": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          }
        }
      },
      "customerCommunication_WidgetWhereInput_11": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_11"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_11"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_11"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_13"
          },
          "embeddedIn": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_13"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter_11"
          }
        }
      },
      "customerCommunication_InteractionOrderByWithRelationInput_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactionType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "content": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "timestamp": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "widgetId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserOrderByWithRelationInput"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetOrderByWithRelationInput"
          }
        }
      },
      "customerCommunication_UserOrderByWithRelationInput_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "name": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "email": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "emailVerified": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "image": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeCustomerId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeSubscriptionId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripePriceId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeCurrentPeriodEnd": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionOrderByRelationAggregateInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountOrderByRelationAggregateInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionOrderByRelationAggregateInput"
          }
        }
      },
      "customerCommunication_WidgetOrderByWithRelationInput_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "embeddedIn": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionOrderByRelationAggregateInput"
          }
        }
      },
      "customerCommunication_InteractionWhereUniqueInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "customerCommunication_SessionOrderByWithRelationInput_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "sessionToken": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "expires": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserOrderByWithRelationInput_6"
          }
        }
      },
      "customerCommunication_SessionWhereUniqueInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "sessionToken": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "customerCommunication_FilterWhereUniqueInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "customerCommunication_AccountWhereInput_12": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_12"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_12"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_12"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_IntNullableFilter"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter"
          }
        }
      },
      "customerCommunication_StringFilter_14": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter"
          }
        }
      },
      "customerCommunication_NestedStringFilter_14": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter_14"
          }
        }
      },
      "customerCommunication_StringNullableFilter_12": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter"
          }
        }
      },
      "customerCommunication_NestedStringNullableFilter_12": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter_12"
          }
        }
      },
      "customerCommunication_IntNullableFilter_12": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter"
          }
        }
      },
      "customerCommunication_NestedIntNullableFilter_12": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter_12"
          }
        }
      },
      "customerCommunication_DateTimeFilter_13": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeFilter_13": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter_13"
          }
        }
      },
      "customerCommunication_UserRelationFilter_12": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          }
        }
      },
      "customerCommunication_UserWhereInput_12": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_12"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_UserWhereInput_12"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_12"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_14"
          },
          "name": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_12"
          },
          "email": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_12"
          },
          "emailVerified": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "image": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_12"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_13"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_13"
          },
          "userType": {
            "$ref": "#/components/schemas/customerCommunication_EnumUserTypeNullableFilter"
          },
          "stripeCustomerId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_12"
          },
          "stripeSubscriptionId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_12"
          },
          "stripePriceId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_12"
          },
          "stripeCurrentPeriodEnd": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountListRelationFilter"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionListRelationFilter"
          }
        }
      },
      "customerCommunication_DateTimeNullableFilter_12": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeNullableFilter_12": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter_12"
          }
        }
      },
      "customerCommunication_InteractionListRelationFilter_12": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput"
          }
        }
      },
      "customerCommunication_InteractionWhereInput_12": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_12"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_12"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_12"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_14"
          },
          "interactionType": {
            "$ref": "#/components/schemas/customerCommunication_EnumInteractionTypeFilter"
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_14"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_13"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_14"
          },
          "widgetId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_12"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_12"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetRelationFilter"
          }
        }
      },
      "customerCommunication_WidgetRelationFilter_12": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          }
        }
      },
      "customerCommunication_WidgetWhereInput_12": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_12"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_12"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_12"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_14"
          },
          "embeddedIn": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_14"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter_12"
          }
        }
      },
      "customerCommunication_AccountListRelationFilter_12": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_12"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_12"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_12"
          }
        }
      },
      "customerCommunication_SessionListRelationFilter_12": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          }
        }
      },
      "customerCommunication_SessionWhereInput_12": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_12"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_12"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_12"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_14"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_14"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_14"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_13"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_12"
          }
        }
      },
      "customerCommunication_AccountOrderByWithRelationInput_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "type": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "provider": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "providerAccountId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "refresh_token": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "access_token": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "expires_at": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "token_type": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "scope": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "id_token": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "session_state": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserOrderByWithRelationInput"
          }
        }
      },
      "customerCommunication_UserOrderByWithRelationInput_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "name": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "email": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "emailVerified": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "image": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeCustomerId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeSubscriptionId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripePriceId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeCurrentPeriodEnd": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionOrderByRelationAggregateInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountOrderByRelationAggregateInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionOrderByRelationAggregateInput"
          }
        }
      },
      "customerCommunication_AccountWhereUniqueInput_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "provider_providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput"
          }
        }
      },
      "customerCommunication_SessionOrderByWithRelationInput_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "sessionToken": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "expires": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserOrderByWithRelationInput_7"
          }
        }
      },
      "customerCommunication_InteractionWhereInput_13": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_13"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_13"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_13"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "interactionType": {
            "$ref": "#/components/schemas/customerCommunication_EnumInteractionTypeFilter"
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "widgetId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetRelationFilter"
          }
        }
      },
      "customerCommunication_StringFilter_15": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter"
          }
        }
      },
      "customerCommunication_NestedStringFilter_15": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter_15"
          }
        }
      },
      "customerCommunication_DateTimeFilter_14": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeFilter_14": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter_14"
          }
        }
      },
      "customerCommunication_StringNullableFilter_13": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter"
          }
        }
      },
      "customerCommunication_NestedStringNullableFilter_13": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter_13"
          }
        }
      },
      "customerCommunication_UserRelationFilter_13": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          }
        }
      },
      "customerCommunication_UserWhereInput_13": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_13"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_UserWhereInput_13"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_13"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_15"
          },
          "name": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_13"
          },
          "email": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_13"
          },
          "emailVerified": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "image": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_13"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_14"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_14"
          },
          "userType": {
            "$ref": "#/components/schemas/customerCommunication_EnumUserTypeNullableFilter"
          },
          "stripeCustomerId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_13"
          },
          "stripeSubscriptionId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_13"
          },
          "stripePriceId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_13"
          },
          "stripeCurrentPeriodEnd": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountListRelationFilter"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionListRelationFilter"
          }
        }
      },
      "customerCommunication_DateTimeNullableFilter_13": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeNullableFilter_13": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter_13"
          }
        }
      },
      "customerCommunication_InteractionListRelationFilter_13": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_13"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_13"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_13"
          }
        }
      },
      "customerCommunication_AccountListRelationFilter_13": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          }
        }
      },
      "customerCommunication_AccountWhereInput_13": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_13"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_13"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_13"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_15"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_15"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_15"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_15"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_15"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_13"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_13"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_IntNullableFilter"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_13"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_13"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_13"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_13"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_14"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_14"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_13"
          }
        }
      },
      "customerCommunication_IntNullableFilter_13": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter"
          }
        }
      },
      "customerCommunication_NestedIntNullableFilter_13": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter_13"
          }
        }
      },
      "customerCommunication_SessionListRelationFilter_13": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          }
        }
      },
      "customerCommunication_SessionWhereInput_13": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_13"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_13"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_13"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_15"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_15"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_15"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_14"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_13"
          }
        }
      },
      "customerCommunication_WidgetRelationFilter_13": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          }
        }
      },
      "customerCommunication_WidgetWhereInput_13": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_13"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_13"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_13"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_15"
          },
          "embeddedIn": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_15"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter_13"
          }
        }
      },
      "customerCommunication_InteractionOrderByWithRelationInput_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactionType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "content": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "timestamp": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "widgetId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserOrderByWithRelationInput"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetOrderByWithRelationInput"
          }
        }
      },
      "customerCommunication_UserOrderByWithRelationInput_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "name": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "email": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "emailVerified": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "image": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeCustomerId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeSubscriptionId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripePriceId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeCurrentPeriodEnd": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionOrderByRelationAggregateInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountOrderByRelationAggregateInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionOrderByRelationAggregateInput"
          }
        }
      },
      "customerCommunication_WidgetOrderByWithRelationInput_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "embeddedIn": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionOrderByRelationAggregateInput"
          }
        }
      },
      "customerCommunication_AccountOrderByWithRelationInput_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "type": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "provider": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "providerAccountId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "refresh_token": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "access_token": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "expires_at": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "token_type": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "scope": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "id_token": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "session_state": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserOrderByWithRelationInput_8"
          }
        }
      },
      "customerCommunication_AccountWhereUniqueInput_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "provider_providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput"
          }
        }
      },
      "customerCommunication_InteractionWhereInput_14": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_14"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_14"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_14"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "interactionType": {
            "$ref": "#/components/schemas/customerCommunication_EnumInteractionTypeFilter"
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "widgetId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetRelationFilter"
          }
        }
      },
      "customerCommunication_StringFilter_16": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter"
          }
        }
      },
      "customerCommunication_NestedStringFilter_16": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter_16"
          }
        }
      },
      "customerCommunication_DateTimeFilter_15": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeFilter_15": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter_15"
          }
        }
      },
      "customerCommunication_StringNullableFilter_14": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter"
          }
        }
      },
      "customerCommunication_NestedStringNullableFilter_14": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter_14"
          }
        }
      },
      "customerCommunication_UserRelationFilter_14": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          }
        }
      },
      "customerCommunication_UserWhereInput_14": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_14"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_UserWhereInput_14"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_14"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_16"
          },
          "name": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_14"
          },
          "email": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_14"
          },
          "emailVerified": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "image": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_14"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_15"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_15"
          },
          "userType": {
            "$ref": "#/components/schemas/customerCommunication_EnumUserTypeNullableFilter"
          },
          "stripeCustomerId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_14"
          },
          "stripeSubscriptionId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_14"
          },
          "stripePriceId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_14"
          },
          "stripeCurrentPeriodEnd": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountListRelationFilter"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionListRelationFilter"
          }
        }
      },
      "customerCommunication_DateTimeNullableFilter_14": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeNullableFilter_14": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter_14"
          }
        }
      },
      "customerCommunication_InteractionListRelationFilter_14": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_14"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_14"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_14"
          }
        }
      },
      "customerCommunication_AccountListRelationFilter_14": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          }
        }
      },
      "customerCommunication_AccountWhereInput_14": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_14"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_14"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_14"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_16"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_16"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_16"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_16"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_16"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_14"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_14"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_IntNullableFilter"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_14"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_14"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_14"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_14"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_15"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_15"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_14"
          }
        }
      },
      "customerCommunication_IntNullableFilter_14": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter"
          }
        }
      },
      "customerCommunication_NestedIntNullableFilter_14": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter_14"
          }
        }
      },
      "customerCommunication_SessionListRelationFilter_14": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          }
        }
      },
      "customerCommunication_SessionWhereInput_14": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_14"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_14"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_14"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_16"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_16"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_16"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_15"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_14"
          }
        }
      },
      "customerCommunication_WidgetRelationFilter_14": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          }
        }
      },
      "customerCommunication_WidgetWhereInput_14": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_14"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_14"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_14"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_16"
          },
          "embeddedIn": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_16"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter_14"
          }
        }
      },
      "customerCommunication_InteractionOrderByWithRelationInput_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactionType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "content": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "timestamp": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "widgetId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserOrderByWithRelationInput"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetOrderByWithRelationInput"
          }
        }
      },
      "customerCommunication_UserOrderByWithRelationInput_9": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "name": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "email": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "emailVerified": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "image": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeCustomerId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeSubscriptionId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripePriceId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeCurrentPeriodEnd": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionOrderByRelationAggregateInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountOrderByRelationAggregateInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionOrderByRelationAggregateInput"
          }
        }
      },
      "customerCommunication_WidgetOrderByWithRelationInput_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "embeddedIn": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionOrderByRelationAggregateInput"
          }
        }
      },
      "customerCommunication_AccountOrderByWithRelationInput_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "type": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "provider": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "providerAccountId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "refresh_token": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "access_token": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "expires_at": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "token_type": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "scope": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "id_token": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "session_state": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserOrderByWithRelationInput_9"
          }
        }
      },
      "customerCommunication_AccountWhereUniqueInput_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "provider_providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput"
          }
        }
      },
      "customerCommunication_SessionOrderByWithRelationInput_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "sessionToken": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "expires": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserOrderByWithRelationInput_9"
          }
        }
      },
      "customerCommunication_VerificationTokenWhereUniqueInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "token": {
            "type": [
              "string",
              "null"
            ]
          },
          "identifier_token": {
            "$ref": "#/components/schemas/customerCommunication_VerificationTokenIdentifierTokenCompoundUniqueInput"
          }
        }
      },
      "customerCommunication_VerificationTokenIdentifierTokenCompoundUniqueInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "identifier": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        }
      },
      "customerCommunication_InteractionWhereInput_15": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_15"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_15"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_15"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "interactionType": {
            "$ref": "#/components/schemas/customerCommunication_EnumInteractionTypeFilter"
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "widgetId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetRelationFilter"
          }
        }
      },
      "customerCommunication_StringFilter_17": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter"
          }
        }
      },
      "customerCommunication_NestedStringFilter_17": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter_17"
          }
        }
      },
      "customerCommunication_DateTimeFilter_16": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeFilter_16": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter_16"
          }
        }
      },
      "customerCommunication_StringNullableFilter_15": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter"
          }
        }
      },
      "customerCommunication_NestedStringNullableFilter_15": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter_15"
          }
        }
      },
      "customerCommunication_UserRelationFilter_15": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          }
        }
      },
      "customerCommunication_UserWhereInput_15": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_15"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_UserWhereInput_15"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_15"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_17"
          },
          "name": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_15"
          },
          "email": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_15"
          },
          "emailVerified": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "image": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_15"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_16"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_16"
          },
          "userType": {
            "$ref": "#/components/schemas/customerCommunication_EnumUserTypeNullableFilter"
          },
          "stripeCustomerId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_15"
          },
          "stripeSubscriptionId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_15"
          },
          "stripePriceId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_15"
          },
          "stripeCurrentPeriodEnd": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountListRelationFilter"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionListRelationFilter"
          }
        }
      },
      "customerCommunication_DateTimeNullableFilter_15": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeNullableFilter_15": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter_15"
          }
        }
      },
      "customerCommunication_InteractionListRelationFilter_15": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_15"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_15"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_15"
          }
        }
      },
      "customerCommunication_AccountListRelationFilter_15": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          }
        }
      },
      "customerCommunication_AccountWhereInput_15": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_15"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_15"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_15"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_17"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_17"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_17"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_17"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_17"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_15"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_15"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_IntNullableFilter"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_15"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_15"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_15"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_15"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_16"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_16"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_15"
          }
        }
      },
      "customerCommunication_IntNullableFilter_15": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter"
          }
        }
      },
      "customerCommunication_NestedIntNullableFilter_15": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter_15"
          }
        }
      },
      "customerCommunication_SessionListRelationFilter_15": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          }
        }
      },
      "customerCommunication_SessionWhereInput_15": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_15"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_15"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_15"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_17"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_17"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_17"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_16"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_15"
          }
        }
      },
      "customerCommunication_WidgetRelationFilter_15": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          }
        }
      },
      "customerCommunication_WidgetWhereInput_15": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_15"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_15"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_15"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_17"
          },
          "embeddedIn": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_17"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter_15"
          }
        }
      },
      "customerCommunication_InteractionOrderByWithRelationInput_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactionType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "content": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "timestamp": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "widgetId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserOrderByWithRelationInput"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetOrderByWithRelationInput"
          }
        }
      },
      "customerCommunication_UserOrderByWithRelationInput_10": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "name": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "email": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "emailVerified": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "image": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeCustomerId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeSubscriptionId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripePriceId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeCurrentPeriodEnd": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionOrderByRelationAggregateInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountOrderByRelationAggregateInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionOrderByRelationAggregateInput"
          }
        }
      },
      "customerCommunication_WidgetOrderByWithRelationInput_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "embeddedIn": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionOrderByRelationAggregateInput"
          }
        }
      },
      "customerCommunication_AccountOrderByWithRelationInput_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "type": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "provider": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "providerAccountId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "refresh_token": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "access_token": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "expires_at": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "token_type": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "scope": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "id_token": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "session_state": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserOrderByWithRelationInput_10"
          }
        }
      },
      "customerCommunication_AccountWhereUniqueInput_9": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "provider_providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput"
          }
        }
      },
      "customerCommunication_SessionOrderByWithRelationInput_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "sessionToken": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "expires": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserOrderByWithRelationInput_10"
          }
        }
      },
      "customerCommunication_AccountUpdateManyMutationInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_NullableIntFieldUpdateOperationsInput"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_StringFieldUpdateOperationsInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "set": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "customerCommunication_NullableStringFieldUpdateOperationsInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "set": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "customerCommunication_NullableIntFieldUpdateOperationsInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "set": {
            "type": [
              "integer",
              "null"
            ]
          },
          "increment": {
            "type": [
              "integer",
              "null"
            ]
          },
          "decrement": {
            "type": [
              "integer",
              "null"
            ]
          },
          "multiply": {
            "type": [
              "integer",
              "null"
            ]
          },
          "divide": {
            "type": [
              "integer",
              "null"
            ]
          }
        }
      },
      "customerCommunication_DateTimeFieldUpdateOperationsInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "set": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "customerCommunication_AccountWhereInput_16": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_16"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_16"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_16"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_IntNullableFilter"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter"
          }
        }
      },
      "customerCommunication_StringFilter_18": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter"
          }
        }
      },
      "customerCommunication_NestedStringFilter_18": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter_18"
          }
        }
      },
      "customerCommunication_StringNullableFilter_16": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter"
          }
        }
      },
      "customerCommunication_NestedStringNullableFilter_16": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter_16"
          }
        }
      },
      "customerCommunication_IntNullableFilter_16": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter"
          }
        }
      },
      "customerCommunication_NestedIntNullableFilter_16": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter_16"
          }
        }
      },
      "customerCommunication_DateTimeFilter_17": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeFilter_17": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter_17"
          }
        }
      },
      "customerCommunication_UserRelationFilter_16": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          }
        }
      },
      "customerCommunication_UserWhereInput_16": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_16"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_UserWhereInput_16"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_16"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_18"
          },
          "name": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_16"
          },
          "email": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_16"
          },
          "emailVerified": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "image": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_16"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_17"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_17"
          },
          "userType": {
            "$ref": "#/components/schemas/customerCommunication_EnumUserTypeNullableFilter"
          },
          "stripeCustomerId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_16"
          },
          "stripeSubscriptionId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_16"
          },
          "stripePriceId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_16"
          },
          "stripeCurrentPeriodEnd": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountListRelationFilter"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionListRelationFilter"
          }
        }
      },
      "customerCommunication_DateTimeNullableFilter_16": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeNullableFilter_16": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter_16"
          }
        }
      },
      "customerCommunication_InteractionListRelationFilter_16": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput"
          }
        }
      },
      "customerCommunication_InteractionWhereInput_16": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_16"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_16"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_16"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_18"
          },
          "interactionType": {
            "$ref": "#/components/schemas/customerCommunication_EnumInteractionTypeFilter"
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_18"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_17"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_18"
          },
          "widgetId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_16"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_16"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetRelationFilter"
          }
        }
      },
      "customerCommunication_WidgetRelationFilter_16": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          }
        }
      },
      "customerCommunication_WidgetWhereInput_16": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_16"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_16"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_16"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_18"
          },
          "embeddedIn": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_18"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter_16"
          }
        }
      },
      "customerCommunication_AccountListRelationFilter_16": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_16"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_16"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_16"
          }
        }
      },
      "customerCommunication_SessionListRelationFilter_16": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          }
        }
      },
      "customerCommunication_SessionWhereInput_16": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_16"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_16"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_16"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_18"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_18"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_18"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_17"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_16"
          }
        }
      },
      "customerCommunication_FilterUpdateManyMutationInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "audience": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_AudienceType",
            "enum": [
              "CALL_CENTER",
              "CLIENT_PORTAL",
              "GUARDIAN_ONLINE",
              "GPAC",
              "SMART_OFFICE",
              "LIVING_BALANCE_SHEET"
            ]
          },
          "output": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_OutputType",
            "enum": [
              "CALLS",
              "CHATS",
              "EMAILS",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIALS",
              "TEXTS"
            ]
          }
        }
      },
      "customerCommunication_FilterWhereInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_FilterWhereInput_2"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_FilterWhereInput_2"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_FilterWhereInput_2"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "audience": {
            "$ref": "#/components/schemas/customerCommunication_EnumAudienceTypeFilter"
          },
          "output": {
            "$ref": "#/components/schemas/customerCommunication_EnumOutputTypeFilter"
          }
        }
      },
      "customerCommunication_StringFilter_19": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter"
          }
        }
      },
      "customerCommunication_NestedStringFilter_19": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter_19"
          }
        }
      },
      "customerCommunication_InteractionUpdateManyMutationInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "interactionType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_InteractionType",
            "enum": [
              "CALL",
              "CHAT",
              "EMAIL",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIAL",
              "TEXT"
            ]
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_InteractionWhereInput_17": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_17"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_17"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_17"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "interactionType": {
            "$ref": "#/components/schemas/customerCommunication_EnumInteractionTypeFilter"
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "widgetId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetRelationFilter"
          }
        }
      },
      "customerCommunication_StringFilter_20": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter"
          }
        }
      },
      "customerCommunication_NestedStringFilter_20": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter_20"
          }
        }
      },
      "customerCommunication_DateTimeFilter_18": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeFilter_18": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter_18"
          }
        }
      },
      "customerCommunication_StringNullableFilter_17": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter"
          }
        }
      },
      "customerCommunication_NestedStringNullableFilter_17": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter_17"
          }
        }
      },
      "customerCommunication_UserRelationFilter_17": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          }
        }
      },
      "customerCommunication_UserWhereInput_17": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_17"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_UserWhereInput_17"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_17"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_20"
          },
          "name": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_17"
          },
          "email": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_17"
          },
          "emailVerified": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "image": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_17"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_18"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_18"
          },
          "userType": {
            "$ref": "#/components/schemas/customerCommunication_EnumUserTypeNullableFilter"
          },
          "stripeCustomerId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_17"
          },
          "stripeSubscriptionId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_17"
          },
          "stripePriceId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_17"
          },
          "stripeCurrentPeriodEnd": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountListRelationFilter"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionListRelationFilter"
          }
        }
      },
      "customerCommunication_DateTimeNullableFilter_17": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeNullableFilter_17": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter_17"
          }
        }
      },
      "customerCommunication_InteractionListRelationFilter_17": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_17"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_17"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_17"
          }
        }
      },
      "customerCommunication_AccountListRelationFilter_17": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          }
        }
      },
      "customerCommunication_AccountWhereInput_17": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_17"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_17"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_17"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_20"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_20"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_20"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_20"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_20"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_17"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_17"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_IntNullableFilter"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_17"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_17"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_17"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_17"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_18"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_18"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_17"
          }
        }
      },
      "customerCommunication_IntNullableFilter_17": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter"
          }
        }
      },
      "customerCommunication_NestedIntNullableFilter_17": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter_17"
          }
        }
      },
      "customerCommunication_SessionListRelationFilter_17": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          }
        }
      },
      "customerCommunication_SessionWhereInput_17": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_17"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_17"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_17"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_20"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_20"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_20"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_18"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_17"
          }
        }
      },
      "customerCommunication_WidgetRelationFilter_17": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          }
        }
      },
      "customerCommunication_WidgetWhereInput_17": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_17"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_17"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_17"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_20"
          },
          "embeddedIn": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_20"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter_17"
          }
        }
      },
      "customerCommunication_SessionUpdateManyMutationInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_SessionWhereInput_18": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_18"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_18"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_18"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter"
          }
        }
      },
      "customerCommunication_StringFilter_21": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter"
          }
        }
      },
      "customerCommunication_NestedStringFilter_21": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter_21"
          }
        }
      },
      "customerCommunication_DateTimeFilter_19": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeFilter_19": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter_19"
          }
        }
      },
      "customerCommunication_UserRelationFilter_18": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          }
        }
      },
      "customerCommunication_UserWhereInput_18": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_18"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_UserWhereInput_18"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_18"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_21"
          },
          "name": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "email": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "emailVerified": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "image": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_19"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_19"
          },
          "userType": {
            "$ref": "#/components/schemas/customerCommunication_EnumUserTypeNullableFilter"
          },
          "stripeCustomerId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "stripeSubscriptionId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "stripePriceId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "stripeCurrentPeriodEnd": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountListRelationFilter"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionListRelationFilter"
          }
        }
      },
      "customerCommunication_StringNullableFilter_18": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter"
          }
        }
      },
      "customerCommunication_NestedStringNullableFilter_18": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter_18"
          }
        }
      },
      "customerCommunication_DateTimeNullableFilter_18": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeNullableFilter_18": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter_18"
          }
        }
      },
      "customerCommunication_InteractionListRelationFilter_18": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput"
          }
        }
      },
      "customerCommunication_InteractionWhereInput_18": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_18"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_18"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_18"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_21"
          },
          "interactionType": {
            "$ref": "#/components/schemas/customerCommunication_EnumInteractionTypeFilter"
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_21"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_19"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_21"
          },
          "widgetId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_18"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_18"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetRelationFilter"
          }
        }
      },
      "customerCommunication_WidgetRelationFilter_18": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          }
        }
      },
      "customerCommunication_WidgetWhereInput_18": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_18"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_18"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_18"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_21"
          },
          "embeddedIn": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_21"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter_18"
          }
        }
      },
      "customerCommunication_AccountListRelationFilter_18": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          }
        }
      },
      "customerCommunication_AccountWhereInput_18": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_18"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_18"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_18"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_21"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_21"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_21"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_21"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_21"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_18"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_18"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_IntNullableFilter"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_18"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_18"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_18"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_18"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_19"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_19"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_18"
          }
        }
      },
      "customerCommunication_IntNullableFilter_18": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter"
          }
        }
      },
      "customerCommunication_NestedIntNullableFilter_18": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter_18"
          }
        }
      },
      "customerCommunication_SessionListRelationFilter_18": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_18"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_18"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_18"
          }
        }
      },
      "customerCommunication_UserUpdateManyMutationInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "name": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "email": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "emailVerified": {
            "$ref": "#/components/schemas/customerCommunication_NullableDateTimeFieldUpdateOperationsInput"
          },
          "image": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "userType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_UserType",
            "enum": [
              "CALL_CENTER_REP",
              "CUSTOMER",
              "FINANCIAL_REP"
            ]
          },
          "stripeCustomerId": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "stripeSubscriptionId": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "stripePriceId": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "stripeCurrentPeriodEnd": {
            "$ref": "#/components/schemas/customerCommunication_NullableDateTimeFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_NullableDateTimeFieldUpdateOperationsInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "set": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "customerCommunication_UserWhereInput_19": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_19"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_UserWhereInput_19"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_19"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "name": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "email": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "emailVerified": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "image": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter"
          },
          "userType": {
            "$ref": "#/components/schemas/customerCommunication_EnumUserTypeNullableFilter"
          },
          "stripeCustomerId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "stripeSubscriptionId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "stripePriceId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "stripeCurrentPeriodEnd": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountListRelationFilter"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionListRelationFilter"
          }
        }
      },
      "customerCommunication_StringFilter_22": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter"
          }
        }
      },
      "customerCommunication_NestedStringFilter_22": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter_22"
          }
        }
      },
      "customerCommunication_StringNullableFilter_19": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter"
          }
        }
      },
      "customerCommunication_NestedStringNullableFilter_19": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter_19"
          }
        }
      },
      "customerCommunication_DateTimeNullableFilter_19": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeNullableFilter_19": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter_19"
          }
        }
      },
      "customerCommunication_DateTimeFilter_20": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeFilter_20": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter_20"
          }
        }
      },
      "customerCommunication_InteractionListRelationFilter_19": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput"
          }
        }
      },
      "customerCommunication_InteractionWhereInput_19": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_19"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_19"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_19"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_22"
          },
          "interactionType": {
            "$ref": "#/components/schemas/customerCommunication_EnumInteractionTypeFilter"
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_22"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_20"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_22"
          },
          "widgetId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_19"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetRelationFilter"
          }
        }
      },
      "customerCommunication_UserRelationFilter_19": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_19"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_19"
          }
        }
      },
      "customerCommunication_WidgetRelationFilter_19": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          }
        }
      },
      "customerCommunication_WidgetWhereInput_19": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_19"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_19"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_19"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_22"
          },
          "embeddedIn": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_22"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter_19"
          }
        }
      },
      "customerCommunication_AccountListRelationFilter_19": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          }
        }
      },
      "customerCommunication_AccountWhereInput_19": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_19"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_19"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_19"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_22"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_22"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_22"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_22"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_22"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_19"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_19"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_IntNullableFilter"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_19"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_19"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_19"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_19"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_20"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_20"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_19"
          }
        }
      },
      "customerCommunication_IntNullableFilter_19": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter"
          }
        }
      },
      "customerCommunication_NestedIntNullableFilter_19": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter_19"
          }
        }
      },
      "customerCommunication_SessionListRelationFilter_19": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          }
        }
      },
      "customerCommunication_SessionWhereInput_19": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_19"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_19"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_19"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_22"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_22"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_22"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_20"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_19"
          }
        }
      },
      "customerCommunication_VerificationTokenUpdateManyMutationInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "identifier": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "token": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_VerificationTokenWhereInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_VerificationTokenWhereInput_2"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_VerificationTokenWhereInput_2"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_VerificationTokenWhereInput_2"
          },
          "identifier": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "token": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter"
          }
        }
      },
      "customerCommunication_StringFilter_23": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter"
          }
        }
      },
      "customerCommunication_NestedStringFilter_23": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter_23"
          }
        }
      },
      "customerCommunication_DateTimeFilter_21": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeFilter_21": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter_21"
          }
        }
      },
      "customerCommunication_WidgetUpdateManyMutationInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "embeddedIn": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_WidgetWhereInput_20": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_20"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_20"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_20"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "embeddedIn": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter"
          }
        }
      },
      "customerCommunication_StringFilter_24": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter"
          }
        }
      },
      "customerCommunication_NestedStringFilter_24": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter_24"
          }
        }
      },
      "customerCommunication_InteractionListRelationFilter_20": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput"
          }
        }
      },
      "customerCommunication_InteractionWhereInput_20": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_20"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_20"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_20"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_24"
          },
          "interactionType": {
            "$ref": "#/components/schemas/customerCommunication_EnumInteractionTypeFilter"
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_24"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_24"
          },
          "widgetId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetRelationFilter"
          }
        }
      },
      "customerCommunication_DateTimeFilter_22": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeFilter_22": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter_22"
          }
        }
      },
      "customerCommunication_StringNullableFilter_20": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter"
          }
        }
      },
      "customerCommunication_NestedStringNullableFilter_20": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter_20"
          }
        }
      },
      "customerCommunication_UserRelationFilter_20": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          }
        }
      },
      "customerCommunication_UserWhereInput_20": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_20"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_UserWhereInput_20"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_20"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_24"
          },
          "name": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_20"
          },
          "email": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_20"
          },
          "emailVerified": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "image": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_20"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_22"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_22"
          },
          "userType": {
            "$ref": "#/components/schemas/customerCommunication_EnumUserTypeNullableFilter"
          },
          "stripeCustomerId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_20"
          },
          "stripeSubscriptionId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_20"
          },
          "stripePriceId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_20"
          },
          "stripeCurrentPeriodEnd": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter_20"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountListRelationFilter"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionListRelationFilter"
          }
        }
      },
      "customerCommunication_DateTimeNullableFilter_20": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeNullableFilter_20": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter_20"
          }
        }
      },
      "customerCommunication_AccountListRelationFilter_20": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          }
        }
      },
      "customerCommunication_AccountWhereInput_20": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_20"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_20"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_20"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_24"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_24"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_24"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_24"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_24"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_20"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_20"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_IntNullableFilter"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_20"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_20"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_20"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_20"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_22"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_22"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_20"
          }
        }
      },
      "customerCommunication_IntNullableFilter_20": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter"
          }
        }
      },
      "customerCommunication_NestedIntNullableFilter_20": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter_20"
          }
        }
      },
      "customerCommunication_SessionListRelationFilter_20": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          }
        }
      },
      "customerCommunication_SessionWhereInput_20": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_20"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_20"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_20"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_24"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_24"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_24"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_22"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_20"
          }
        }
      },
      "customerCommunication_WidgetRelationFilter_20": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_20"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_20"
          }
        }
      },
      "customerCommunication_AccountUpdateInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_NullableIntFieldUpdateOperationsInput"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserUpdateOneRequiredWithoutAccountsNestedInput"
          }
        }
      },
      "customerCommunication_UserUpdateOneRequiredWithoutAccountsNestedInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateWithoutAccountsInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateOrConnectWithoutAccountsInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/customerCommunication_UserUpsertWithoutAccountsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereUniqueInput"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_UserUpdateWithoutAccountsInput"
          }
        }
      },
      "customerCommunication_UserCreateWithoutAccountsInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "name": {
            "type": [
              "string",
              "null"
            ]
          },
          "email": {
            "type": [
              "string",
              "null"
            ]
          },
          "emailVerified": {
            "type": [
              "string",
              "null"
            ]
          },
          "image": {
            "type": [
              "string",
              "null"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ]
          },
          "userType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_UserType",
            "enum": [
              "CALL_CENTER_REP",
              "CUSTOMER",
              "FINANCIAL_REP"
            ]
          },
          "stripeCustomerId": {
            "type": [
              "string",
              "null"
            ]
          },
          "stripeSubscriptionId": {
            "type": [
              "string",
              "null"
            ]
          },
          "stripePriceId": {
            "type": [
              "string",
              "null"
            ]
          },
          "stripeCurrentPeriodEnd": {
            "type": [
              "string",
              "null"
            ]
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateNestedManyWithoutUserInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateNestedManyWithoutUserInput"
          }
        }
      },
      "customerCommunication_InteractionCreateNestedManyWithoutUserInput_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateWithoutUserInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateOrConnectWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateManyUserInputEnvelope"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          }
        }
      },
      "customerCommunication_InteractionCreateWithoutUserInput_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "interactionType": {
            "type": "string",
            "x-graphql-enum-name": "customerCommunication_InteractionType",
            "enum": [
              "CALL",
              "CHAT",
              "EMAIL",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIAL",
              "TEXT"
            ]
          },
          "content": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateNestedOneWithoutInteractionsInput"
          }
        }
      },
      "customerCommunication_WidgetCreateNestedOneWithoutInteractionsInput_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateWithoutInteractionsInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereUniqueInput"
          }
        }
      },
      "customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateWithoutInteractionsInput"
          }
        }
      },
      "customerCommunication_InteractionCreateOrConnectWithoutUserInput_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateWithoutUserInput_4"
          }
        }
      },
      "customerCommunication_InteractionCreateManyUserInputEnvelope_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateManyUserInput"
          },
          "skipDuplicates": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      "customerCommunication_SessionCreateNestedManyWithoutUserInput_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateWithoutUserInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateOrConnectWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateManyUserInputEnvelope"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          }
        }
      },
      "customerCommunication_SessionCreateOrConnectWithoutUserInput_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateWithoutUserInput"
          }
        }
      },
      "customerCommunication_SessionCreateManyUserInputEnvelope_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateManyUserInput"
          },
          "skipDuplicates": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      "customerCommunication_UserCreateOrConnectWithoutAccountsInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateWithoutAccountsInput_2"
          }
        }
      },
      "customerCommunication_UserUpsertWithoutAccountsInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "update": {
            "$ref": "#/components/schemas/customerCommunication_UserUpdateWithoutAccountsInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateWithoutAccountsInput_2"
          }
        }
      },
      "customerCommunication_UserUpdateWithoutAccountsInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "name": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "email": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "emailVerified": {
            "$ref": "#/components/schemas/customerCommunication_NullableDateTimeFieldUpdateOperationsInput"
          },
          "image": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "userType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_UserType",
            "enum": [
              "CALL_CENTER_REP",
              "CUSTOMER",
              "FINANCIAL_REP"
            ]
          },
          "stripeCustomerId": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "stripeSubscriptionId": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "stripePriceId": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "stripeCurrentPeriodEnd": {
            "$ref": "#/components/schemas/customerCommunication_NullableDateTimeFieldUpdateOperationsInput"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpdateManyWithoutUserNestedInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpdateManyWithoutUserNestedInput"
          }
        }
      },
      "customerCommunication_InteractionUpdateManyWithoutUserNestedInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateWithoutUserInput_4"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateOrConnectWithoutUserInput_4"
          },
          "upsert": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpsertWithWhereUniqueWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateManyUserInputEnvelope_4"
          },
          "set": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "disconnect": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "delete": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpdateWithWhereUniqueWithoutUserInput"
          },
          "updateMany": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpdateManyWithWhereWithoutUserInput"
          },
          "deleteMany": {
            "$ref": "#/components/schemas/customerCommunication_InteractionScalarWhereInput"
          }
        }
      },
      "customerCommunication_InteractionUpsertWithWhereUniqueWithoutUserInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpdateWithoutUserInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateWithoutUserInput_4"
          }
        }
      },
      "customerCommunication_InteractionUpdateWithoutUserInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "interactionType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_InteractionType",
            "enum": [
              "CALL",
              "CHAT",
              "EMAIL",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIAL",
              "TEXT"
            ]
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetUpdateOneWithoutInteractionsNestedInput"
          }
        }
      },
      "customerCommunication_WidgetUpdateOneWithoutInteractionsNestedInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateWithoutInteractionsInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput_5"
          },
          "upsert": {
            "$ref": "#/components/schemas/customerCommunication_WidgetUpsertWithoutInteractionsInput"
          },
          "disconnect": {
            "type": [
              "boolean",
              "null"
            ]
          },
          "delete": {
            "type": [
              "boolean",
              "null"
            ]
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereUniqueInput"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_WidgetUpdateWithoutInteractionsInput"
          }
        }
      },
      "customerCommunication_WidgetUpsertWithoutInteractionsInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "update": {
            "$ref": "#/components/schemas/customerCommunication_WidgetUpdateWithoutInteractionsInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateWithoutInteractionsInput"
          }
        }
      },
      "customerCommunication_WidgetUpdateWithoutInteractionsInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "embeddedIn": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_InteractionUpdateWithWhereUniqueWithoutUserInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpdateWithoutUserInput"
          }
        }
      },
      "customerCommunication_InteractionUpdateManyWithWhereWithoutUserInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_InteractionScalarWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpdateManyMutationInput"
          }
        }
      },
      "customerCommunication_InteractionScalarWhereInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_InteractionScalarWhereInput"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_InteractionScalarWhereInput"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_InteractionScalarWhereInput"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "interactionType": {
            "$ref": "#/components/schemas/customerCommunication_EnumInteractionTypeFilter"
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "widgetId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          }
        }
      },
      "customerCommunication_StringFilter_25": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter"
          }
        }
      },
      "customerCommunication_NestedStringFilter_25": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter_25"
          }
        }
      },
      "customerCommunication_DateTimeFilter_23": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeFilter_23": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter_23"
          }
        }
      },
      "customerCommunication_StringNullableFilter_21": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter"
          }
        }
      },
      "customerCommunication_NestedStringNullableFilter_21": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter_21"
          }
        }
      },
      "customerCommunication_InteractionUpdateManyMutationInput_2": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "interactionType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_InteractionType",
            "enum": [
              "CALL",
              "CHAT",
              "EMAIL",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIAL",
              "TEXT"
            ]
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_SessionUpdateManyWithoutUserNestedInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateWithoutUserInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateOrConnectWithoutUserInput_5"
          },
          "upsert": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpsertWithWhereUniqueWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateManyUserInputEnvelope_5"
          },
          "set": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "disconnect": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "delete": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpdateWithWhereUniqueWithoutUserInput"
          },
          "updateMany": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpdateManyWithWhereWithoutUserInput"
          },
          "deleteMany": {
            "$ref": "#/components/schemas/customerCommunication_SessionScalarWhereInput"
          }
        }
      },
      "customerCommunication_SessionUpsertWithWhereUniqueWithoutUserInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpdateWithoutUserInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateWithoutUserInput"
          }
        }
      },
      "customerCommunication_SessionUpdateWithoutUserInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_SessionUpdateWithWhereUniqueWithoutUserInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpdateWithoutUserInput"
          }
        }
      },
      "customerCommunication_SessionUpdateManyWithWhereWithoutUserInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_SessionScalarWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpdateManyMutationInput"
          }
        }
      },
      "customerCommunication_SessionScalarWhereInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_SessionScalarWhereInput"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_SessionScalarWhereInput"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_SessionScalarWhereInput"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_25"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_25"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_25"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_23"
          }
        }
      },
      "customerCommunication_SessionUpdateManyMutationInput_2": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_AccountWhereUniqueInput_10": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "provider_providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput"
          }
        }
      },
      "customerCommunication_InteractionWhereInput_21": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_21"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_21"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_21"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_25"
          },
          "interactionType": {
            "$ref": "#/components/schemas/customerCommunication_EnumInteractionTypeFilter"
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_25"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_23"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_25"
          },
          "widgetId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_21"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetRelationFilter"
          }
        }
      },
      "customerCommunication_UserRelationFilter_21": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          }
        }
      },
      "customerCommunication_UserWhereInput_21": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_21"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_UserWhereInput_21"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_21"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_25"
          },
          "name": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_21"
          },
          "email": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_21"
          },
          "emailVerified": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "image": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_21"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_23"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_23"
          },
          "userType": {
            "$ref": "#/components/schemas/customerCommunication_EnumUserTypeNullableFilter"
          },
          "stripeCustomerId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_21"
          },
          "stripeSubscriptionId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_21"
          },
          "stripePriceId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_21"
          },
          "stripeCurrentPeriodEnd": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountListRelationFilter"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionListRelationFilter"
          }
        }
      },
      "customerCommunication_DateTimeNullableFilter_21": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeNullableFilter_21": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter_21"
          }
        }
      },
      "customerCommunication_InteractionListRelationFilter_21": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_21"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_21"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_21"
          }
        }
      },
      "customerCommunication_AccountListRelationFilter_21": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          }
        }
      },
      "customerCommunication_AccountWhereInput_21": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_21"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_21"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_21"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_25"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_25"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_25"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_25"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_25"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_21"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_21"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_IntNullableFilter"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_21"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_21"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_21"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_21"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_23"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_23"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_21"
          }
        }
      },
      "customerCommunication_IntNullableFilter_21": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter"
          }
        }
      },
      "customerCommunication_NestedIntNullableFilter_21": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter_21"
          }
        }
      },
      "customerCommunication_SessionListRelationFilter_21": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          }
        }
      },
      "customerCommunication_SessionWhereInput_21": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_21"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_21"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_21"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_25"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_25"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_25"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_23"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_21"
          }
        }
      },
      "customerCommunication_WidgetRelationFilter_21": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          }
        }
      },
      "customerCommunication_WidgetWhereInput_21": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_21"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_21"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_21"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_25"
          },
          "embeddedIn": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_25"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter_21"
          }
        }
      },
      "customerCommunication_InteractionOrderByWithRelationInput_9": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactionType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "content": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "timestamp": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "widgetId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserOrderByWithRelationInput"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetOrderByWithRelationInput"
          }
        }
      },
      "customerCommunication_UserOrderByWithRelationInput_11": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "name": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "email": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "emailVerified": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "image": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeCustomerId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeSubscriptionId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripePriceId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeCurrentPeriodEnd": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionOrderByRelationAggregateInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountOrderByRelationAggregateInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionOrderByRelationAggregateInput"
          }
        }
      },
      "customerCommunication_WidgetOrderByWithRelationInput_9": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "embeddedIn": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionOrderByRelationAggregateInput"
          }
        }
      },
      "customerCommunication_SessionOrderByWithRelationInput_9": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "sessionToken": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "expires": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserOrderByWithRelationInput_11"
          }
        }
      },
      "customerCommunication_FilterUpdateInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "audience": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_AudienceType",
            "enum": [
              "CALL_CENTER",
              "CLIENT_PORTAL",
              "GUARDIAN_ONLINE",
              "GPAC",
              "SMART_OFFICE",
              "LIVING_BALANCE_SHEET"
            ]
          },
          "output": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_OutputType",
            "enum": [
              "CALLS",
              "CHATS",
              "EMAILS",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIALS",
              "TEXTS"
            ]
          }
        }
      },
      "customerCommunication_InteractionUpdateInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "interactionType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_InteractionType",
            "enum": [
              "CALL",
              "CHAT",
              "EMAIL",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIAL",
              "TEXT"
            ]
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserUpdateOneRequiredWithoutInteractionsNestedInput"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetUpdateOneWithoutInteractionsNestedInput"
          }
        }
      },
      "customerCommunication_UserUpdateOneRequiredWithoutInteractionsNestedInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateWithoutInteractionsInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateOrConnectWithoutInteractionsInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/customerCommunication_UserUpsertWithoutInteractionsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereUniqueInput"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_UserUpdateWithoutInteractionsInput"
          }
        }
      },
      "customerCommunication_UserCreateWithoutInteractionsInput_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "name": {
            "type": [
              "string",
              "null"
            ]
          },
          "email": {
            "type": [
              "string",
              "null"
            ]
          },
          "emailVerified": {
            "type": [
              "string",
              "null"
            ]
          },
          "image": {
            "type": [
              "string",
              "null"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ]
          },
          "userType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_UserType",
            "enum": [
              "CALL_CENTER_REP",
              "CUSTOMER",
              "FINANCIAL_REP"
            ]
          },
          "stripeCustomerId": {
            "type": [
              "string",
              "null"
            ]
          },
          "stripeSubscriptionId": {
            "type": [
              "string",
              "null"
            ]
          },
          "stripePriceId": {
            "type": [
              "string",
              "null"
            ]
          },
          "stripeCurrentPeriodEnd": {
            "type": [
              "string",
              "null"
            ]
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateNestedManyWithoutUserInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateNestedManyWithoutUserInput"
          }
        }
      },
      "customerCommunication_AccountCreateNestedManyWithoutUserInput_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateWithoutUserInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateOrConnectWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateManyUserInputEnvelope"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput"
          }
        }
      },
      "customerCommunication_AccountCreateOrConnectWithoutUserInput_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateWithoutUserInput"
          }
        }
      },
      "customerCommunication_AccountWhereUniqueInput_11": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "provider_providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput"
          }
        }
      },
      "customerCommunication_AccountCreateManyUserInputEnvelope_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateManyUserInput"
          },
          "skipDuplicates": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      "customerCommunication_SessionCreateNestedManyWithoutUserInput_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateWithoutUserInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateOrConnectWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateManyUserInputEnvelope"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          }
        }
      },
      "customerCommunication_SessionCreateOrConnectWithoutUserInput_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateWithoutUserInput"
          }
        }
      },
      "customerCommunication_SessionCreateManyUserInputEnvelope_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateManyUserInput"
          },
          "skipDuplicates": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      "customerCommunication_UserCreateOrConnectWithoutInteractionsInput_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateWithoutInteractionsInput_3"
          }
        }
      },
      "customerCommunication_UserUpsertWithoutInteractionsInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "update": {
            "$ref": "#/components/schemas/customerCommunication_UserUpdateWithoutInteractionsInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateWithoutInteractionsInput_3"
          }
        }
      },
      "customerCommunication_UserUpdateWithoutInteractionsInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "name": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "email": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "emailVerified": {
            "$ref": "#/components/schemas/customerCommunication_NullableDateTimeFieldUpdateOperationsInput"
          },
          "image": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "userType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_UserType",
            "enum": [
              "CALL_CENTER_REP",
              "CUSTOMER",
              "FINANCIAL_REP"
            ]
          },
          "stripeCustomerId": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "stripeSubscriptionId": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "stripePriceId": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "stripeCurrentPeriodEnd": {
            "$ref": "#/components/schemas/customerCommunication_NullableDateTimeFieldUpdateOperationsInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpdateManyWithoutUserNestedInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpdateManyWithoutUserNestedInput"
          }
        }
      },
      "customerCommunication_AccountUpdateManyWithoutUserNestedInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateWithoutUserInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateOrConnectWithoutUserInput_5"
          },
          "upsert": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpsertWithWhereUniqueWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateManyUserInputEnvelope_5"
          },
          "set": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_11"
          },
          "disconnect": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_11"
          },
          "delete": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_11"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_11"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpdateWithWhereUniqueWithoutUserInput"
          },
          "updateMany": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpdateManyWithWhereWithoutUserInput"
          },
          "deleteMany": {
            "$ref": "#/components/schemas/customerCommunication_AccountScalarWhereInput"
          }
        }
      },
      "customerCommunication_AccountUpsertWithWhereUniqueWithoutUserInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_11"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpdateWithoutUserInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateWithoutUserInput"
          }
        }
      },
      "customerCommunication_AccountUpdateWithoutUserInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_NullableIntFieldUpdateOperationsInput"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_AccountUpdateWithWhereUniqueWithoutUserInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_11"
          },
          "data": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpdateWithoutUserInput"
          }
        }
      },
      "customerCommunication_AccountUpdateManyWithWhereWithoutUserInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_AccountScalarWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpdateManyMutationInput"
          }
        }
      },
      "customerCommunication_AccountScalarWhereInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_AccountScalarWhereInput"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_AccountScalarWhereInput"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_AccountScalarWhereInput"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_IntNullableFilter"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter"
          }
        }
      },
      "customerCommunication_StringFilter_26": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter"
          }
        }
      },
      "customerCommunication_NestedStringFilter_26": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter_26"
          }
        }
      },
      "customerCommunication_StringNullableFilter_22": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter"
          }
        }
      },
      "customerCommunication_NestedStringNullableFilter_22": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter_22"
          }
        }
      },
      "customerCommunication_IntNullableFilter_22": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter"
          }
        }
      },
      "customerCommunication_NestedIntNullableFilter_22": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter_22"
          }
        }
      },
      "customerCommunication_DateTimeFilter_24": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeFilter_24": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter_24"
          }
        }
      },
      "customerCommunication_AccountUpdateManyMutationInput_2": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_NullableIntFieldUpdateOperationsInput"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_SessionUpdateManyWithoutUserNestedInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateWithoutUserInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateOrConnectWithoutUserInput_6"
          },
          "upsert": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpsertWithWhereUniqueWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateManyUserInputEnvelope_6"
          },
          "set": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "disconnect": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "delete": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpdateWithWhereUniqueWithoutUserInput"
          },
          "updateMany": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpdateManyWithWhereWithoutUserInput"
          },
          "deleteMany": {
            "$ref": "#/components/schemas/customerCommunication_SessionScalarWhereInput"
          }
        }
      },
      "customerCommunication_SessionUpsertWithWhereUniqueWithoutUserInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpdateWithoutUserInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateWithoutUserInput"
          }
        }
      },
      "customerCommunication_SessionUpdateWithoutUserInput_2": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_SessionUpdateWithWhereUniqueWithoutUserInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpdateWithoutUserInput_2"
          }
        }
      },
      "customerCommunication_SessionUpdateManyWithWhereWithoutUserInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_SessionScalarWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpdateManyMutationInput"
          }
        }
      },
      "customerCommunication_SessionScalarWhereInput_2": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_SessionScalarWhereInput_2"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_SessionScalarWhereInput_2"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_SessionScalarWhereInput_2"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_26"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_26"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_26"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_24"
          }
        }
      },
      "customerCommunication_SessionUpdateManyMutationInput_3": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_WidgetUpdateOneWithoutInteractionsNestedInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateWithoutInteractionsInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/customerCommunication_WidgetUpsertWithoutInteractionsInput"
          },
          "disconnect": {
            "type": [
              "boolean",
              "null"
            ]
          },
          "delete": {
            "type": [
              "boolean",
              "null"
            ]
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereUniqueInput"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_WidgetUpdateWithoutInteractionsInput"
          }
        }
      },
      "customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateWithoutInteractionsInput"
          }
        }
      },
      "customerCommunication_WidgetUpsertWithoutInteractionsInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "update": {
            "$ref": "#/components/schemas/customerCommunication_WidgetUpdateWithoutInteractionsInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateWithoutInteractionsInput"
          }
        }
      },
      "customerCommunication_WidgetUpdateWithoutInteractionsInput_2": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "embeddedIn": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_AccountWhereInput_22": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_22"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_22"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_22"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_26"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_26"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_26"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_26"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_26"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_22"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_22"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_IntNullableFilter_22"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_22"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_22"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_22"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_22"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_24"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_24"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter"
          }
        }
      },
      "customerCommunication_UserRelationFilter_22": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          }
        }
      },
      "customerCommunication_UserWhereInput_22": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_22"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_UserWhereInput_22"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_22"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_26"
          },
          "name": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_22"
          },
          "email": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_22"
          },
          "emailVerified": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "image": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_22"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_24"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_24"
          },
          "userType": {
            "$ref": "#/components/schemas/customerCommunication_EnumUserTypeNullableFilter"
          },
          "stripeCustomerId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_22"
          },
          "stripeSubscriptionId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_22"
          },
          "stripePriceId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_22"
          },
          "stripeCurrentPeriodEnd": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountListRelationFilter"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionListRelationFilter"
          }
        }
      },
      "customerCommunication_DateTimeNullableFilter_22": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeNullableFilter_22": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter_22"
          }
        }
      },
      "customerCommunication_InteractionListRelationFilter_22": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput"
          }
        }
      },
      "customerCommunication_InteractionWhereInput_22": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_22"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_22"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_22"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_26"
          },
          "interactionType": {
            "$ref": "#/components/schemas/customerCommunication_EnumInteractionTypeFilter"
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_26"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_24"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_26"
          },
          "widgetId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_22"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_22"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetRelationFilter"
          }
        }
      },
      "customerCommunication_WidgetRelationFilter_22": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          }
        }
      },
      "customerCommunication_WidgetWhereInput_22": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_22"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_22"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_22"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_26"
          },
          "embeddedIn": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_26"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter_22"
          }
        }
      },
      "customerCommunication_AccountListRelationFilter_22": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_22"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_22"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_22"
          }
        }
      },
      "customerCommunication_SessionListRelationFilter_22": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          }
        }
      },
      "customerCommunication_SessionWhereInput_22": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_22"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_22"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_22"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_26"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_26"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_26"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_24"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_22"
          }
        }
      },
      "customerCommunication_AccountOrderByWithRelationInput_9": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "type": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "provider": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "providerAccountId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "refresh_token": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "access_token": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "expires_at": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "token_type": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "scope": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "id_token": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "session_state": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserOrderByWithRelationInput"
          }
        }
      },
      "customerCommunication_UserOrderByWithRelationInput_12": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "name": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "email": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "emailVerified": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "image": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeCustomerId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeSubscriptionId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripePriceId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeCurrentPeriodEnd": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionOrderByRelationAggregateInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountOrderByRelationAggregateInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionOrderByRelationAggregateInput"
          }
        }
      },
      "customerCommunication_SessionOrderByWithRelationInput_10": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "sessionToken": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "expires": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserOrderByWithRelationInput_12"
          }
        }
      },
      "customerCommunication_SessionUpdateInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserUpdateOneRequiredWithoutSessionsNestedInput"
          }
        }
      },
      "customerCommunication_UserUpdateOneRequiredWithoutSessionsNestedInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateWithoutSessionsInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateOrConnectWithoutSessionsInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/customerCommunication_UserUpsertWithoutSessionsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereUniqueInput"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_UserUpdateWithoutSessionsInput"
          }
        }
      },
      "customerCommunication_UserCreateWithoutSessionsInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "name": {
            "type": [
              "string",
              "null"
            ]
          },
          "email": {
            "type": [
              "string",
              "null"
            ]
          },
          "emailVerified": {
            "type": [
              "string",
              "null"
            ]
          },
          "image": {
            "type": [
              "string",
              "null"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ]
          },
          "userType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_UserType",
            "enum": [
              "CALL_CENTER_REP",
              "CUSTOMER",
              "FINANCIAL_REP"
            ]
          },
          "stripeCustomerId": {
            "type": [
              "string",
              "null"
            ]
          },
          "stripeSubscriptionId": {
            "type": [
              "string",
              "null"
            ]
          },
          "stripePriceId": {
            "type": [
              "string",
              "null"
            ]
          },
          "stripeCurrentPeriodEnd": {
            "type": [
              "string",
              "null"
            ]
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateNestedManyWithoutUserInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateNestedManyWithoutUserInput"
          }
        }
      },
      "customerCommunication_InteractionCreateNestedManyWithoutUserInput_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateWithoutUserInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateOrConnectWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateManyUserInputEnvelope"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          }
        }
      },
      "customerCommunication_InteractionCreateWithoutUserInput_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "interactionType": {
            "type": "string",
            "x-graphql-enum-name": "customerCommunication_InteractionType",
            "enum": [
              "CALL",
              "CHAT",
              "EMAIL",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIAL",
              "TEXT"
            ]
          },
          "content": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateNestedOneWithoutInteractionsInput"
          }
        }
      },
      "customerCommunication_WidgetCreateNestedOneWithoutInteractionsInput_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateWithoutInteractionsInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereUniqueInput"
          }
        }
      },
      "customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateWithoutInteractionsInput"
          }
        }
      },
      "customerCommunication_InteractionCreateOrConnectWithoutUserInput_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateWithoutUserInput_5"
          }
        }
      },
      "customerCommunication_InteractionCreateManyUserInputEnvelope_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateManyUserInput"
          },
          "skipDuplicates": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      "customerCommunication_AccountCreateNestedManyWithoutUserInput_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateWithoutUserInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateOrConnectWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateManyUserInputEnvelope"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput"
          }
        }
      },
      "customerCommunication_AccountCreateOrConnectWithoutUserInput_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateWithoutUserInput"
          }
        }
      },
      "customerCommunication_AccountWhereUniqueInput_12": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "provider_providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput"
          }
        }
      },
      "customerCommunication_AccountCreateManyUserInputEnvelope_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateManyUserInput"
          },
          "skipDuplicates": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      "customerCommunication_UserCreateOrConnectWithoutSessionsInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateWithoutSessionsInput_2"
          }
        }
      },
      "customerCommunication_UserUpsertWithoutSessionsInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "update": {
            "$ref": "#/components/schemas/customerCommunication_UserUpdateWithoutSessionsInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateWithoutSessionsInput_2"
          }
        }
      },
      "customerCommunication_UserUpdateWithoutSessionsInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "name": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "email": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "emailVerified": {
            "$ref": "#/components/schemas/customerCommunication_NullableDateTimeFieldUpdateOperationsInput"
          },
          "image": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "userType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_UserType",
            "enum": [
              "CALL_CENTER_REP",
              "CUSTOMER",
              "FINANCIAL_REP"
            ]
          },
          "stripeCustomerId": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "stripeSubscriptionId": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "stripePriceId": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "stripeCurrentPeriodEnd": {
            "$ref": "#/components/schemas/customerCommunication_NullableDateTimeFieldUpdateOperationsInput"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpdateManyWithoutUserNestedInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpdateManyWithoutUserNestedInput"
          }
        }
      },
      "customerCommunication_InteractionUpdateManyWithoutUserNestedInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateWithoutUserInput_5"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateOrConnectWithoutUserInput_5"
          },
          "upsert": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpsertWithWhereUniqueWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateManyUserInputEnvelope_5"
          },
          "set": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "disconnect": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "delete": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpdateWithWhereUniqueWithoutUserInput"
          },
          "updateMany": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpdateManyWithWhereWithoutUserInput"
          },
          "deleteMany": {
            "$ref": "#/components/schemas/customerCommunication_InteractionScalarWhereInput"
          }
        }
      },
      "customerCommunication_InteractionUpsertWithWhereUniqueWithoutUserInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpdateWithoutUserInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateWithoutUserInput_5"
          }
        }
      },
      "customerCommunication_InteractionUpdateWithoutUserInput_2": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "interactionType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_InteractionType",
            "enum": [
              "CALL",
              "CHAT",
              "EMAIL",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIAL",
              "TEXT"
            ]
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetUpdateOneWithoutInteractionsNestedInput"
          }
        }
      },
      "customerCommunication_WidgetUpdateOneWithoutInteractionsNestedInput_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateWithoutInteractionsInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput_7"
          },
          "upsert": {
            "$ref": "#/components/schemas/customerCommunication_WidgetUpsertWithoutInteractionsInput"
          },
          "disconnect": {
            "type": [
              "boolean",
              "null"
            ]
          },
          "delete": {
            "type": [
              "boolean",
              "null"
            ]
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereUniqueInput"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_WidgetUpdateWithoutInteractionsInput"
          }
        }
      },
      "customerCommunication_WidgetUpsertWithoutInteractionsInput_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "update": {
            "$ref": "#/components/schemas/customerCommunication_WidgetUpdateWithoutInteractionsInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateWithoutInteractionsInput"
          }
        }
      },
      "customerCommunication_WidgetUpdateWithoutInteractionsInput_3": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "embeddedIn": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_InteractionUpdateWithWhereUniqueWithoutUserInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpdateWithoutUserInput_2"
          }
        }
      },
      "customerCommunication_InteractionUpdateManyWithWhereWithoutUserInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_InteractionScalarWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpdateManyMutationInput"
          }
        }
      },
      "customerCommunication_InteractionScalarWhereInput_2": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_InteractionScalarWhereInput_2"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_InteractionScalarWhereInput_2"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_InteractionScalarWhereInput_2"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "interactionType": {
            "$ref": "#/components/schemas/customerCommunication_EnumInteractionTypeFilter"
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "widgetId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          }
        }
      },
      "customerCommunication_StringFilter_27": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter"
          }
        }
      },
      "customerCommunication_NestedStringFilter_27": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter_27"
          }
        }
      },
      "customerCommunication_DateTimeFilter_25": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeFilter_25": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter_25"
          }
        }
      },
      "customerCommunication_StringNullableFilter_23": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter"
          }
        }
      },
      "customerCommunication_NestedStringNullableFilter_23": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter_23"
          }
        }
      },
      "customerCommunication_InteractionUpdateManyMutationInput_3": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "interactionType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_InteractionType",
            "enum": [
              "CALL",
              "CHAT",
              "EMAIL",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIAL",
              "TEXT"
            ]
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_AccountUpdateManyWithoutUserNestedInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateWithoutUserInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateOrConnectWithoutUserInput_6"
          },
          "upsert": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpsertWithWhereUniqueWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateManyUserInputEnvelope_6"
          },
          "set": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_12"
          },
          "disconnect": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_12"
          },
          "delete": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_12"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_12"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpdateWithWhereUniqueWithoutUserInput"
          },
          "updateMany": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpdateManyWithWhereWithoutUserInput"
          },
          "deleteMany": {
            "$ref": "#/components/schemas/customerCommunication_AccountScalarWhereInput"
          }
        }
      },
      "customerCommunication_AccountUpsertWithWhereUniqueWithoutUserInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_12"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpdateWithoutUserInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateWithoutUserInput"
          }
        }
      },
      "customerCommunication_AccountUpdateWithoutUserInput_2": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_NullableIntFieldUpdateOperationsInput"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_AccountUpdateWithWhereUniqueWithoutUserInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_12"
          },
          "data": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpdateWithoutUserInput_2"
          }
        }
      },
      "customerCommunication_AccountUpdateManyWithWhereWithoutUserInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_AccountScalarWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpdateManyMutationInput"
          }
        }
      },
      "customerCommunication_AccountScalarWhereInput_2": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_AccountScalarWhereInput_2"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_AccountScalarWhereInput_2"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_AccountScalarWhereInput_2"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_27"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_27"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_27"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_27"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_27"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_23"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_23"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_IntNullableFilter"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_23"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_23"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_23"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_23"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_25"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_25"
          }
        }
      },
      "customerCommunication_IntNullableFilter_23": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter"
          }
        }
      },
      "customerCommunication_NestedIntNullableFilter_23": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter_23"
          }
        }
      },
      "customerCommunication_AccountUpdateManyMutationInput_3": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_NullableIntFieldUpdateOperationsInput"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_InteractionWhereInput_23": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_23"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_23"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_23"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_27"
          },
          "interactionType": {
            "$ref": "#/components/schemas/customerCommunication_EnumInteractionTypeFilter"
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_27"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_25"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_27"
          },
          "widgetId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_23"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetRelationFilter"
          }
        }
      },
      "customerCommunication_UserRelationFilter_23": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          }
        }
      },
      "customerCommunication_UserWhereInput_23": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_23"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_UserWhereInput_23"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_23"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_27"
          },
          "name": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_23"
          },
          "email": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_23"
          },
          "emailVerified": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "image": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_23"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_25"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_25"
          },
          "userType": {
            "$ref": "#/components/schemas/customerCommunication_EnumUserTypeNullableFilter"
          },
          "stripeCustomerId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_23"
          },
          "stripeSubscriptionId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_23"
          },
          "stripePriceId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_23"
          },
          "stripeCurrentPeriodEnd": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountListRelationFilter"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionListRelationFilter"
          }
        }
      },
      "customerCommunication_DateTimeNullableFilter_23": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeNullableFilter_23": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter_23"
          }
        }
      },
      "customerCommunication_InteractionListRelationFilter_23": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_23"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_23"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_23"
          }
        }
      },
      "customerCommunication_AccountListRelationFilter_23": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          }
        }
      },
      "customerCommunication_AccountWhereInput_23": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_23"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_23"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_23"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_27"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_27"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_27"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_27"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_27"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_23"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_23"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_IntNullableFilter_23"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_23"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_23"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_23"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_23"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_25"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_25"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_23"
          }
        }
      },
      "customerCommunication_SessionListRelationFilter_23": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          }
        }
      },
      "customerCommunication_SessionWhereInput_23": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_23"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_23"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_23"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_27"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_27"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_27"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_25"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_23"
          }
        }
      },
      "customerCommunication_WidgetRelationFilter_23": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          }
        }
      },
      "customerCommunication_WidgetWhereInput_23": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_23"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_23"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_23"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_27"
          },
          "embeddedIn": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_27"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter_23"
          }
        }
      },
      "customerCommunication_InteractionOrderByWithRelationInput_10": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactionType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "content": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "timestamp": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "widgetId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserOrderByWithRelationInput"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetOrderByWithRelationInput"
          }
        }
      },
      "customerCommunication_UserOrderByWithRelationInput_13": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "name": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "email": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "emailVerified": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "image": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeCustomerId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeSubscriptionId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripePriceId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeCurrentPeriodEnd": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionOrderByRelationAggregateInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountOrderByRelationAggregateInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionOrderByRelationAggregateInput"
          }
        }
      },
      "customerCommunication_WidgetOrderByWithRelationInput_10": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "embeddedIn": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionOrderByRelationAggregateInput"
          }
        }
      },
      "customerCommunication_AccountOrderByWithRelationInput_10": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "type": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "provider": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "providerAccountId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "refresh_token": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "access_token": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "expires_at": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "token_type": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "scope": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "id_token": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "session_state": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserOrderByWithRelationInput_13"
          }
        }
      },
      "customerCommunication_UserUpdateInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "name": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "email": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "emailVerified": {
            "$ref": "#/components/schemas/customerCommunication_NullableDateTimeFieldUpdateOperationsInput"
          },
          "image": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "userType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_UserType",
            "enum": [
              "CALL_CENTER_REP",
              "CUSTOMER",
              "FINANCIAL_REP"
            ]
          },
          "stripeCustomerId": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "stripeSubscriptionId": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "stripePriceId": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "stripeCurrentPeriodEnd": {
            "$ref": "#/components/schemas/customerCommunication_NullableDateTimeFieldUpdateOperationsInput"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpdateManyWithoutUserNestedInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpdateManyWithoutUserNestedInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpdateManyWithoutUserNestedInput"
          }
        }
      },
      "customerCommunication_InteractionUpdateManyWithoutUserNestedInput_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateWithoutUserInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateOrConnectWithoutUserInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpsertWithWhereUniqueWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateManyUserInputEnvelope"
          },
          "set": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "disconnect": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "delete": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpdateWithWhereUniqueWithoutUserInput"
          },
          "updateMany": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpdateManyWithWhereWithoutUserInput"
          },
          "deleteMany": {
            "$ref": "#/components/schemas/customerCommunication_InteractionScalarWhereInput"
          }
        }
      },
      "customerCommunication_InteractionCreateWithoutUserInput_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "interactionType": {
            "type": "string",
            "x-graphql-enum-name": "customerCommunication_InteractionType",
            "enum": [
              "CALL",
              "CHAT",
              "EMAIL",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIAL",
              "TEXT"
            ]
          },
          "content": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateNestedOneWithoutInteractionsInput"
          }
        }
      },
      "customerCommunication_WidgetCreateNestedOneWithoutInteractionsInput_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateWithoutInteractionsInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereUniqueInput"
          }
        }
      },
      "customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateWithoutInteractionsInput"
          }
        }
      },
      "customerCommunication_InteractionCreateOrConnectWithoutUserInput_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateWithoutUserInput_6"
          }
        }
      },
      "customerCommunication_InteractionUpsertWithWhereUniqueWithoutUserInput_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpdateWithoutUserInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateWithoutUserInput_6"
          }
        }
      },
      "customerCommunication_InteractionUpdateWithoutUserInput_3": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "interactionType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_InteractionType",
            "enum": [
              "CALL",
              "CHAT",
              "EMAIL",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIAL",
              "TEXT"
            ]
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetUpdateOneWithoutInteractionsNestedInput"
          }
        }
      },
      "customerCommunication_WidgetUpdateOneWithoutInteractionsNestedInput_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateWithoutInteractionsInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput_8"
          },
          "upsert": {
            "$ref": "#/components/schemas/customerCommunication_WidgetUpsertWithoutInteractionsInput"
          },
          "disconnect": {
            "type": [
              "boolean",
              "null"
            ]
          },
          "delete": {
            "type": [
              "boolean",
              "null"
            ]
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereUniqueInput"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_WidgetUpdateWithoutInteractionsInput"
          }
        }
      },
      "customerCommunication_WidgetUpsertWithoutInteractionsInput_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "update": {
            "$ref": "#/components/schemas/customerCommunication_WidgetUpdateWithoutInteractionsInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateWithoutInteractionsInput"
          }
        }
      },
      "customerCommunication_WidgetUpdateWithoutInteractionsInput_4": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "embeddedIn": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_InteractionCreateManyUserInputEnvelope_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateManyUserInput"
          },
          "skipDuplicates": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      "customerCommunication_InteractionUpdateWithWhereUniqueWithoutUserInput_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpdateWithoutUserInput_3"
          }
        }
      },
      "customerCommunication_InteractionUpdateManyWithWhereWithoutUserInput_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_InteractionScalarWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpdateManyMutationInput"
          }
        }
      },
      "customerCommunication_InteractionScalarWhereInput_3": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_InteractionScalarWhereInput_3"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_InteractionScalarWhereInput_3"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_InteractionScalarWhereInput_3"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "interactionType": {
            "$ref": "#/components/schemas/customerCommunication_EnumInteractionTypeFilter"
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "widgetId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          }
        }
      },
      "customerCommunication_StringFilter_28": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter"
          }
        }
      },
      "customerCommunication_NestedStringFilter_28": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter_28"
          }
        }
      },
      "customerCommunication_DateTimeFilter_26": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeFilter_26": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter_26"
          }
        }
      },
      "customerCommunication_StringNullableFilter_24": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter"
          }
        }
      },
      "customerCommunication_NestedStringNullableFilter_24": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter_24"
          }
        }
      },
      "customerCommunication_InteractionUpdateManyMutationInput_4": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "interactionType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_InteractionType",
            "enum": [
              "CALL",
              "CHAT",
              "EMAIL",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIAL",
              "TEXT"
            ]
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_AccountUpdateManyWithoutUserNestedInput_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateWithoutUserInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateOrConnectWithoutUserInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpsertWithWhereUniqueWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateManyUserInputEnvelope"
          },
          "set": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput"
          },
          "disconnect": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput"
          },
          "delete": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpdateWithWhereUniqueWithoutUserInput"
          },
          "updateMany": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpdateManyWithWhereWithoutUserInput"
          },
          "deleteMany": {
            "$ref": "#/components/schemas/customerCommunication_AccountScalarWhereInput"
          }
        }
      },
      "customerCommunication_AccountCreateOrConnectWithoutUserInput_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateWithoutUserInput"
          }
        }
      },
      "customerCommunication_AccountWhereUniqueInput_13": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "provider_providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput"
          }
        }
      },
      "customerCommunication_AccountUpsertWithWhereUniqueWithoutUserInput_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_13"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpdateWithoutUserInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateWithoutUserInput"
          }
        }
      },
      "customerCommunication_AccountUpdateWithoutUserInput_3": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_NullableIntFieldUpdateOperationsInput"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_AccountCreateManyUserInputEnvelope_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateManyUserInput"
          },
          "skipDuplicates": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      "customerCommunication_AccountUpdateWithWhereUniqueWithoutUserInput_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_13"
          },
          "data": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpdateWithoutUserInput_3"
          }
        }
      },
      "customerCommunication_AccountUpdateManyWithWhereWithoutUserInput_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_AccountScalarWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpdateManyMutationInput"
          }
        }
      },
      "customerCommunication_AccountScalarWhereInput_3": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_AccountScalarWhereInput_3"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_AccountScalarWhereInput_3"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_AccountScalarWhereInput_3"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_28"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_28"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_28"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_28"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_28"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_24"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_24"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_IntNullableFilter"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_24"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_24"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_24"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_24"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_26"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_26"
          }
        }
      },
      "customerCommunication_IntNullableFilter_24": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter"
          }
        }
      },
      "customerCommunication_NestedIntNullableFilter_24": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter_24"
          }
        }
      },
      "customerCommunication_AccountUpdateManyMutationInput_4": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_NullableIntFieldUpdateOperationsInput"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_SessionUpdateManyWithoutUserNestedInput_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateWithoutUserInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateOrConnectWithoutUserInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpsertWithWhereUniqueWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateManyUserInputEnvelope"
          },
          "set": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "disconnect": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "delete": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpdateWithWhereUniqueWithoutUserInput"
          },
          "updateMany": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpdateManyWithWhereWithoutUserInput"
          },
          "deleteMany": {
            "$ref": "#/components/schemas/customerCommunication_SessionScalarWhereInput"
          }
        }
      },
      "customerCommunication_SessionCreateOrConnectWithoutUserInput_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateWithoutUserInput"
          }
        }
      },
      "customerCommunication_SessionUpsertWithWhereUniqueWithoutUserInput_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpdateWithoutUserInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateWithoutUserInput"
          }
        }
      },
      "customerCommunication_SessionUpdateWithoutUserInput_3": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_SessionCreateManyUserInputEnvelope_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateManyUserInput"
          },
          "skipDuplicates": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      "customerCommunication_SessionUpdateWithWhereUniqueWithoutUserInput_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpdateWithoutUserInput_3"
          }
        }
      },
      "customerCommunication_SessionUpdateManyWithWhereWithoutUserInput_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_SessionScalarWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpdateManyMutationInput"
          }
        }
      },
      "customerCommunication_SessionScalarWhereInput_3": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_SessionScalarWhereInput_3"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_SessionScalarWhereInput_3"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_SessionScalarWhereInput_3"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_28"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_28"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_28"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_26"
          }
        }
      },
      "customerCommunication_SessionUpdateManyMutationInput_4": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_InteractionWhereInput_24": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_24"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_24"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_24"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_28"
          },
          "interactionType": {
            "$ref": "#/components/schemas/customerCommunication_EnumInteractionTypeFilter"
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_28"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_26"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_28"
          },
          "widgetId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_24"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetRelationFilter"
          }
        }
      },
      "customerCommunication_UserRelationFilter_24": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          }
        }
      },
      "customerCommunication_UserWhereInput_24": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_24"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_UserWhereInput_24"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_24"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_28"
          },
          "name": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_24"
          },
          "email": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_24"
          },
          "emailVerified": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "image": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_24"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_26"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_26"
          },
          "userType": {
            "$ref": "#/components/schemas/customerCommunication_EnumUserTypeNullableFilter"
          },
          "stripeCustomerId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_24"
          },
          "stripeSubscriptionId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_24"
          },
          "stripePriceId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_24"
          },
          "stripeCurrentPeriodEnd": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountListRelationFilter"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionListRelationFilter"
          }
        }
      },
      "customerCommunication_DateTimeNullableFilter_24": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeNullableFilter_24": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter_24"
          }
        }
      },
      "customerCommunication_InteractionListRelationFilter_24": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_24"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_24"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_24"
          }
        }
      },
      "customerCommunication_AccountListRelationFilter_24": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          }
        }
      },
      "customerCommunication_AccountWhereInput_24": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_24"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_24"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_24"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_28"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_28"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_28"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_28"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_28"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_24"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_24"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_IntNullableFilter_24"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_24"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_24"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_24"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_24"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_26"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_26"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_24"
          }
        }
      },
      "customerCommunication_SessionListRelationFilter_24": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          }
        }
      },
      "customerCommunication_SessionWhereInput_24": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_24"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_24"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_24"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_28"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_28"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_28"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_26"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_24"
          }
        }
      },
      "customerCommunication_WidgetRelationFilter_24": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          }
        }
      },
      "customerCommunication_WidgetWhereInput_24": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_24"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_24"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_24"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_28"
          },
          "embeddedIn": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_28"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter_24"
          }
        }
      },
      "customerCommunication_InteractionOrderByWithRelationInput_11": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactionType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "content": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "timestamp": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "widgetId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserOrderByWithRelationInput"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetOrderByWithRelationInput"
          }
        }
      },
      "customerCommunication_UserOrderByWithRelationInput_14": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "name": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "email": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "emailVerified": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "image": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeCustomerId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeSubscriptionId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripePriceId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeCurrentPeriodEnd": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionOrderByRelationAggregateInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountOrderByRelationAggregateInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionOrderByRelationAggregateInput"
          }
        }
      },
      "customerCommunication_WidgetOrderByWithRelationInput_11": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "embeddedIn": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionOrderByRelationAggregateInput"
          }
        }
      },
      "customerCommunication_AccountOrderByWithRelationInput_11": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "type": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "provider": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "providerAccountId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "refresh_token": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "access_token": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "expires_at": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "token_type": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "scope": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "id_token": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "session_state": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserOrderByWithRelationInput_14"
          }
        }
      },
      "customerCommunication_SessionOrderByWithRelationInput_11": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "sessionToken": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "expires": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserOrderByWithRelationInput_14"
          }
        }
      },
      "customerCommunication_VerificationTokenUpdateInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "identifier": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "token": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_VerificationTokenWhereUniqueInput_2": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "token": {
            "type": [
              "string",
              "null"
            ]
          },
          "identifier_token": {
            "$ref": "#/components/schemas/customerCommunication_VerificationTokenIdentifierTokenCompoundUniqueInput"
          }
        }
      },
      "customerCommunication_WidgetUpdateInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "embeddedIn": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpdateManyWithoutWidgetNestedInput"
          }
        }
      },
      "customerCommunication_InteractionUpdateManyWithoutWidgetNestedInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateWithoutWidgetInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateOrConnectWithoutWidgetInput"
          },
          "upsert": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpsertWithWhereUniqueWithoutWidgetInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateManyWidgetInputEnvelope"
          },
          "set": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "disconnect": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "delete": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpdateWithWhereUniqueWithoutWidgetInput"
          },
          "updateMany": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpdateManyWithWhereWithoutWidgetInput"
          },
          "deleteMany": {
            "$ref": "#/components/schemas/customerCommunication_InteractionScalarWhereInput"
          }
        }
      },
      "customerCommunication_InteractionCreateWithoutWidgetInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "interactionType": {
            "type": "string",
            "x-graphql-enum-name": "customerCommunication_InteractionType",
            "enum": [
              "CALL",
              "CHAT",
              "EMAIL",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIAL",
              "TEXT"
            ]
          },
          "content": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateNestedOneWithoutInteractionsInput"
          }
        }
      },
      "customerCommunication_UserCreateNestedOneWithoutInteractionsInput_3": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateWithoutInteractionsInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateOrConnectWithoutInteractionsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereUniqueInput"
          }
        }
      },
      "customerCommunication_UserCreateWithoutInteractionsInput_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "name": {
            "type": [
              "string",
              "null"
            ]
          },
          "email": {
            "type": [
              "string",
              "null"
            ]
          },
          "emailVerified": {
            "type": [
              "string",
              "null"
            ]
          },
          "image": {
            "type": [
              "string",
              "null"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ]
          },
          "userType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_UserType",
            "enum": [
              "CALL_CENTER_REP",
              "CUSTOMER",
              "FINANCIAL_REP"
            ]
          },
          "stripeCustomerId": {
            "type": [
              "string",
              "null"
            ]
          },
          "stripeSubscriptionId": {
            "type": [
              "string",
              "null"
            ]
          },
          "stripePriceId": {
            "type": [
              "string",
              "null"
            ]
          },
          "stripeCurrentPeriodEnd": {
            "type": [
              "string",
              "null"
            ]
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateNestedManyWithoutUserInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateNestedManyWithoutUserInput"
          }
        }
      },
      "customerCommunication_AccountCreateNestedManyWithoutUserInput_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateWithoutUserInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateOrConnectWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateManyUserInputEnvelope"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput"
          }
        }
      },
      "customerCommunication_AccountCreateOrConnectWithoutUserInput_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateWithoutUserInput"
          }
        }
      },
      "customerCommunication_AccountWhereUniqueInput_14": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "provider_providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput"
          }
        }
      },
      "customerCommunication_AccountCreateManyUserInputEnvelope_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateManyUserInput"
          },
          "skipDuplicates": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      "customerCommunication_SessionCreateNestedManyWithoutUserInput_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateWithoutUserInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateOrConnectWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateManyUserInputEnvelope"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          }
        }
      },
      "customerCommunication_SessionCreateOrConnectWithoutUserInput_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateWithoutUserInput"
          }
        }
      },
      "customerCommunication_SessionCreateManyUserInputEnvelope_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateManyUserInput"
          },
          "skipDuplicates": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      "customerCommunication_UserCreateOrConnectWithoutInteractionsInput_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateWithoutInteractionsInput_4"
          }
        }
      },
      "customerCommunication_InteractionCreateOrConnectWithoutWidgetInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateWithoutWidgetInput_2"
          }
        }
      },
      "customerCommunication_InteractionUpsertWithWhereUniqueWithoutWidgetInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpdateWithoutWidgetInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateWithoutWidgetInput_2"
          }
        }
      },
      "customerCommunication_InteractionUpdateWithoutWidgetInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "interactionType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_InteractionType",
            "enum": [
              "CALL",
              "CHAT",
              "EMAIL",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIAL",
              "TEXT"
            ]
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserUpdateOneRequiredWithoutInteractionsNestedInput"
          }
        }
      },
      "customerCommunication_UserUpdateOneRequiredWithoutInteractionsNestedInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateWithoutInteractionsInput_4"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateOrConnectWithoutInteractionsInput_4"
          },
          "upsert": {
            "$ref": "#/components/schemas/customerCommunication_UserUpsertWithoutInteractionsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereUniqueInput"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_UserUpdateWithoutInteractionsInput"
          }
        }
      },
      "customerCommunication_UserUpsertWithoutInteractionsInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "update": {
            "$ref": "#/components/schemas/customerCommunication_UserUpdateWithoutInteractionsInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateWithoutInteractionsInput_4"
          }
        }
      },
      "customerCommunication_UserUpdateWithoutInteractionsInput_2": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "name": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "email": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "emailVerified": {
            "$ref": "#/components/schemas/customerCommunication_NullableDateTimeFieldUpdateOperationsInput"
          },
          "image": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "userType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_UserType",
            "enum": [
              "CALL_CENTER_REP",
              "CUSTOMER",
              "FINANCIAL_REP"
            ]
          },
          "stripeCustomerId": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "stripeSubscriptionId": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "stripePriceId": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "stripeCurrentPeriodEnd": {
            "$ref": "#/components/schemas/customerCommunication_NullableDateTimeFieldUpdateOperationsInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpdateManyWithoutUserNestedInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpdateManyWithoutUserNestedInput"
          }
        }
      },
      "customerCommunication_AccountUpdateManyWithoutUserNestedInput_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateWithoutUserInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateOrConnectWithoutUserInput_8"
          },
          "upsert": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpsertWithWhereUniqueWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateManyUserInputEnvelope_8"
          },
          "set": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_14"
          },
          "disconnect": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_14"
          },
          "delete": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_14"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_14"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpdateWithWhereUniqueWithoutUserInput"
          },
          "updateMany": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpdateManyWithWhereWithoutUserInput"
          },
          "deleteMany": {
            "$ref": "#/components/schemas/customerCommunication_AccountScalarWhereInput"
          }
        }
      },
      "customerCommunication_AccountUpsertWithWhereUniqueWithoutUserInput_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_14"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpdateWithoutUserInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateWithoutUserInput"
          }
        }
      },
      "customerCommunication_AccountUpdateWithoutUserInput_4": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_NullableIntFieldUpdateOperationsInput"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_AccountUpdateWithWhereUniqueWithoutUserInput_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_14"
          },
          "data": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpdateWithoutUserInput_4"
          }
        }
      },
      "customerCommunication_AccountUpdateManyWithWhereWithoutUserInput_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_AccountScalarWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpdateManyMutationInput"
          }
        }
      },
      "customerCommunication_AccountScalarWhereInput_4": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_AccountScalarWhereInput_4"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_AccountScalarWhereInput_4"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_AccountScalarWhereInput_4"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_IntNullableFilter"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter"
          }
        }
      },
      "customerCommunication_StringFilter_29": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter"
          }
        }
      },
      "customerCommunication_NestedStringFilter_29": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter_29"
          }
        }
      },
      "customerCommunication_StringNullableFilter_25": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter"
          }
        }
      },
      "customerCommunication_NestedStringNullableFilter_25": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter_25"
          }
        }
      },
      "customerCommunication_IntNullableFilter_25": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter"
          }
        }
      },
      "customerCommunication_NestedIntNullableFilter_25": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter_25"
          }
        }
      },
      "customerCommunication_DateTimeFilter_27": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeFilter_27": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter_27"
          }
        }
      },
      "customerCommunication_AccountUpdateManyMutationInput_5": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_NullableIntFieldUpdateOperationsInput"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_SessionUpdateManyWithoutUserNestedInput_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateWithoutUserInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateOrConnectWithoutUserInput_8"
          },
          "upsert": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpsertWithWhereUniqueWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateManyUserInputEnvelope_8"
          },
          "set": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "disconnect": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "delete": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpdateWithWhereUniqueWithoutUserInput"
          },
          "updateMany": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpdateManyWithWhereWithoutUserInput"
          },
          "deleteMany": {
            "$ref": "#/components/schemas/customerCommunication_SessionScalarWhereInput"
          }
        }
      },
      "customerCommunication_SessionUpsertWithWhereUniqueWithoutUserInput_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpdateWithoutUserInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateWithoutUserInput"
          }
        }
      },
      "customerCommunication_SessionUpdateWithoutUserInput_4": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_SessionUpdateWithWhereUniqueWithoutUserInput_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpdateWithoutUserInput_4"
          }
        }
      },
      "customerCommunication_SessionUpdateManyWithWhereWithoutUserInput_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_SessionScalarWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpdateManyMutationInput"
          }
        }
      },
      "customerCommunication_SessionScalarWhereInput_4": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_SessionScalarWhereInput_4"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_SessionScalarWhereInput_4"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_SessionScalarWhereInput_4"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_29"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_29"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_29"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_27"
          }
        }
      },
      "customerCommunication_SessionUpdateManyMutationInput_5": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_InteractionCreateManyWidgetInputEnvelope_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateManyWidgetInput"
          },
          "skipDuplicates": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      "customerCommunication_InteractionUpdateWithWhereUniqueWithoutWidgetInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpdateWithoutWidgetInput"
          }
        }
      },
      "customerCommunication_InteractionUpdateManyWithWhereWithoutWidgetInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_InteractionScalarWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpdateManyMutationInput"
          }
        }
      },
      "customerCommunication_InteractionScalarWhereInput_4": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_InteractionScalarWhereInput_4"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_InteractionScalarWhereInput_4"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_InteractionScalarWhereInput_4"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_29"
          },
          "interactionType": {
            "$ref": "#/components/schemas/customerCommunication_EnumInteractionTypeFilter"
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_29"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_27"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_29"
          },
          "widgetId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_25"
          }
        }
      },
      "customerCommunication_InteractionUpdateManyMutationInput_5": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "interactionType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_InteractionType",
            "enum": [
              "CALL",
              "CHAT",
              "EMAIL",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIAL",
              "TEXT"
            ]
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_InteractionWhereInput_25": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_25"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_25"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_25"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_29"
          },
          "interactionType": {
            "$ref": "#/components/schemas/customerCommunication_EnumInteractionTypeFilter"
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_29"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_27"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_29"
          },
          "widgetId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_25"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetRelationFilter"
          }
        }
      },
      "customerCommunication_UserRelationFilter_25": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          }
        }
      },
      "customerCommunication_UserWhereInput_25": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_25"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_UserWhereInput_25"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_25"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_29"
          },
          "name": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_25"
          },
          "email": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_25"
          },
          "emailVerified": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "image": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_25"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_27"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_27"
          },
          "userType": {
            "$ref": "#/components/schemas/customerCommunication_EnumUserTypeNullableFilter"
          },
          "stripeCustomerId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_25"
          },
          "stripeSubscriptionId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_25"
          },
          "stripePriceId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_25"
          },
          "stripeCurrentPeriodEnd": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountListRelationFilter"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionListRelationFilter"
          }
        }
      },
      "customerCommunication_DateTimeNullableFilter_25": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeNullableFilter_25": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter_25"
          }
        }
      },
      "customerCommunication_InteractionListRelationFilter_25": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_25"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_25"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_25"
          }
        }
      },
      "customerCommunication_AccountListRelationFilter_25": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          }
        }
      },
      "customerCommunication_AccountWhereInput_25": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_25"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_25"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_25"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_29"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_29"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_29"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_29"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_29"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_25"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_25"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_IntNullableFilter_25"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_25"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_25"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_25"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_25"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_27"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_27"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_25"
          }
        }
      },
      "customerCommunication_SessionListRelationFilter_25": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          }
        }
      },
      "customerCommunication_SessionWhereInput_25": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_25"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_25"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_25"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_29"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_29"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_29"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_27"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_25"
          }
        }
      },
      "customerCommunication_WidgetRelationFilter_25": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          }
        }
      },
      "customerCommunication_WidgetWhereInput_25": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_25"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_25"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_25"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_29"
          },
          "embeddedIn": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_29"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter_25"
          }
        }
      },
      "customerCommunication_InteractionOrderByWithRelationInput_12": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactionType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "content": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "timestamp": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "widgetId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserOrderByWithRelationInput"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetOrderByWithRelationInput"
          }
        }
      },
      "customerCommunication_UserOrderByWithRelationInput_15": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "name": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "email": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "emailVerified": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "image": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeCustomerId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeSubscriptionId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripePriceId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeCurrentPeriodEnd": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionOrderByRelationAggregateInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountOrderByRelationAggregateInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionOrderByRelationAggregateInput"
          }
        }
      },
      "customerCommunication_WidgetOrderByWithRelationInput_12": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "embeddedIn": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionOrderByRelationAggregateInput"
          }
        }
      },
      "customerCommunication_AccountOrderByWithRelationInput_12": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "type": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "provider": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "providerAccountId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "refresh_token": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "access_token": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "expires_at": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "token_type": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "scope": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "id_token": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "session_state": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserOrderByWithRelationInput_15"
          }
        }
      },
      "customerCommunication_SessionOrderByWithRelationInput_12": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "sessionToken": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "expires": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserOrderByWithRelationInput_15"
          }
        }
      },
      "customerCommunication_AccountWhereUniqueInput_15": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "provider_providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput"
          }
        }
      },
      "customerCommunication_AccountCreateInput_2": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "type": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "providerAccountId": {
            "type": "string"
          },
          "refresh_token": {
            "type": [
              "string",
              "null"
            ]
          },
          "access_token": {
            "type": [
              "string",
              "null"
            ]
          },
          "expires_at": {
            "type": [
              "integer",
              "null"
            ]
          },
          "token_type": {
            "type": [
              "string",
              "null"
            ]
          },
          "scope": {
            "type": [
              "string",
              "null"
            ]
          },
          "id_token": {
            "type": [
              "string",
              "null"
            ]
          },
          "session_state": {
            "type": [
              "string",
              "null"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateNestedOneWithoutAccountsInput"
          }
        },
        "required": [
          "type",
          "provider",
          "providerAccountId",
          "user"
        ]
      },
      "customerCommunication_UserCreateNestedOneWithoutAccountsInput_2": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateWithoutAccountsInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateOrConnectWithoutAccountsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereUniqueInput"
          }
        }
      },
      "customerCommunication_UserCreateWithoutAccountsInput_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "name": {
            "type": [
              "string",
              "null"
            ]
          },
          "email": {
            "type": [
              "string",
              "null"
            ]
          },
          "emailVerified": {
            "type": [
              "string",
              "null"
            ]
          },
          "image": {
            "type": [
              "string",
              "null"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ]
          },
          "userType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_UserType",
            "enum": [
              "CALL_CENTER_REP",
              "CUSTOMER",
              "FINANCIAL_REP"
            ]
          },
          "stripeCustomerId": {
            "type": [
              "string",
              "null"
            ]
          },
          "stripeSubscriptionId": {
            "type": [
              "string",
              "null"
            ]
          },
          "stripePriceId": {
            "type": [
              "string",
              "null"
            ]
          },
          "stripeCurrentPeriodEnd": {
            "type": [
              "string",
              "null"
            ]
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateNestedManyWithoutUserInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateNestedManyWithoutUserInput"
          }
        }
      },
      "customerCommunication_InteractionCreateNestedManyWithoutUserInput_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateWithoutUserInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateOrConnectWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateManyUserInputEnvelope"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          }
        }
      },
      "customerCommunication_InteractionCreateWithoutUserInput_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "interactionType": {
            "type": "string",
            "x-graphql-enum-name": "customerCommunication_InteractionType",
            "enum": [
              "CALL",
              "CHAT",
              "EMAIL",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIAL",
              "TEXT"
            ]
          },
          "content": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateNestedOneWithoutInteractionsInput"
          }
        }
      },
      "customerCommunication_WidgetCreateNestedOneWithoutInteractionsInput_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateWithoutInteractionsInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereUniqueInput"
          }
        }
      },
      "customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput_9": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateWithoutInteractionsInput"
          }
        }
      },
      "customerCommunication_InteractionCreateOrConnectWithoutUserInput_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateWithoutUserInput_7"
          }
        }
      },
      "customerCommunication_InteractionCreateManyUserInputEnvelope_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateManyUserInput"
          },
          "skipDuplicates": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      "customerCommunication_SessionCreateNestedManyWithoutUserInput_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateWithoutUserInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateOrConnectWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateManyUserInputEnvelope"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          }
        }
      },
      "customerCommunication_SessionCreateOrConnectWithoutUserInput_9": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateWithoutUserInput"
          }
        }
      },
      "customerCommunication_SessionCreateManyUserInputEnvelope_9": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateManyUserInput"
          },
          "skipDuplicates": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      "customerCommunication_UserCreateOrConnectWithoutAccountsInput_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateWithoutAccountsInput_3"
          }
        }
      },
      "customerCommunication_AccountUpdateInput_2": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_NullableIntFieldUpdateOperationsInput"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserUpdateOneRequiredWithoutAccountsNestedInput"
          }
        }
      },
      "customerCommunication_UserUpdateOneRequiredWithoutAccountsNestedInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateWithoutAccountsInput_3"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateOrConnectWithoutAccountsInput_3"
          },
          "upsert": {
            "$ref": "#/components/schemas/customerCommunication_UserUpsertWithoutAccountsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereUniqueInput"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_UserUpdateWithoutAccountsInput"
          }
        }
      },
      "customerCommunication_UserUpsertWithoutAccountsInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "update": {
            "$ref": "#/components/schemas/customerCommunication_UserUpdateWithoutAccountsInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateWithoutAccountsInput_3"
          }
        }
      },
      "customerCommunication_UserUpdateWithoutAccountsInput_2": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "name": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "email": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "emailVerified": {
            "$ref": "#/components/schemas/customerCommunication_NullableDateTimeFieldUpdateOperationsInput"
          },
          "image": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "userType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_UserType",
            "enum": [
              "CALL_CENTER_REP",
              "CUSTOMER",
              "FINANCIAL_REP"
            ]
          },
          "stripeCustomerId": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "stripeSubscriptionId": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "stripePriceId": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "stripeCurrentPeriodEnd": {
            "$ref": "#/components/schemas/customerCommunication_NullableDateTimeFieldUpdateOperationsInput"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpdateManyWithoutUserNestedInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpdateManyWithoutUserNestedInput"
          }
        }
      },
      "customerCommunication_InteractionUpdateManyWithoutUserNestedInput_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateWithoutUserInput_7"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateOrConnectWithoutUserInput_7"
          },
          "upsert": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpsertWithWhereUniqueWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateManyUserInputEnvelope_7"
          },
          "set": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "disconnect": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "delete": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpdateWithWhereUniqueWithoutUserInput"
          },
          "updateMany": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpdateManyWithWhereWithoutUserInput"
          },
          "deleteMany": {
            "$ref": "#/components/schemas/customerCommunication_InteractionScalarWhereInput"
          }
        }
      },
      "customerCommunication_InteractionUpsertWithWhereUniqueWithoutUserInput_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpdateWithoutUserInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateWithoutUserInput_7"
          }
        }
      },
      "customerCommunication_InteractionUpdateWithoutUserInput_4": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "interactionType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_InteractionType",
            "enum": [
              "CALL",
              "CHAT",
              "EMAIL",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIAL",
              "TEXT"
            ]
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetUpdateOneWithoutInteractionsNestedInput"
          }
        }
      },
      "customerCommunication_WidgetUpdateOneWithoutInteractionsNestedInput_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateWithoutInteractionsInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput_9"
          },
          "upsert": {
            "$ref": "#/components/schemas/customerCommunication_WidgetUpsertWithoutInteractionsInput"
          },
          "disconnect": {
            "type": [
              "boolean",
              "null"
            ]
          },
          "delete": {
            "type": [
              "boolean",
              "null"
            ]
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereUniqueInput"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_WidgetUpdateWithoutInteractionsInput"
          }
        }
      },
      "customerCommunication_WidgetUpsertWithoutInteractionsInput_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "update": {
            "$ref": "#/components/schemas/customerCommunication_WidgetUpdateWithoutInteractionsInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateWithoutInteractionsInput"
          }
        }
      },
      "customerCommunication_WidgetUpdateWithoutInteractionsInput_5": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "embeddedIn": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_InteractionUpdateWithWhereUniqueWithoutUserInput_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpdateWithoutUserInput_4"
          }
        }
      },
      "customerCommunication_InteractionUpdateManyWithWhereWithoutUserInput_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_InteractionScalarWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpdateManyMutationInput"
          }
        }
      },
      "customerCommunication_InteractionScalarWhereInput_5": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_InteractionScalarWhereInput_5"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_InteractionScalarWhereInput_5"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_InteractionScalarWhereInput_5"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "interactionType": {
            "$ref": "#/components/schemas/customerCommunication_EnumInteractionTypeFilter"
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "widgetId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          }
        }
      },
      "customerCommunication_StringFilter_30": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter"
          }
        }
      },
      "customerCommunication_NestedStringFilter_30": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter_30"
          }
        }
      },
      "customerCommunication_DateTimeFilter_28": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeFilter_28": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter_28"
          }
        }
      },
      "customerCommunication_StringNullableFilter_26": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter"
          }
        }
      },
      "customerCommunication_NestedStringNullableFilter_26": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter_26"
          }
        }
      },
      "customerCommunication_InteractionUpdateManyMutationInput_6": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "interactionType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_InteractionType",
            "enum": [
              "CALL",
              "CHAT",
              "EMAIL",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIAL",
              "TEXT"
            ]
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_SessionUpdateManyWithoutUserNestedInput_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateWithoutUserInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateOrConnectWithoutUserInput_9"
          },
          "upsert": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpsertWithWhereUniqueWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateManyUserInputEnvelope_9"
          },
          "set": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "disconnect": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "delete": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpdateWithWhereUniqueWithoutUserInput"
          },
          "updateMany": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpdateManyWithWhereWithoutUserInput"
          },
          "deleteMany": {
            "$ref": "#/components/schemas/customerCommunication_SessionScalarWhereInput"
          }
        }
      },
      "customerCommunication_SessionUpsertWithWhereUniqueWithoutUserInput_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpdateWithoutUserInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateWithoutUserInput"
          }
        }
      },
      "customerCommunication_SessionUpdateWithoutUserInput_5": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_SessionUpdateWithWhereUniqueWithoutUserInput_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpdateWithoutUserInput_5"
          }
        }
      },
      "customerCommunication_SessionUpdateManyWithWhereWithoutUserInput_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_SessionScalarWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpdateManyMutationInput"
          }
        }
      },
      "customerCommunication_SessionScalarWhereInput_5": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_SessionScalarWhereInput_5"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_SessionScalarWhereInput_5"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_SessionScalarWhereInput_5"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_30"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_30"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_30"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_28"
          }
        }
      },
      "customerCommunication_SessionUpdateManyMutationInput_6": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_InteractionWhereInput_26": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_26"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_26"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_26"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_30"
          },
          "interactionType": {
            "$ref": "#/components/schemas/customerCommunication_EnumInteractionTypeFilter"
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_30"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_28"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_30"
          },
          "widgetId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_26"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetRelationFilter"
          }
        }
      },
      "customerCommunication_UserRelationFilter_26": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          }
        }
      },
      "customerCommunication_UserWhereInput_26": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_26"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_UserWhereInput_26"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_26"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_30"
          },
          "name": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_26"
          },
          "email": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_26"
          },
          "emailVerified": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "image": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_26"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_28"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_28"
          },
          "userType": {
            "$ref": "#/components/schemas/customerCommunication_EnumUserTypeNullableFilter"
          },
          "stripeCustomerId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_26"
          },
          "stripeSubscriptionId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_26"
          },
          "stripePriceId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_26"
          },
          "stripeCurrentPeriodEnd": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountListRelationFilter"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionListRelationFilter"
          }
        }
      },
      "customerCommunication_DateTimeNullableFilter_26": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeNullableFilter_26": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter_26"
          }
        }
      },
      "customerCommunication_InteractionListRelationFilter_26": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_26"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_26"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_26"
          }
        }
      },
      "customerCommunication_AccountListRelationFilter_26": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          }
        }
      },
      "customerCommunication_AccountWhereInput_26": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_26"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_26"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_26"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_30"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_30"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_30"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_30"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_30"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_26"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_26"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_IntNullableFilter"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_26"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_26"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_26"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_26"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_28"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_28"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_26"
          }
        }
      },
      "customerCommunication_IntNullableFilter_26": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter"
          }
        }
      },
      "customerCommunication_NestedIntNullableFilter_26": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter_26"
          }
        }
      },
      "customerCommunication_SessionListRelationFilter_26": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          }
        }
      },
      "customerCommunication_SessionWhereInput_26": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_26"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_26"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_26"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_30"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_30"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_30"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_28"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_26"
          }
        }
      },
      "customerCommunication_WidgetRelationFilter_26": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          }
        }
      },
      "customerCommunication_WidgetWhereInput_26": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_26"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_26"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_26"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_30"
          },
          "embeddedIn": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_30"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter_26"
          }
        }
      },
      "customerCommunication_InteractionOrderByWithRelationInput_13": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactionType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "content": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "timestamp": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "widgetId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserOrderByWithRelationInput"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetOrderByWithRelationInput"
          }
        }
      },
      "customerCommunication_UserOrderByWithRelationInput_16": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "name": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "email": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "emailVerified": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "image": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeCustomerId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeSubscriptionId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripePriceId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeCurrentPeriodEnd": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionOrderByRelationAggregateInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountOrderByRelationAggregateInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionOrderByRelationAggregateInput"
          }
        }
      },
      "customerCommunication_WidgetOrderByWithRelationInput_13": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "embeddedIn": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionOrderByRelationAggregateInput"
          }
        }
      },
      "customerCommunication_SessionOrderByWithRelationInput_13": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "sessionToken": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "expires": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserOrderByWithRelationInput_16"
          }
        }
      },
      "customerCommunication_FilterUpdateInput_2": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "audience": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_AudienceType",
            "enum": [
              "CALL_CENTER",
              "CLIENT_PORTAL",
              "GUARDIAN_ONLINE",
              "GPAC",
              "SMART_OFFICE",
              "LIVING_BALANCE_SHEET"
            ]
          },
          "output": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_OutputType",
            "enum": [
              "CALLS",
              "CHATS",
              "EMAILS",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIALS",
              "TEXTS"
            ]
          }
        }
      },
      "customerCommunication_InteractionCreateInput_2": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "interactionType": {
            "type": "string",
            "x-graphql-enum-name": "customerCommunication_InteractionType",
            "enum": [
              "CALL",
              "CHAT",
              "EMAIL",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIAL",
              "TEXT"
            ]
          },
          "content": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateNestedOneWithoutInteractionsInput"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateNestedOneWithoutInteractionsInput"
          }
        },
        "required": [
          "interactionType",
          "content",
          "timestamp",
          "user"
        ]
      },
      "customerCommunication_UserCreateNestedOneWithoutInteractionsInput_4": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateWithoutInteractionsInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateOrConnectWithoutInteractionsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereUniqueInput"
          }
        }
      },
      "customerCommunication_UserCreateWithoutInteractionsInput_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "name": {
            "type": [
              "string",
              "null"
            ]
          },
          "email": {
            "type": [
              "string",
              "null"
            ]
          },
          "emailVerified": {
            "type": [
              "string",
              "null"
            ]
          },
          "image": {
            "type": [
              "string",
              "null"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ]
          },
          "userType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_UserType",
            "enum": [
              "CALL_CENTER_REP",
              "CUSTOMER",
              "FINANCIAL_REP"
            ]
          },
          "stripeCustomerId": {
            "type": [
              "string",
              "null"
            ]
          },
          "stripeSubscriptionId": {
            "type": [
              "string",
              "null"
            ]
          },
          "stripePriceId": {
            "type": [
              "string",
              "null"
            ]
          },
          "stripeCurrentPeriodEnd": {
            "type": [
              "string",
              "null"
            ]
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateNestedManyWithoutUserInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateNestedManyWithoutUserInput"
          }
        }
      },
      "customerCommunication_AccountCreateNestedManyWithoutUserInput_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateWithoutUserInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateOrConnectWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateManyUserInputEnvelope"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput"
          }
        }
      },
      "customerCommunication_AccountCreateOrConnectWithoutUserInput_9": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateWithoutUserInput"
          }
        }
      },
      "customerCommunication_AccountWhereUniqueInput_16": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "provider_providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput"
          }
        }
      },
      "customerCommunication_AccountCreateManyUserInputEnvelope_9": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateManyUserInput"
          },
          "skipDuplicates": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      "customerCommunication_SessionCreateNestedManyWithoutUserInput_9": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateWithoutUserInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateOrConnectWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateManyUserInputEnvelope"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          }
        }
      },
      "customerCommunication_SessionCreateOrConnectWithoutUserInput_10": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateWithoutUserInput"
          }
        }
      },
      "customerCommunication_SessionCreateManyUserInputEnvelope_10": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateManyUserInput"
          },
          "skipDuplicates": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      "customerCommunication_UserCreateOrConnectWithoutInteractionsInput_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateWithoutInteractionsInput_5"
          }
        }
      },
      "customerCommunication_WidgetCreateNestedOneWithoutInteractionsInput_9": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateWithoutInteractionsInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereUniqueInput"
          }
        }
      },
      "customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput_10": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateWithoutInteractionsInput"
          }
        }
      },
      "customerCommunication_InteractionUpdateInput_2": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "interactionType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_InteractionType",
            "enum": [
              "CALL",
              "CHAT",
              "EMAIL",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIAL",
              "TEXT"
            ]
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserUpdateOneRequiredWithoutInteractionsNestedInput"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetUpdateOneWithoutInteractionsNestedInput"
          }
        }
      },
      "customerCommunication_UserUpdateOneRequiredWithoutInteractionsNestedInput_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateWithoutInteractionsInput_5"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateOrConnectWithoutInteractionsInput_5"
          },
          "upsert": {
            "$ref": "#/components/schemas/customerCommunication_UserUpsertWithoutInteractionsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereUniqueInput"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_UserUpdateWithoutInteractionsInput"
          }
        }
      },
      "customerCommunication_UserUpsertWithoutInteractionsInput_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "update": {
            "$ref": "#/components/schemas/customerCommunication_UserUpdateWithoutInteractionsInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateWithoutInteractionsInput_5"
          }
        }
      },
      "customerCommunication_UserUpdateWithoutInteractionsInput_3": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "name": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "email": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "emailVerified": {
            "$ref": "#/components/schemas/customerCommunication_NullableDateTimeFieldUpdateOperationsInput"
          },
          "image": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "userType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_UserType",
            "enum": [
              "CALL_CENTER_REP",
              "CUSTOMER",
              "FINANCIAL_REP"
            ]
          },
          "stripeCustomerId": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "stripeSubscriptionId": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "stripePriceId": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "stripeCurrentPeriodEnd": {
            "$ref": "#/components/schemas/customerCommunication_NullableDateTimeFieldUpdateOperationsInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpdateManyWithoutUserNestedInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpdateManyWithoutUserNestedInput"
          }
        }
      },
      "customerCommunication_AccountUpdateManyWithoutUserNestedInput_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateWithoutUserInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateOrConnectWithoutUserInput_9"
          },
          "upsert": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpsertWithWhereUniqueWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateManyUserInputEnvelope_9"
          },
          "set": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_16"
          },
          "disconnect": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_16"
          },
          "delete": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_16"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_16"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpdateWithWhereUniqueWithoutUserInput"
          },
          "updateMany": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpdateManyWithWhereWithoutUserInput"
          },
          "deleteMany": {
            "$ref": "#/components/schemas/customerCommunication_AccountScalarWhereInput"
          }
        }
      },
      "customerCommunication_AccountUpsertWithWhereUniqueWithoutUserInput_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_16"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpdateWithoutUserInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateWithoutUserInput"
          }
        }
      },
      "customerCommunication_AccountUpdateWithoutUserInput_5": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_NullableIntFieldUpdateOperationsInput"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_AccountUpdateWithWhereUniqueWithoutUserInput_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_16"
          },
          "data": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpdateWithoutUserInput_5"
          }
        }
      },
      "customerCommunication_AccountUpdateManyWithWhereWithoutUserInput_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_AccountScalarWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpdateManyMutationInput"
          }
        }
      },
      "customerCommunication_AccountScalarWhereInput_5": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_AccountScalarWhereInput_5"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_AccountScalarWhereInput_5"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_AccountScalarWhereInput_5"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_IntNullableFilter"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter"
          }
        }
      },
      "customerCommunication_StringFilter_31": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter"
          }
        }
      },
      "customerCommunication_NestedStringFilter_31": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter_31"
          }
        }
      },
      "customerCommunication_StringNullableFilter_27": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter"
          }
        }
      },
      "customerCommunication_NestedStringNullableFilter_27": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter_27"
          }
        }
      },
      "customerCommunication_IntNullableFilter_27": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter"
          }
        }
      },
      "customerCommunication_NestedIntNullableFilter_27": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter_27"
          }
        }
      },
      "customerCommunication_DateTimeFilter_29": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeFilter_29": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter_29"
          }
        }
      },
      "customerCommunication_AccountUpdateManyMutationInput_6": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_NullableIntFieldUpdateOperationsInput"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_SessionUpdateManyWithoutUserNestedInput_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateWithoutUserInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateOrConnectWithoutUserInput_10"
          },
          "upsert": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpsertWithWhereUniqueWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateManyUserInputEnvelope_10"
          },
          "set": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "disconnect": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "delete": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpdateWithWhereUniqueWithoutUserInput"
          },
          "updateMany": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpdateManyWithWhereWithoutUserInput"
          },
          "deleteMany": {
            "$ref": "#/components/schemas/customerCommunication_SessionScalarWhereInput"
          }
        }
      },
      "customerCommunication_SessionUpsertWithWhereUniqueWithoutUserInput_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpdateWithoutUserInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateWithoutUserInput"
          }
        }
      },
      "customerCommunication_SessionUpdateWithoutUserInput_6": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_SessionUpdateWithWhereUniqueWithoutUserInput_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpdateWithoutUserInput_6"
          }
        }
      },
      "customerCommunication_SessionUpdateManyWithWhereWithoutUserInput_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_SessionScalarWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpdateManyMutationInput"
          }
        }
      },
      "customerCommunication_SessionScalarWhereInput_6": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_SessionScalarWhereInput_6"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_SessionScalarWhereInput_6"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_SessionScalarWhereInput_6"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_31"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_31"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_31"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_29"
          }
        }
      },
      "customerCommunication_SessionUpdateManyMutationInput_7": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_WidgetUpdateOneWithoutInteractionsNestedInput_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateWithoutInteractionsInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput_10"
          },
          "upsert": {
            "$ref": "#/components/schemas/customerCommunication_WidgetUpsertWithoutInteractionsInput"
          },
          "disconnect": {
            "type": [
              "boolean",
              "null"
            ]
          },
          "delete": {
            "type": [
              "boolean",
              "null"
            ]
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereUniqueInput"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_WidgetUpdateWithoutInteractionsInput"
          }
        }
      },
      "customerCommunication_WidgetUpsertWithoutInteractionsInput_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "update": {
            "$ref": "#/components/schemas/customerCommunication_WidgetUpdateWithoutInteractionsInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateWithoutInteractionsInput"
          }
        }
      },
      "customerCommunication_WidgetUpdateWithoutInteractionsInput_6": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "embeddedIn": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_AccountWhereInput_27": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_27"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_27"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_27"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_31"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_31"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_31"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_31"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_31"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_27"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_27"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_IntNullableFilter_27"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_27"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_27"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_27"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_27"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_29"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_29"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter"
          }
        }
      },
      "customerCommunication_UserRelationFilter_27": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          }
        }
      },
      "customerCommunication_UserWhereInput_27": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_27"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_UserWhereInput_27"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_27"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_31"
          },
          "name": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_27"
          },
          "email": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_27"
          },
          "emailVerified": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "image": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_27"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_29"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_29"
          },
          "userType": {
            "$ref": "#/components/schemas/customerCommunication_EnumUserTypeNullableFilter"
          },
          "stripeCustomerId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_27"
          },
          "stripeSubscriptionId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_27"
          },
          "stripePriceId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_27"
          },
          "stripeCurrentPeriodEnd": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountListRelationFilter"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionListRelationFilter"
          }
        }
      },
      "customerCommunication_DateTimeNullableFilter_27": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeNullableFilter_27": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter_27"
          }
        }
      },
      "customerCommunication_InteractionListRelationFilter_27": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput"
          }
        }
      },
      "customerCommunication_InteractionWhereInput_27": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_27"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_27"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_27"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_31"
          },
          "interactionType": {
            "$ref": "#/components/schemas/customerCommunication_EnumInteractionTypeFilter"
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_31"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_29"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_31"
          },
          "widgetId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_27"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_27"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetRelationFilter"
          }
        }
      },
      "customerCommunication_WidgetRelationFilter_27": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          }
        }
      },
      "customerCommunication_WidgetWhereInput_27": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_27"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_27"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_27"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_31"
          },
          "embeddedIn": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_31"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter_27"
          }
        }
      },
      "customerCommunication_AccountListRelationFilter_27": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_27"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_27"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_27"
          }
        }
      },
      "customerCommunication_SessionListRelationFilter_27": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          }
        }
      },
      "customerCommunication_SessionWhereInput_27": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_27"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_27"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_27"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_31"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_31"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_31"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_29"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_27"
          }
        }
      },
      "customerCommunication_AccountOrderByWithRelationInput_13": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "type": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "provider": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "providerAccountId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "refresh_token": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "access_token": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "expires_at": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "token_type": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "scope": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "id_token": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "session_state": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserOrderByWithRelationInput"
          }
        }
      },
      "customerCommunication_UserOrderByWithRelationInput_17": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "name": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "email": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "emailVerified": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "image": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeCustomerId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeSubscriptionId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripePriceId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeCurrentPeriodEnd": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionOrderByRelationAggregateInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountOrderByRelationAggregateInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionOrderByRelationAggregateInput"
          }
        }
      },
      "customerCommunication_SessionOrderByWithRelationInput_14": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "sessionToken": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "expires": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserOrderByWithRelationInput_17"
          }
        }
      },
      "customerCommunication_SessionCreateInput_2": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "sessionToken": {
            "type": "string"
          },
          "expires": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateNestedOneWithoutSessionsInput"
          }
        },
        "required": [
          "sessionToken",
          "expires",
          "user"
        ]
      },
      "customerCommunication_UserCreateNestedOneWithoutSessionsInput_2": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateWithoutSessionsInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateOrConnectWithoutSessionsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereUniqueInput"
          }
        }
      },
      "customerCommunication_UserCreateWithoutSessionsInput_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "name": {
            "type": [
              "string",
              "null"
            ]
          },
          "email": {
            "type": [
              "string",
              "null"
            ]
          },
          "emailVerified": {
            "type": [
              "string",
              "null"
            ]
          },
          "image": {
            "type": [
              "string",
              "null"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ]
          },
          "userType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_UserType",
            "enum": [
              "CALL_CENTER_REP",
              "CUSTOMER",
              "FINANCIAL_REP"
            ]
          },
          "stripeCustomerId": {
            "type": [
              "string",
              "null"
            ]
          },
          "stripeSubscriptionId": {
            "type": [
              "string",
              "null"
            ]
          },
          "stripePriceId": {
            "type": [
              "string",
              "null"
            ]
          },
          "stripeCurrentPeriodEnd": {
            "type": [
              "string",
              "null"
            ]
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateNestedManyWithoutUserInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateNestedManyWithoutUserInput"
          }
        }
      },
      "customerCommunication_InteractionCreateNestedManyWithoutUserInput_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateWithoutUserInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateOrConnectWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateManyUserInputEnvelope"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          }
        }
      },
      "customerCommunication_InteractionCreateWithoutUserInput_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "interactionType": {
            "type": "string",
            "x-graphql-enum-name": "customerCommunication_InteractionType",
            "enum": [
              "CALL",
              "CHAT",
              "EMAIL",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIAL",
              "TEXT"
            ]
          },
          "content": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateNestedOneWithoutInteractionsInput"
          }
        }
      },
      "customerCommunication_WidgetCreateNestedOneWithoutInteractionsInput_10": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateWithoutInteractionsInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereUniqueInput"
          }
        }
      },
      "customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput_11": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateWithoutInteractionsInput"
          }
        }
      },
      "customerCommunication_InteractionCreateOrConnectWithoutUserInput_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateWithoutUserInput_8"
          }
        }
      },
      "customerCommunication_InteractionCreateManyUserInputEnvelope_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateManyUserInput"
          },
          "skipDuplicates": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      "customerCommunication_AccountCreateNestedManyWithoutUserInput_9": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateWithoutUserInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateOrConnectWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateManyUserInputEnvelope"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput"
          }
        }
      },
      "customerCommunication_AccountCreateOrConnectWithoutUserInput_10": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateWithoutUserInput"
          }
        }
      },
      "customerCommunication_AccountWhereUniqueInput_17": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "provider_providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput"
          }
        }
      },
      "customerCommunication_AccountCreateManyUserInputEnvelope_10": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateManyUserInput"
          },
          "skipDuplicates": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      "customerCommunication_UserCreateOrConnectWithoutSessionsInput_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateWithoutSessionsInput_3"
          }
        }
      },
      "customerCommunication_SessionUpdateInput_2": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserUpdateOneRequiredWithoutSessionsNestedInput"
          }
        }
      },
      "customerCommunication_UserUpdateOneRequiredWithoutSessionsNestedInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateWithoutSessionsInput_3"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateOrConnectWithoutSessionsInput_3"
          },
          "upsert": {
            "$ref": "#/components/schemas/customerCommunication_UserUpsertWithoutSessionsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereUniqueInput"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_UserUpdateWithoutSessionsInput"
          }
        }
      },
      "customerCommunication_UserUpsertWithoutSessionsInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "update": {
            "$ref": "#/components/schemas/customerCommunication_UserUpdateWithoutSessionsInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateWithoutSessionsInput_3"
          }
        }
      },
      "customerCommunication_UserUpdateWithoutSessionsInput_2": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "name": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "email": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "emailVerified": {
            "$ref": "#/components/schemas/customerCommunication_NullableDateTimeFieldUpdateOperationsInput"
          },
          "image": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "userType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_UserType",
            "enum": [
              "CALL_CENTER_REP",
              "CUSTOMER",
              "FINANCIAL_REP"
            ]
          },
          "stripeCustomerId": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "stripeSubscriptionId": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "stripePriceId": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "stripeCurrentPeriodEnd": {
            "$ref": "#/components/schemas/customerCommunication_NullableDateTimeFieldUpdateOperationsInput"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpdateManyWithoutUserNestedInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpdateManyWithoutUserNestedInput"
          }
        }
      },
      "customerCommunication_InteractionUpdateManyWithoutUserNestedInput_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateWithoutUserInput_8"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateOrConnectWithoutUserInput_8"
          },
          "upsert": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpsertWithWhereUniqueWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateManyUserInputEnvelope_8"
          },
          "set": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "disconnect": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "delete": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpdateWithWhereUniqueWithoutUserInput"
          },
          "updateMany": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpdateManyWithWhereWithoutUserInput"
          },
          "deleteMany": {
            "$ref": "#/components/schemas/customerCommunication_InteractionScalarWhereInput"
          }
        }
      },
      "customerCommunication_InteractionUpsertWithWhereUniqueWithoutUserInput_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpdateWithoutUserInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateWithoutUserInput_8"
          }
        }
      },
      "customerCommunication_InteractionUpdateWithoutUserInput_5": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "interactionType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_InteractionType",
            "enum": [
              "CALL",
              "CHAT",
              "EMAIL",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIAL",
              "TEXT"
            ]
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetUpdateOneWithoutInteractionsNestedInput"
          }
        }
      },
      "customerCommunication_WidgetUpdateOneWithoutInteractionsNestedInput_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateWithoutInteractionsInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput_11"
          },
          "upsert": {
            "$ref": "#/components/schemas/customerCommunication_WidgetUpsertWithoutInteractionsInput"
          },
          "disconnect": {
            "type": [
              "boolean",
              "null"
            ]
          },
          "delete": {
            "type": [
              "boolean",
              "null"
            ]
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereUniqueInput"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_WidgetUpdateWithoutInteractionsInput"
          }
        }
      },
      "customerCommunication_WidgetUpsertWithoutInteractionsInput_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "update": {
            "$ref": "#/components/schemas/customerCommunication_WidgetUpdateWithoutInteractionsInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateWithoutInteractionsInput"
          }
        }
      },
      "customerCommunication_WidgetUpdateWithoutInteractionsInput_7": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "embeddedIn": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_InteractionUpdateWithWhereUniqueWithoutUserInput_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpdateWithoutUserInput_5"
          }
        }
      },
      "customerCommunication_InteractionUpdateManyWithWhereWithoutUserInput_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_InteractionScalarWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpdateManyMutationInput"
          }
        }
      },
      "customerCommunication_InteractionScalarWhereInput_6": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_InteractionScalarWhereInput_6"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_InteractionScalarWhereInput_6"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_InteractionScalarWhereInput_6"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "interactionType": {
            "$ref": "#/components/schemas/customerCommunication_EnumInteractionTypeFilter"
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "widgetId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          }
        }
      },
      "customerCommunication_StringFilter_32": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter"
          }
        }
      },
      "customerCommunication_NestedStringFilter_32": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter_32"
          }
        }
      },
      "customerCommunication_DateTimeFilter_30": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeFilter_30": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter_30"
          }
        }
      },
      "customerCommunication_StringNullableFilter_28": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter"
          }
        }
      },
      "customerCommunication_NestedStringNullableFilter_28": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter_28"
          }
        }
      },
      "customerCommunication_InteractionUpdateManyMutationInput_7": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "interactionType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_InteractionType",
            "enum": [
              "CALL",
              "CHAT",
              "EMAIL",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIAL",
              "TEXT"
            ]
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_AccountUpdateManyWithoutUserNestedInput_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateWithoutUserInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateOrConnectWithoutUserInput_10"
          },
          "upsert": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpsertWithWhereUniqueWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateManyUserInputEnvelope_10"
          },
          "set": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_17"
          },
          "disconnect": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_17"
          },
          "delete": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_17"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_17"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpdateWithWhereUniqueWithoutUserInput"
          },
          "updateMany": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpdateManyWithWhereWithoutUserInput"
          },
          "deleteMany": {
            "$ref": "#/components/schemas/customerCommunication_AccountScalarWhereInput"
          }
        }
      },
      "customerCommunication_AccountUpsertWithWhereUniqueWithoutUserInput_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_17"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpdateWithoutUserInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateWithoutUserInput"
          }
        }
      },
      "customerCommunication_AccountUpdateWithoutUserInput_6": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_NullableIntFieldUpdateOperationsInput"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_AccountUpdateWithWhereUniqueWithoutUserInput_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_17"
          },
          "data": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpdateWithoutUserInput_6"
          }
        }
      },
      "customerCommunication_AccountUpdateManyWithWhereWithoutUserInput_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_AccountScalarWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpdateManyMutationInput"
          }
        }
      },
      "customerCommunication_AccountScalarWhereInput_6": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_AccountScalarWhereInput_6"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_AccountScalarWhereInput_6"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_AccountScalarWhereInput_6"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_32"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_32"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_32"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_32"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_32"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_28"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_28"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_IntNullableFilter"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_28"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_28"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_28"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_28"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_30"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_30"
          }
        }
      },
      "customerCommunication_IntNullableFilter_28": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter"
          }
        }
      },
      "customerCommunication_NestedIntNullableFilter_28": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter_28"
          }
        }
      },
      "customerCommunication_AccountUpdateManyMutationInput_7": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_NullableIntFieldUpdateOperationsInput"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_InteractionWhereInput_28": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_28"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_28"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_28"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_32"
          },
          "interactionType": {
            "$ref": "#/components/schemas/customerCommunication_EnumInteractionTypeFilter"
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_32"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_30"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_32"
          },
          "widgetId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_28"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetRelationFilter"
          }
        }
      },
      "customerCommunication_UserRelationFilter_28": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          }
        }
      },
      "customerCommunication_UserWhereInput_28": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_28"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_UserWhereInput_28"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_28"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_32"
          },
          "name": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_28"
          },
          "email": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_28"
          },
          "emailVerified": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "image": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_28"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_30"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_30"
          },
          "userType": {
            "$ref": "#/components/schemas/customerCommunication_EnumUserTypeNullableFilter"
          },
          "stripeCustomerId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_28"
          },
          "stripeSubscriptionId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_28"
          },
          "stripePriceId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_28"
          },
          "stripeCurrentPeriodEnd": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountListRelationFilter"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionListRelationFilter"
          }
        }
      },
      "customerCommunication_DateTimeNullableFilter_28": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeNullableFilter_28": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter_28"
          }
        }
      },
      "customerCommunication_InteractionListRelationFilter_28": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_28"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_28"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_28"
          }
        }
      },
      "customerCommunication_AccountListRelationFilter_28": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          }
        }
      },
      "customerCommunication_AccountWhereInput_28": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_28"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_28"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_28"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_32"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_32"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_32"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_32"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_32"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_28"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_28"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_IntNullableFilter_28"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_28"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_28"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_28"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_28"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_30"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_30"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_28"
          }
        }
      },
      "customerCommunication_SessionListRelationFilter_28": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          }
        }
      },
      "customerCommunication_SessionWhereInput_28": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_28"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_28"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_28"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_32"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_32"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_32"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_30"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_28"
          }
        }
      },
      "customerCommunication_WidgetRelationFilter_28": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          }
        }
      },
      "customerCommunication_WidgetWhereInput_28": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_28"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_28"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_28"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_32"
          },
          "embeddedIn": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_32"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter_28"
          }
        }
      },
      "customerCommunication_InteractionOrderByWithRelationInput_14": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactionType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "content": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "timestamp": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "widgetId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserOrderByWithRelationInput"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetOrderByWithRelationInput"
          }
        }
      },
      "customerCommunication_UserOrderByWithRelationInput_18": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "name": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "email": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "emailVerified": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "image": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeCustomerId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeSubscriptionId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripePriceId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeCurrentPeriodEnd": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionOrderByRelationAggregateInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountOrderByRelationAggregateInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionOrderByRelationAggregateInput"
          }
        }
      },
      "customerCommunication_WidgetOrderByWithRelationInput_14": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "embeddedIn": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionOrderByRelationAggregateInput"
          }
        }
      },
      "customerCommunication_AccountOrderByWithRelationInput_14": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "type": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "provider": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "providerAccountId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "refresh_token": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "access_token": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "expires_at": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "token_type": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "scope": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "id_token": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "session_state": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserOrderByWithRelationInput_18"
          }
        }
      },
      "customerCommunication_UserCreateInput_2": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "name": {
            "type": [
              "string",
              "null"
            ]
          },
          "email": {
            "type": [
              "string",
              "null"
            ]
          },
          "emailVerified": {
            "type": [
              "string",
              "null"
            ]
          },
          "image": {
            "type": [
              "string",
              "null"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ]
          },
          "userType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_UserType",
            "enum": [
              "CALL_CENTER_REP",
              "CUSTOMER",
              "FINANCIAL_REP"
            ]
          },
          "stripeCustomerId": {
            "type": [
              "string",
              "null"
            ]
          },
          "stripeSubscriptionId": {
            "type": [
              "string",
              "null"
            ]
          },
          "stripePriceId": {
            "type": [
              "string",
              "null"
            ]
          },
          "stripeCurrentPeriodEnd": {
            "type": [
              "string",
              "null"
            ]
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateNestedManyWithoutUserInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateNestedManyWithoutUserInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateNestedManyWithoutUserInput"
          }
        }
      },
      "customerCommunication_InteractionCreateNestedManyWithoutUserInput_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateWithoutUserInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateOrConnectWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateManyUserInputEnvelope"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          }
        }
      },
      "customerCommunication_InteractionCreateWithoutUserInput_9": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "interactionType": {
            "type": "string",
            "x-graphql-enum-name": "customerCommunication_InteractionType",
            "enum": [
              "CALL",
              "CHAT",
              "EMAIL",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIAL",
              "TEXT"
            ]
          },
          "content": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateNestedOneWithoutInteractionsInput"
          }
        }
      },
      "customerCommunication_WidgetCreateNestedOneWithoutInteractionsInput_11": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateWithoutInteractionsInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereUniqueInput"
          }
        }
      },
      "customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput_12": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateWithoutInteractionsInput"
          }
        }
      },
      "customerCommunication_InteractionCreateOrConnectWithoutUserInput_9": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateWithoutUserInput_9"
          }
        }
      },
      "customerCommunication_InteractionCreateManyUserInputEnvelope_9": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateManyUserInput"
          },
          "skipDuplicates": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      "customerCommunication_AccountCreateNestedManyWithoutUserInput_10": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateWithoutUserInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateOrConnectWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateManyUserInputEnvelope"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput"
          }
        }
      },
      "customerCommunication_AccountCreateOrConnectWithoutUserInput_11": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateWithoutUserInput"
          }
        }
      },
      "customerCommunication_AccountWhereUniqueInput_18": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "provider_providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput"
          }
        }
      },
      "customerCommunication_AccountCreateManyUserInputEnvelope_11": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateManyUserInput"
          },
          "skipDuplicates": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      "customerCommunication_SessionCreateNestedManyWithoutUserInput_10": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateWithoutUserInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateOrConnectWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateManyUserInputEnvelope"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          }
        }
      },
      "customerCommunication_SessionCreateOrConnectWithoutUserInput_11": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateWithoutUserInput"
          }
        }
      },
      "customerCommunication_SessionCreateManyUserInputEnvelope_11": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateManyUserInput"
          },
          "skipDuplicates": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      "customerCommunication_UserUpdateInput_2": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "name": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "email": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "emailVerified": {
            "$ref": "#/components/schemas/customerCommunication_NullableDateTimeFieldUpdateOperationsInput"
          },
          "image": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "userType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_UserType",
            "enum": [
              "CALL_CENTER_REP",
              "CUSTOMER",
              "FINANCIAL_REP"
            ]
          },
          "stripeCustomerId": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "stripeSubscriptionId": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "stripePriceId": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "stripeCurrentPeriodEnd": {
            "$ref": "#/components/schemas/customerCommunication_NullableDateTimeFieldUpdateOperationsInput"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpdateManyWithoutUserNestedInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpdateManyWithoutUserNestedInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpdateManyWithoutUserNestedInput"
          }
        }
      },
      "customerCommunication_InteractionUpdateManyWithoutUserNestedInput_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateWithoutUserInput_9"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateOrConnectWithoutUserInput_9"
          },
          "upsert": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpsertWithWhereUniqueWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateManyUserInputEnvelope_9"
          },
          "set": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "disconnect": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "delete": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpdateWithWhereUniqueWithoutUserInput"
          },
          "updateMany": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpdateManyWithWhereWithoutUserInput"
          },
          "deleteMany": {
            "$ref": "#/components/schemas/customerCommunication_InteractionScalarWhereInput"
          }
        }
      },
      "customerCommunication_InteractionUpsertWithWhereUniqueWithoutUserInput_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpdateWithoutUserInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateWithoutUserInput_9"
          }
        }
      },
      "customerCommunication_InteractionUpdateWithoutUserInput_6": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "interactionType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_InteractionType",
            "enum": [
              "CALL",
              "CHAT",
              "EMAIL",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIAL",
              "TEXT"
            ]
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetUpdateOneWithoutInteractionsNestedInput"
          }
        }
      },
      "customerCommunication_WidgetUpdateOneWithoutInteractionsNestedInput_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateWithoutInteractionsInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateOrConnectWithoutInteractionsInput_12"
          },
          "upsert": {
            "$ref": "#/components/schemas/customerCommunication_WidgetUpsertWithoutInteractionsInput"
          },
          "disconnect": {
            "type": [
              "boolean",
              "null"
            ]
          },
          "delete": {
            "type": [
              "boolean",
              "null"
            ]
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereUniqueInput"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_WidgetUpdateWithoutInteractionsInput"
          }
        }
      },
      "customerCommunication_WidgetUpsertWithoutInteractionsInput_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "update": {
            "$ref": "#/components/schemas/customerCommunication_WidgetUpdateWithoutInteractionsInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_WidgetCreateWithoutInteractionsInput"
          }
        }
      },
      "customerCommunication_WidgetUpdateWithoutInteractionsInput_8": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "embeddedIn": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_InteractionUpdateWithWhereUniqueWithoutUserInput_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpdateWithoutUserInput_6"
          }
        }
      },
      "customerCommunication_InteractionUpdateManyWithWhereWithoutUserInput_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_InteractionScalarWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpdateManyMutationInput"
          }
        }
      },
      "customerCommunication_InteractionScalarWhereInput_7": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_InteractionScalarWhereInput_7"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_InteractionScalarWhereInput_7"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_InteractionScalarWhereInput_7"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "interactionType": {
            "$ref": "#/components/schemas/customerCommunication_EnumInteractionTypeFilter"
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "widgetId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          }
        }
      },
      "customerCommunication_StringFilter_33": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter"
          }
        }
      },
      "customerCommunication_NestedStringFilter_33": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter_33"
          }
        }
      },
      "customerCommunication_DateTimeFilter_31": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeFilter_31": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter_31"
          }
        }
      },
      "customerCommunication_StringNullableFilter_29": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter"
          }
        }
      },
      "customerCommunication_NestedStringNullableFilter_29": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter_29"
          }
        }
      },
      "customerCommunication_InteractionUpdateManyMutationInput_8": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "interactionType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_InteractionType",
            "enum": [
              "CALL",
              "CHAT",
              "EMAIL",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIAL",
              "TEXT"
            ]
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_AccountUpdateManyWithoutUserNestedInput_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateWithoutUserInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateOrConnectWithoutUserInput_11"
          },
          "upsert": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpsertWithWhereUniqueWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateManyUserInputEnvelope_11"
          },
          "set": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_18"
          },
          "disconnect": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_18"
          },
          "delete": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_18"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_18"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpdateWithWhereUniqueWithoutUserInput"
          },
          "updateMany": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpdateManyWithWhereWithoutUserInput"
          },
          "deleteMany": {
            "$ref": "#/components/schemas/customerCommunication_AccountScalarWhereInput"
          }
        }
      },
      "customerCommunication_AccountUpsertWithWhereUniqueWithoutUserInput_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_18"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpdateWithoutUserInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateWithoutUserInput"
          }
        }
      },
      "customerCommunication_AccountUpdateWithoutUserInput_7": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_NullableIntFieldUpdateOperationsInput"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_AccountUpdateWithWhereUniqueWithoutUserInput_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_18"
          },
          "data": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpdateWithoutUserInput_7"
          }
        }
      },
      "customerCommunication_AccountUpdateManyWithWhereWithoutUserInput_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_AccountScalarWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpdateManyMutationInput"
          }
        }
      },
      "customerCommunication_AccountScalarWhereInput_7": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_AccountScalarWhereInput_7"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_AccountScalarWhereInput_7"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_AccountScalarWhereInput_7"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_33"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_33"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_33"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_33"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_33"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_29"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_29"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_IntNullableFilter"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_29"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_29"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_29"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_29"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_31"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_31"
          }
        }
      },
      "customerCommunication_IntNullableFilter_29": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter"
          }
        }
      },
      "customerCommunication_NestedIntNullableFilter_29": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter_29"
          }
        }
      },
      "customerCommunication_AccountUpdateManyMutationInput_8": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_NullableIntFieldUpdateOperationsInput"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_SessionUpdateManyWithoutUserNestedInput_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateWithoutUserInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateOrConnectWithoutUserInput_11"
          },
          "upsert": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpsertWithWhereUniqueWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateManyUserInputEnvelope_11"
          },
          "set": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "disconnect": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "delete": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpdateWithWhereUniqueWithoutUserInput"
          },
          "updateMany": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpdateManyWithWhereWithoutUserInput"
          },
          "deleteMany": {
            "$ref": "#/components/schemas/customerCommunication_SessionScalarWhereInput"
          }
        }
      },
      "customerCommunication_SessionUpsertWithWhereUniqueWithoutUserInput_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpdateWithoutUserInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateWithoutUserInput"
          }
        }
      },
      "customerCommunication_SessionUpdateWithoutUserInput_7": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_SessionUpdateWithWhereUniqueWithoutUserInput_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpdateWithoutUserInput_7"
          }
        }
      },
      "customerCommunication_SessionUpdateManyWithWhereWithoutUserInput_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_SessionScalarWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpdateManyMutationInput"
          }
        }
      },
      "customerCommunication_SessionScalarWhereInput_7": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_SessionScalarWhereInput_7"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_SessionScalarWhereInput_7"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_SessionScalarWhereInput_7"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_33"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_33"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_33"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_31"
          }
        }
      },
      "customerCommunication_SessionUpdateManyMutationInput_8": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_InteractionWhereInput_29": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_29"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_29"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_29"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_33"
          },
          "interactionType": {
            "$ref": "#/components/schemas/customerCommunication_EnumInteractionTypeFilter"
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_33"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_31"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_33"
          },
          "widgetId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_29"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetRelationFilter"
          }
        }
      },
      "customerCommunication_UserRelationFilter_29": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          }
        }
      },
      "customerCommunication_UserWhereInput_29": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_29"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_UserWhereInput_29"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_29"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_33"
          },
          "name": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_29"
          },
          "email": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_29"
          },
          "emailVerified": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "image": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_29"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_31"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_31"
          },
          "userType": {
            "$ref": "#/components/schemas/customerCommunication_EnumUserTypeNullableFilter"
          },
          "stripeCustomerId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_29"
          },
          "stripeSubscriptionId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_29"
          },
          "stripePriceId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_29"
          },
          "stripeCurrentPeriodEnd": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountListRelationFilter"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionListRelationFilter"
          }
        }
      },
      "customerCommunication_DateTimeNullableFilter_29": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeNullableFilter_29": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter_29"
          }
        }
      },
      "customerCommunication_InteractionListRelationFilter_29": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_29"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_29"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_29"
          }
        }
      },
      "customerCommunication_AccountListRelationFilter_29": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          }
        }
      },
      "customerCommunication_AccountWhereInput_29": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_29"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_29"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_29"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_33"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_33"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_33"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_33"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_33"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_29"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_29"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_IntNullableFilter_29"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_29"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_29"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_29"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_29"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_31"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_31"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_29"
          }
        }
      },
      "customerCommunication_SessionListRelationFilter_29": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          }
        }
      },
      "customerCommunication_SessionWhereInput_29": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_29"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_29"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_29"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_33"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_33"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_33"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_31"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_29"
          }
        }
      },
      "customerCommunication_WidgetRelationFilter_29": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          }
        }
      },
      "customerCommunication_WidgetWhereInput_29": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_29"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_29"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_29"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_33"
          },
          "embeddedIn": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_33"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter_29"
          }
        }
      },
      "customerCommunication_InteractionOrderByWithRelationInput_15": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactionType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "content": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "timestamp": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "widgetId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserOrderByWithRelationInput"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetOrderByWithRelationInput"
          }
        }
      },
      "customerCommunication_UserOrderByWithRelationInput_19": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "name": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "email": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "emailVerified": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "image": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeCustomerId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeSubscriptionId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripePriceId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeCurrentPeriodEnd": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionOrderByRelationAggregateInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountOrderByRelationAggregateInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionOrderByRelationAggregateInput"
          }
        }
      },
      "customerCommunication_WidgetOrderByWithRelationInput_15": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "embeddedIn": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionOrderByRelationAggregateInput"
          }
        }
      },
      "customerCommunication_AccountOrderByWithRelationInput_15": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "type": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "provider": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "providerAccountId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "refresh_token": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "access_token": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "expires_at": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "token_type": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "scope": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "id_token": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "session_state": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserOrderByWithRelationInput_19"
          }
        }
      },
      "customerCommunication_SessionOrderByWithRelationInput_15": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "sessionToken": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "expires": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserOrderByWithRelationInput_19"
          }
        }
      },
      "customerCommunication_VerificationTokenWhereUniqueInput_3": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "token": {
            "type": [
              "string",
              "null"
            ]
          },
          "identifier_token": {
            "$ref": "#/components/schemas/customerCommunication_VerificationTokenIdentifierTokenCompoundUniqueInput"
          }
        }
      },
      "customerCommunication_VerificationTokenUpdateInput_2": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "identifier": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "token": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_WidgetCreateInput_2": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "embeddedIn": {
            "type": "string"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateNestedManyWithoutWidgetInput"
          }
        },
        "required": [
          "embeddedIn"
        ]
      },
      "customerCommunication_InteractionCreateNestedManyWithoutWidgetInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateWithoutWidgetInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateOrConnectWithoutWidgetInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateManyWidgetInputEnvelope"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          }
        }
      },
      "customerCommunication_InteractionCreateWithoutWidgetInput_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "interactionType": {
            "type": "string",
            "x-graphql-enum-name": "customerCommunication_InteractionType",
            "enum": [
              "CALL",
              "CHAT",
              "EMAIL",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIAL",
              "TEXT"
            ]
          },
          "content": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateNestedOneWithoutInteractionsInput"
          }
        }
      },
      "customerCommunication_UserCreateNestedOneWithoutInteractionsInput_5": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateWithoutInteractionsInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateOrConnectWithoutInteractionsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereUniqueInput"
          }
        }
      },
      "customerCommunication_UserCreateWithoutInteractionsInput_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "name": {
            "type": [
              "string",
              "null"
            ]
          },
          "email": {
            "type": [
              "string",
              "null"
            ]
          },
          "emailVerified": {
            "type": [
              "string",
              "null"
            ]
          },
          "image": {
            "type": [
              "string",
              "null"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ]
          },
          "userType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_UserType",
            "enum": [
              "CALL_CENTER_REP",
              "CUSTOMER",
              "FINANCIAL_REP"
            ]
          },
          "stripeCustomerId": {
            "type": [
              "string",
              "null"
            ]
          },
          "stripeSubscriptionId": {
            "type": [
              "string",
              "null"
            ]
          },
          "stripePriceId": {
            "type": [
              "string",
              "null"
            ]
          },
          "stripeCurrentPeriodEnd": {
            "type": [
              "string",
              "null"
            ]
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateNestedManyWithoutUserInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateNestedManyWithoutUserInput"
          }
        }
      },
      "customerCommunication_AccountCreateNestedManyWithoutUserInput_11": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateWithoutUserInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateOrConnectWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateManyUserInputEnvelope"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput"
          }
        }
      },
      "customerCommunication_AccountCreateOrConnectWithoutUserInput_12": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateWithoutUserInput"
          }
        }
      },
      "customerCommunication_AccountWhereUniqueInput_19": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          },
          "provider_providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_AccountProviderProviderAccountIdCompoundUniqueInput"
          }
        }
      },
      "customerCommunication_AccountCreateManyUserInputEnvelope_12": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateManyUserInput"
          },
          "skipDuplicates": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      "customerCommunication_SessionCreateNestedManyWithoutUserInput_11": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateWithoutUserInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateOrConnectWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateManyUserInputEnvelope"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          }
        }
      },
      "customerCommunication_SessionCreateOrConnectWithoutUserInput_12": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateWithoutUserInput"
          }
        }
      },
      "customerCommunication_SessionCreateManyUserInputEnvelope_12": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateManyUserInput"
          },
          "skipDuplicates": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      "customerCommunication_UserCreateOrConnectWithoutInteractionsInput_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateWithoutInteractionsInput_6"
          }
        }
      },
      "customerCommunication_InteractionCreateOrConnectWithoutWidgetInput_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateWithoutWidgetInput_3"
          }
        }
      },
      "customerCommunication_InteractionCreateManyWidgetInputEnvelope_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateManyWidgetInput"
          },
          "skipDuplicates": {
            "type": [
              "boolean",
              "null"
            ]
          }
        }
      },
      "customerCommunication_WidgetUpdateInput_2": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "embeddedIn": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpdateManyWithoutWidgetNestedInput"
          }
        }
      },
      "customerCommunication_InteractionUpdateManyWithoutWidgetNestedInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateWithoutWidgetInput_3"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateOrConnectWithoutWidgetInput_3"
          },
          "upsert": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpsertWithWhereUniqueWithoutWidgetInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateManyWidgetInputEnvelope_3"
          },
          "set": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "disconnect": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "delete": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpdateWithWhereUniqueWithoutWidgetInput"
          },
          "updateMany": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpdateManyWithWhereWithoutWidgetInput"
          },
          "deleteMany": {
            "$ref": "#/components/schemas/customerCommunication_InteractionScalarWhereInput"
          }
        }
      },
      "customerCommunication_InteractionUpsertWithWhereUniqueWithoutWidgetInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpdateWithoutWidgetInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_InteractionCreateWithoutWidgetInput_3"
          }
        }
      },
      "customerCommunication_InteractionUpdateWithoutWidgetInput_2": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "interactionType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_InteractionType",
            "enum": [
              "CALL",
              "CHAT",
              "EMAIL",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIAL",
              "TEXT"
            ]
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserUpdateOneRequiredWithoutInteractionsNestedInput"
          }
        }
      },
      "customerCommunication_UserUpdateOneRequiredWithoutInteractionsNestedInput_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateWithoutInteractionsInput_6"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateOrConnectWithoutInteractionsInput_6"
          },
          "upsert": {
            "$ref": "#/components/schemas/customerCommunication_UserUpsertWithoutInteractionsInput"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereUniqueInput"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_UserUpdateWithoutInteractionsInput"
          }
        }
      },
      "customerCommunication_UserUpsertWithoutInteractionsInput_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "update": {
            "$ref": "#/components/schemas/customerCommunication_UserUpdateWithoutInteractionsInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_UserCreateWithoutInteractionsInput_6"
          }
        }
      },
      "customerCommunication_UserUpdateWithoutInteractionsInput_4": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "name": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "email": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "emailVerified": {
            "$ref": "#/components/schemas/customerCommunication_NullableDateTimeFieldUpdateOperationsInput"
          },
          "image": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "userType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_UserType",
            "enum": [
              "CALL_CENTER_REP",
              "CUSTOMER",
              "FINANCIAL_REP"
            ]
          },
          "stripeCustomerId": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "stripeSubscriptionId": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "stripePriceId": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "stripeCurrentPeriodEnd": {
            "$ref": "#/components/schemas/customerCommunication_NullableDateTimeFieldUpdateOperationsInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpdateManyWithoutUserNestedInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpdateManyWithoutUserNestedInput"
          }
        }
      },
      "customerCommunication_AccountUpdateManyWithoutUserNestedInput_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateWithoutUserInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateOrConnectWithoutUserInput_12"
          },
          "upsert": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpsertWithWhereUniqueWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateManyUserInputEnvelope_12"
          },
          "set": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_19"
          },
          "disconnect": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_19"
          },
          "delete": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_19"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_19"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpdateWithWhereUniqueWithoutUserInput"
          },
          "updateMany": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpdateManyWithWhereWithoutUserInput"
          },
          "deleteMany": {
            "$ref": "#/components/schemas/customerCommunication_AccountScalarWhereInput"
          }
        }
      },
      "customerCommunication_AccountUpsertWithWhereUniqueWithoutUserInput_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_19"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpdateWithoutUserInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_AccountCreateWithoutUserInput"
          }
        }
      },
      "customerCommunication_AccountUpdateWithoutUserInput_8": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_NullableIntFieldUpdateOperationsInput"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_AccountUpdateWithWhereUniqueWithoutUserInput_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereUniqueInput_19"
          },
          "data": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpdateWithoutUserInput_8"
          }
        }
      },
      "customerCommunication_AccountUpdateManyWithWhereWithoutUserInput_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_AccountScalarWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/customerCommunication_AccountUpdateManyMutationInput"
          }
        }
      },
      "customerCommunication_AccountScalarWhereInput_8": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_AccountScalarWhereInput_8"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_AccountScalarWhereInput_8"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_AccountScalarWhereInput_8"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_IntNullableFilter"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter"
          }
        }
      },
      "customerCommunication_StringFilter_34": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter"
          }
        }
      },
      "customerCommunication_NestedStringFilter_34": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringFilter_34"
          }
        }
      },
      "customerCommunication_StringNullableFilter_30": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter"
          }
        }
      },
      "customerCommunication_NestedStringNullableFilter_30": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedStringNullableFilter_30"
          }
        }
      },
      "customerCommunication_IntNullableFilter_30": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter"
          }
        }
      },
      "customerCommunication_NestedIntNullableFilter_30": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "integer",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "lte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gt": {
            "type": [
              "integer",
              "null"
            ]
          },
          "gte": {
            "type": [
              "integer",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedIntNullableFilter_30"
          }
        }
      },
      "customerCommunication_DateTimeFilter_32": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeFilter_32": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeFilter_32"
          }
        }
      },
      "customerCommunication_AccountUpdateManyMutationInput_9": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_NullableIntFieldUpdateOperationsInput"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_NullableStringFieldUpdateOperationsInput"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_SessionUpdateManyWithoutUserNestedInput_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "create": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateWithoutUserInput"
          },
          "connectOrCreate": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateOrConnectWithoutUserInput_12"
          },
          "upsert": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpsertWithWhereUniqueWithoutUserInput"
          },
          "createMany": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateManyUserInputEnvelope_12"
          },
          "set": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "disconnect": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "delete": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "connect": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpdateWithWhereUniqueWithoutUserInput"
          },
          "updateMany": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpdateManyWithWhereWithoutUserInput"
          },
          "deleteMany": {
            "$ref": "#/components/schemas/customerCommunication_SessionScalarWhereInput"
          }
        }
      },
      "customerCommunication_SessionUpsertWithWhereUniqueWithoutUserInput_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "update": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpdateWithoutUserInput"
          },
          "create": {
            "$ref": "#/components/schemas/customerCommunication_SessionCreateWithoutUserInput"
          }
        }
      },
      "customerCommunication_SessionUpdateWithoutUserInput_8": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_SessionUpdateWithWhereUniqueWithoutUserInput_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpdateWithoutUserInput_8"
          }
        }
      },
      "customerCommunication_SessionUpdateManyWithWhereWithoutUserInput_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_SessionScalarWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/customerCommunication_SessionUpdateManyMutationInput"
          }
        }
      },
      "customerCommunication_SessionScalarWhereInput_8": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_SessionScalarWhereInput_8"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_SessionScalarWhereInput_8"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_SessionScalarWhereInput_8"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_34"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_34"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_34"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_32"
          }
        }
      },
      "customerCommunication_SessionUpdateManyMutationInput_9": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_InteractionUpdateWithWhereUniqueWithoutWidgetInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereUniqueInput"
          },
          "data": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpdateWithoutWidgetInput_2"
          }
        }
      },
      "customerCommunication_InteractionUpdateManyWithWhereWithoutWidgetInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "where": {
            "$ref": "#/components/schemas/customerCommunication_InteractionScalarWhereInput"
          },
          "data": {
            "$ref": "#/components/schemas/customerCommunication_InteractionUpdateManyMutationInput"
          }
        }
      },
      "customerCommunication_InteractionScalarWhereInput_8": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_InteractionScalarWhereInput_8"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_InteractionScalarWhereInput_8"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_InteractionScalarWhereInput_8"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_34"
          },
          "interactionType": {
            "$ref": "#/components/schemas/customerCommunication_EnumInteractionTypeFilter"
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_34"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_32"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_34"
          },
          "widgetId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_30"
          }
        }
      },
      "customerCommunication_InteractionUpdateManyMutationInput_9": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "interactionType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_InteractionType",
            "enum": [
              "CALL",
              "CHAT",
              "EMAIL",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIAL",
              "TEXT"
            ]
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFieldUpdateOperationsInput"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFieldUpdateOperationsInput"
          }
        }
      },
      "customerCommunication_InteractionWhereInput_30": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_30"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_30"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_30"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_34"
          },
          "interactionType": {
            "$ref": "#/components/schemas/customerCommunication_EnumInteractionTypeFilter"
          },
          "content": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_34"
          },
          "timestamp": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_32"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_34"
          },
          "widgetId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_30"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetRelationFilter"
          }
        }
      },
      "customerCommunication_UserRelationFilter_30": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput"
          }
        }
      },
      "customerCommunication_UserWhereInput_30": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_30"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_UserWhereInput_30"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_UserWhereInput_30"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_34"
          },
          "name": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_30"
          },
          "email": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_30"
          },
          "emailVerified": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "image": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_30"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_32"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_32"
          },
          "userType": {
            "$ref": "#/components/schemas/customerCommunication_EnumUserTypeNullableFilter"
          },
          "stripeCustomerId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_30"
          },
          "stripeSubscriptionId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_30"
          },
          "stripePriceId": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_30"
          },
          "stripeCurrentPeriodEnd": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeNullableFilter"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountListRelationFilter"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionListRelationFilter"
          }
        }
      },
      "customerCommunication_DateTimeNullableFilter_30": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter"
          }
        }
      },
      "customerCommunication_NestedDateTimeNullableFilter_30": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/customerCommunication_NestedDateTimeNullableFilter_30"
          }
        }
      },
      "customerCommunication_InteractionListRelationFilter_30": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_30"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_30"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_InteractionWhereInput_30"
          }
        }
      },
      "customerCommunication_AccountListRelationFilter_30": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput"
          }
        }
      },
      "customerCommunication_AccountWhereInput_30": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_30"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_30"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_AccountWhereInput_30"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_34"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_34"
          },
          "type": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_34"
          },
          "provider": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_34"
          },
          "providerAccountId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_34"
          },
          "refresh_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_30"
          },
          "access_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_30"
          },
          "expires_at": {
            "$ref": "#/components/schemas/customerCommunication_IntNullableFilter_30"
          },
          "token_type": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_30"
          },
          "scope": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_30"
          },
          "id_token": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_30"
          },
          "session_state": {
            "$ref": "#/components/schemas/customerCommunication_StringNullableFilter_30"
          },
          "createdAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_32"
          },
          "updatedAt": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_32"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_30"
          }
        }
      },
      "customerCommunication_SessionListRelationFilter_30": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "every": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "some": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          },
          "none": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput"
          }
        }
      },
      "customerCommunication_SessionWhereInput_30": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_30"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_30"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_SessionWhereInput_30"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_34"
          },
          "sessionToken": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_34"
          },
          "userId": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_34"
          },
          "expires": {
            "$ref": "#/components/schemas/customerCommunication_DateTimeFilter_32"
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserRelationFilter_30"
          }
        }
      },
      "customerCommunication_WidgetRelationFilter_30": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "is": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          },
          "isNot": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput"
          }
        }
      },
      "customerCommunication_WidgetWhereInput_30": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_30"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_30"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/customerCommunication_WidgetWhereInput_30"
          },
          "id": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_34"
          },
          "embeddedIn": {
            "$ref": "#/components/schemas/customerCommunication_StringFilter_34"
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionListRelationFilter_30"
          }
        }
      },
      "customerCommunication_InteractionOrderByWithRelationInput_16": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactionType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "content": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "timestamp": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "widgetId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserOrderByWithRelationInput"
          },
          "Widget": {
            "$ref": "#/components/schemas/customerCommunication_WidgetOrderByWithRelationInput"
          }
        }
      },
      "customerCommunication_UserOrderByWithRelationInput_20": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "name": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "email": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "emailVerified": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "image": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeCustomerId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeSubscriptionId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripePriceId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "stripeCurrentPeriodEnd": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionOrderByRelationAggregateInput"
          },
          "accounts": {
            "$ref": "#/components/schemas/customerCommunication_AccountOrderByRelationAggregateInput"
          },
          "sessions": {
            "$ref": "#/components/schemas/customerCommunication_SessionOrderByRelationAggregateInput"
          }
        }
      },
      "customerCommunication_WidgetOrderByWithRelationInput_16": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "embeddedIn": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "interactions": {
            "$ref": "#/components/schemas/customerCommunication_InteractionOrderByRelationAggregateInput"
          }
        }
      },
      "customerCommunication_AccountOrderByWithRelationInput_16": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "type": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "provider": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "providerAccountId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "refresh_token": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "access_token": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "expires_at": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "token_type": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "scope": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "id_token": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "session_state": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "createdAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserOrderByWithRelationInput_20"
          }
        }
      },
      "customerCommunication_SessionOrderByWithRelationInput_16": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "sessionToken": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "userId": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "expires": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "customerCommunication_SortOrder",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "user": {
            "$ref": "#/components/schemas/customerCommunication_UserOrderByWithRelationInput_20"
          }
        }
      },
      "gpac_AdminActionCreateManyInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "actionType": {
            "type": "string",
            "x-graphql-enum-name": "gpac_AdminAction_actionType",
            "enum": [
              "POLICY_CREATION",
              "POLICY_MODIFICATION",
              "POLICY_CANCELLATION",
              "USER_REGISTRATION"
            ]
          },
          "timestamp": {
            "type": "string"
          },
          "details": {},
          "userId": {
            "type": "string"
          }
        }
      },
      "gpac_PolicyCreateManyInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "policyType": {
            "type": "string",
            "x-graphql-enum-name": "gpac_Policy_policyType",
            "enum": [
              "LIFE_INSURANCE",
              "HEALTH_INSURANCE",
              "AUTO_INSURANCE"
            ]
          },
          "status": {
            "type": "string",
            "x-graphql-enum-name": "gpac_Policy_status",
            "enum": [
              "ACTIVE",
              "PENDING",
              "LAPSED",
              "CANCELLED"
            ]
          },
          "details": {},
          "userId": {
            "type": "string"
          }
        }
      },
      "gpac_UserCreateManyInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "x-graphql-enum-name": "gpac_User_role",
            "enum": [
              "ADMIN",
              "POLICY_HOLDER",
              "AGENT",
              "UNDERWRITER"
            ]
          }
        }
      },
      "gpac_AdminActionCreateInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "actionType": {
            "type": "string",
            "x-graphql-enum-name": "gpac_AdminAction_actionType",
            "enum": [
              "POLICY_CREATION",
              "POLICY_MODIFICATION",
              "POLICY_CANCELLATION",
              "USER_REGISTRATION"
            ]
          },
          "timestamp": {
            "type": "string"
          },
          "details": {},
          "userId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "actionType",
          "timestamp",
          "details",
          "userId"
        ]
      },
      "gpac_PolicyCreateInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "policyType": {
            "type": "string",
            "x-graphql-enum-name": "gpac_Policy_policyType",
            "enum": [
              "LIFE_INSURANCE",
              "HEALTH_INSURANCE",
              "AUTO_INSURANCE"
            ]
          },
          "status": {
            "type": "string",
            "x-graphql-enum-name": "gpac_Policy_status",
            "enum": [
              "ACTIVE",
              "PENDING",
              "LAPSED",
              "CANCELLED"
            ]
          },
          "details": {},
          "userId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "policyType",
          "status",
          "details",
          "userId"
        ]
      },
      "gpac_UserCreateInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "x-graphql-enum-name": "gpac_User_role",
            "enum": [
              "ADMIN",
              "POLICY_HOLDER",
              "AGENT",
              "UNDERWRITER"
            ]
          }
        },
        "required": [
          "id",
          "username",
          "password",
          "role"
        ]
      },
      "gpac_AdminActionWhereInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/gpac_AdminActionWhereInput"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/gpac_AdminActionWhereInput"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/gpac_AdminActionWhereInput"
          },
          "id": {
            "$ref": "#/components/schemas/gpac_StringFilter"
          },
          "actionType": {
            "$ref": "#/components/schemas/gpac_EnumAdminAction_actionTypeFilter"
          },
          "timestamp": {
            "$ref": "#/components/schemas/gpac_DateTimeFilter"
          },
          "details": {
            "$ref": "#/components/schemas/gpac_JsonFilter"
          },
          "userId": {
            "$ref": "#/components/schemas/gpac_StringFilter"
          }
        }
      },
      "gpac_StringFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/gpac_NestedStringFilter"
          }
        }
      },
      "gpac_NestedStringFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/gpac_NestedStringFilter"
          }
        }
      },
      "gpac_EnumAdminAction_actionTypeFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "gpac_AdminAction_actionType",
            "enum": [
              "POLICY_CREATION",
              "POLICY_MODIFICATION",
              "POLICY_CANCELLATION",
              "USER_REGISTRATION"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ],
              "x-graphql-enum-name": "gpac_AdminAction_actionType",
              "enum": [
                "POLICY_CREATION",
                "POLICY_MODIFICATION",
                "POLICY_CANCELLATION",
                "USER_REGISTRATION"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ],
              "x-graphql-enum-name": "gpac_AdminAction_actionType",
              "enum": [
                "POLICY_CREATION",
                "POLICY_MODIFICATION",
                "POLICY_CANCELLATION",
                "USER_REGISTRATION"
              ]
            }
          },
          "not": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "gpac_AdminAction_actionType",
            "enum": [
              "POLICY_CREATION",
              "POLICY_MODIFICATION",
              "POLICY_CANCELLATION",
              "USER_REGISTRATION"
            ]
          }
        }
      },
      "gpac_DateTimeFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/gpac_NestedDateTimeFilter"
          }
        }
      },
      "gpac_NestedDateTimeFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/gpac_NestedDateTimeFilter"
          }
        }
      },
      "gpac_JsonFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {},
          "path": {
            "type": [
              "string",
              "null"
            ]
          },
          "string_contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "string_starts_with": {
            "type": [
              "string",
              "null"
            ]
          },
          "string_ends_with": {
            "type": [
              "string",
              "null"
            ]
          },
          "array_contains": {},
          "array_starts_with": {},
          "array_ends_with": {},
          "lt": {},
          "lte": {},
          "gt": {},
          "gte": {},
          "not": {}
        }
      },
      "gpac_PolicyWhereInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/gpac_PolicyWhereInput"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/gpac_PolicyWhereInput"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/gpac_PolicyWhereInput"
          },
          "id": {
            "$ref": "#/components/schemas/gpac_StringFilter"
          },
          "policyType": {
            "$ref": "#/components/schemas/gpac_EnumPolicy_policyTypeFilter"
          },
          "status": {
            "$ref": "#/components/schemas/gpac_EnumPolicy_statusFilter"
          },
          "details": {
            "$ref": "#/components/schemas/gpac_JsonFilter"
          },
          "userId": {
            "$ref": "#/components/schemas/gpac_StringFilter"
          }
        }
      },
      "gpac_StringFilter_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/gpac_NestedStringFilter"
          }
        }
      },
      "gpac_NestedStringFilter_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/gpac_NestedStringFilter_2"
          }
        }
      },
      "gpac_EnumPolicy_policyTypeFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "gpac_Policy_policyType",
            "enum": [
              "LIFE_INSURANCE",
              "HEALTH_INSURANCE",
              "AUTO_INSURANCE"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ],
              "x-graphql-enum-name": "gpac_Policy_policyType",
              "enum": [
                "LIFE_INSURANCE",
                "HEALTH_INSURANCE",
                "AUTO_INSURANCE"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ],
              "x-graphql-enum-name": "gpac_Policy_policyType",
              "enum": [
                "LIFE_INSURANCE",
                "HEALTH_INSURANCE",
                "AUTO_INSURANCE"
              ]
            }
          },
          "not": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "gpac_Policy_policyType",
            "enum": [
              "LIFE_INSURANCE",
              "HEALTH_INSURANCE",
              "AUTO_INSURANCE"
            ]
          }
        }
      },
      "gpac_EnumPolicy_statusFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "gpac_Policy_status",
            "enum": [
              "ACTIVE",
              "PENDING",
              "LAPSED",
              "CANCELLED"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ],
              "x-graphql-enum-name": "gpac_Policy_status",
              "enum": [
                "ACTIVE",
                "PENDING",
                "LAPSED",
                "CANCELLED"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ],
              "x-graphql-enum-name": "gpac_Policy_status",
              "enum": [
                "ACTIVE",
                "PENDING",
                "LAPSED",
                "CANCELLED"
              ]
            }
          },
          "not": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "gpac_Policy_status",
            "enum": [
              "ACTIVE",
              "PENDING",
              "LAPSED",
              "CANCELLED"
            ]
          }
        }
      },
      "gpac_UserWhereInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/gpac_UserWhereInput"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/gpac_UserWhereInput"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/gpac_UserWhereInput"
          },
          "id": {
            "$ref": "#/components/schemas/gpac_StringFilter"
          },
          "username": {
            "$ref": "#/components/schemas/gpac_StringFilter"
          },
          "password": {
            "$ref": "#/components/schemas/gpac_StringFilter"
          },
          "role": {
            "$ref": "#/components/schemas/gpac_EnumUser_roleFilter"
          }
        }
      },
      "gpac_StringFilter_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/gpac_NestedStringFilter"
          }
        }
      },
      "gpac_NestedStringFilter_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/gpac_NestedStringFilter_3"
          }
        }
      },
      "gpac_EnumUser_roleFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "gpac_User_role",
            "enum": [
              "ADMIN",
              "POLICY_HOLDER",
              "AGENT",
              "UNDERWRITER"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ],
              "x-graphql-enum-name": "gpac_User_role",
              "enum": [
                "ADMIN",
                "POLICY_HOLDER",
                "AGENT",
                "UNDERWRITER"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ],
              "x-graphql-enum-name": "gpac_User_role",
              "enum": [
                "ADMIN",
                "POLICY_HOLDER",
                "AGENT",
                "UNDERWRITER"
              ]
            }
          },
          "not": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "gpac_User_role",
            "enum": [
              "ADMIN",
              "POLICY_HOLDER",
              "AGENT",
              "UNDERWRITER"
            ]
          }
        }
      },
      "gpac_AdminActionWhereUniqueInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "gpac_PolicyWhereUniqueInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "gpac_UserWhereUniqueInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "gpac_AdminActionUpdateManyMutationInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/gpac_StringFieldUpdateOperationsInput"
          },
          "actionType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "gpac_AdminAction_actionType",
            "enum": [
              "POLICY_CREATION",
              "POLICY_MODIFICATION",
              "POLICY_CANCELLATION",
              "USER_REGISTRATION"
            ]
          },
          "timestamp": {
            "$ref": "#/components/schemas/gpac_DateTimeFieldUpdateOperationsInput"
          },
          "details": {},
          "userId": {
            "$ref": "#/components/schemas/gpac_StringFieldUpdateOperationsInput"
          }
        }
      },
      "gpac_StringFieldUpdateOperationsInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "set": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "gpac_DateTimeFieldUpdateOperationsInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "set": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "gpac_AdminActionWhereInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/gpac_AdminActionWhereInput_2"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/gpac_AdminActionWhereInput_2"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/gpac_AdminActionWhereInput_2"
          },
          "id": {
            "$ref": "#/components/schemas/gpac_StringFilter"
          },
          "actionType": {
            "$ref": "#/components/schemas/gpac_EnumAdminAction_actionTypeFilter"
          },
          "timestamp": {
            "$ref": "#/components/schemas/gpac_DateTimeFilter"
          },
          "details": {
            "$ref": "#/components/schemas/gpac_JsonFilter"
          },
          "userId": {
            "$ref": "#/components/schemas/gpac_StringFilter"
          }
        }
      },
      "gpac_StringFilter_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/gpac_NestedStringFilter"
          }
        }
      },
      "gpac_NestedStringFilter_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/gpac_NestedStringFilter_4"
          }
        }
      },
      "gpac_DateTimeFilter_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/gpac_NestedDateTimeFilter"
          }
        }
      },
      "gpac_NestedDateTimeFilter_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/gpac_NestedDateTimeFilter_2"
          }
        }
      },
      "gpac_PolicyUpdateManyMutationInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/gpac_StringFieldUpdateOperationsInput"
          },
          "policyType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "gpac_Policy_policyType",
            "enum": [
              "LIFE_INSURANCE",
              "HEALTH_INSURANCE",
              "AUTO_INSURANCE"
            ]
          },
          "status": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "gpac_Policy_status",
            "enum": [
              "ACTIVE",
              "PENDING",
              "LAPSED",
              "CANCELLED"
            ]
          },
          "details": {},
          "userId": {
            "$ref": "#/components/schemas/gpac_StringFieldUpdateOperationsInput"
          }
        }
      },
      "gpac_PolicyWhereInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/gpac_PolicyWhereInput_2"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/gpac_PolicyWhereInput_2"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/gpac_PolicyWhereInput_2"
          },
          "id": {
            "$ref": "#/components/schemas/gpac_StringFilter"
          },
          "policyType": {
            "$ref": "#/components/schemas/gpac_EnumPolicy_policyTypeFilter"
          },
          "status": {
            "$ref": "#/components/schemas/gpac_EnumPolicy_statusFilter"
          },
          "details": {
            "$ref": "#/components/schemas/gpac_JsonFilter"
          },
          "userId": {
            "$ref": "#/components/schemas/gpac_StringFilter"
          }
        }
      },
      "gpac_StringFilter_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/gpac_NestedStringFilter"
          }
        }
      },
      "gpac_NestedStringFilter_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/gpac_NestedStringFilter_5"
          }
        }
      },
      "gpac_UserUpdateManyMutationInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/gpac_StringFieldUpdateOperationsInput"
          },
          "username": {
            "$ref": "#/components/schemas/gpac_StringFieldUpdateOperationsInput"
          },
          "password": {
            "$ref": "#/components/schemas/gpac_StringFieldUpdateOperationsInput"
          },
          "role": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "gpac_User_role",
            "enum": [
              "ADMIN",
              "POLICY_HOLDER",
              "AGENT",
              "UNDERWRITER"
            ]
          }
        }
      },
      "gpac_UserWhereInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/gpac_UserWhereInput_2"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/gpac_UserWhereInput_2"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/gpac_UserWhereInput_2"
          },
          "id": {
            "$ref": "#/components/schemas/gpac_StringFilter"
          },
          "username": {
            "$ref": "#/components/schemas/gpac_StringFilter"
          },
          "password": {
            "$ref": "#/components/schemas/gpac_StringFilter"
          },
          "role": {
            "$ref": "#/components/schemas/gpac_EnumUser_roleFilter"
          }
        }
      },
      "gpac_StringFilter_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/gpac_NestedStringFilter"
          }
        }
      },
      "gpac_NestedStringFilter_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/gpac_NestedStringFilter_6"
          }
        }
      },
      "gpac_AdminActionUpdateInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/gpac_StringFieldUpdateOperationsInput"
          },
          "actionType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "gpac_AdminAction_actionType",
            "enum": [
              "POLICY_CREATION",
              "POLICY_MODIFICATION",
              "POLICY_CANCELLATION",
              "USER_REGISTRATION"
            ]
          },
          "timestamp": {
            "$ref": "#/components/schemas/gpac_DateTimeFieldUpdateOperationsInput"
          },
          "details": {},
          "userId": {
            "$ref": "#/components/schemas/gpac_StringFieldUpdateOperationsInput"
          }
        }
      },
      "gpac_PolicyUpdateInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/gpac_StringFieldUpdateOperationsInput"
          },
          "policyType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "gpac_Policy_policyType",
            "enum": [
              "LIFE_INSURANCE",
              "HEALTH_INSURANCE",
              "AUTO_INSURANCE"
            ]
          },
          "status": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "gpac_Policy_status",
            "enum": [
              "ACTIVE",
              "PENDING",
              "LAPSED",
              "CANCELLED"
            ]
          },
          "details": {},
          "userId": {
            "$ref": "#/components/schemas/gpac_StringFieldUpdateOperationsInput"
          }
        }
      },
      "gpac_UserUpdateInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/gpac_StringFieldUpdateOperationsInput"
          },
          "username": {
            "$ref": "#/components/schemas/gpac_StringFieldUpdateOperationsInput"
          },
          "password": {
            "$ref": "#/components/schemas/gpac_StringFieldUpdateOperationsInput"
          },
          "role": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "gpac_User_role",
            "enum": [
              "ADMIN",
              "POLICY_HOLDER",
              "AGENT",
              "UNDERWRITER"
            ]
          }
        }
      },
      "gpac_AdminActionUpdateInput_2": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/gpac_StringFieldUpdateOperationsInput"
          },
          "actionType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "gpac_AdminAction_actionType",
            "enum": [
              "POLICY_CREATION",
              "POLICY_MODIFICATION",
              "POLICY_CANCELLATION",
              "USER_REGISTRATION"
            ]
          },
          "timestamp": {
            "$ref": "#/components/schemas/gpac_DateTimeFieldUpdateOperationsInput"
          },
          "details": {},
          "userId": {
            "$ref": "#/components/schemas/gpac_StringFieldUpdateOperationsInput"
          }
        }
      },
      "gpac_PolicyUpdateInput_2": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/gpac_StringFieldUpdateOperationsInput"
          },
          "policyType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "gpac_Policy_policyType",
            "enum": [
              "LIFE_INSURANCE",
              "HEALTH_INSURANCE",
              "AUTO_INSURANCE"
            ]
          },
          "status": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "gpac_Policy_status",
            "enum": [
              "ACTIVE",
              "PENDING",
              "LAPSED",
              "CANCELLED"
            ]
          },
          "details": {},
          "userId": {
            "$ref": "#/components/schemas/gpac_StringFieldUpdateOperationsInput"
          }
        }
      },
      "gpac_UserUpdateInput_2": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/gpac_StringFieldUpdateOperationsInput"
          },
          "username": {
            "$ref": "#/components/schemas/gpac_StringFieldUpdateOperationsInput"
          },
          "password": {
            "$ref": "#/components/schemas/gpac_StringFieldUpdateOperationsInput"
          },
          "role": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "gpac_User_role",
            "enum": [
              "ADMIN",
              "POLICY_HOLDER",
              "AGENT",
              "UNDERWRITER"
            ]
          }
        }
      },
      "guardianOnline_FeatureCreateManyInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "featureType": {
            "type": "string",
            "x-graphql-enum-name": "guardianOnline_Feature_featureType",
            "enum": [
              "DASHBOARD",
              "ACCOUNT_SUMMARY",
              "NOTIFICATIONS",
              "DOCUMENTS"
            ]
          },
          "content": {},
          "userId": {
            "type": "string"
          }
        }
      },
      "guardianOnline_UserCreateManyInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "x-graphql-enum-name": "guardianOnline_User_role",
            "enum": [
              "ADMIN",
              "AGENT",
              "CUSTOMER",
              "FINANCIAL_REP"
            ]
          }
        }
      },
      "guardianOnline_UserLogCreateManyInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "logType": {
            "type": "string",
            "x-graphql-enum-name": "guardianOnline_UserLog_logType",
            "enum": [
              "LOGIN",
              "LOGOUT",
              "FEATURE_ACCESS",
              "DOCUMENT_DOWNLOAD"
            ]
          },
          "contentType": {
            "type": "string",
            "x-graphql-enum-name": "guardianOnline_UserLog_contentType",
            "enum": [
              "CALL",
              "CHAT",
              "EMAIL",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIAL",
              "TEXT"
            ]
          },
          "timestamp": {
            "type": "string"
          },
          "details": {},
          "userId": {
            "type": "string"
          }
        }
      },
      "guardianOnline_FeatureCreateInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "featureType": {
            "type": "string",
            "x-graphql-enum-name": "guardianOnline_Feature_featureType",
            "enum": [
              "DASHBOARD",
              "ACCOUNT_SUMMARY",
              "NOTIFICATIONS",
              "DOCUMENTS"
            ]
          },
          "content": {},
          "userId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "featureType",
          "content",
          "userId"
        ]
      },
      "guardianOnline_UserCreateInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "x-graphql-enum-name": "guardianOnline_User_role",
            "enum": [
              "ADMIN",
              "AGENT",
              "CUSTOMER",
              "FINANCIAL_REP"
            ]
          }
        },
        "required": [
          "id",
          "username",
          "password",
          "role"
        ]
      },
      "guardianOnline_UserLogCreateInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "logType": {
            "type": "string",
            "x-graphql-enum-name": "guardianOnline_UserLog_logType",
            "enum": [
              "LOGIN",
              "LOGOUT",
              "FEATURE_ACCESS",
              "DOCUMENT_DOWNLOAD"
            ]
          },
          "contentType": {
            "type": "string",
            "x-graphql-enum-name": "guardianOnline_UserLog_contentType",
            "enum": [
              "CALL",
              "CHAT",
              "EMAIL",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIAL",
              "TEXT"
            ]
          },
          "timestamp": {
            "type": "string"
          },
          "details": {},
          "userId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "logType",
          "contentType",
          "timestamp",
          "details",
          "userId"
        ]
      },
      "guardianOnline_FeatureWhereInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/guardianOnline_FeatureWhereInput"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/guardianOnline_FeatureWhereInput"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/guardianOnline_FeatureWhereInput"
          },
          "id": {
            "$ref": "#/components/schemas/guardianOnline_StringFilter"
          },
          "featureType": {
            "$ref": "#/components/schemas/guardianOnline_EnumFeature_featureTypeFilter"
          },
          "content": {
            "$ref": "#/components/schemas/guardianOnline_JsonFilter"
          },
          "userId": {
            "$ref": "#/components/schemas/guardianOnline_StringFilter"
          }
        }
      },
      "guardianOnline_StringFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/guardianOnline_NestedStringFilter"
          }
        }
      },
      "guardianOnline_NestedStringFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/guardianOnline_NestedStringFilter"
          }
        }
      },
      "guardianOnline_EnumFeature_featureTypeFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "guardianOnline_Feature_featureType",
            "enum": [
              "DASHBOARD",
              "ACCOUNT_SUMMARY",
              "NOTIFICATIONS",
              "DOCUMENTS"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ],
              "x-graphql-enum-name": "guardianOnline_Feature_featureType",
              "enum": [
                "DASHBOARD",
                "ACCOUNT_SUMMARY",
                "NOTIFICATIONS",
                "DOCUMENTS"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ],
              "x-graphql-enum-name": "guardianOnline_Feature_featureType",
              "enum": [
                "DASHBOARD",
                "ACCOUNT_SUMMARY",
                "NOTIFICATIONS",
                "DOCUMENTS"
              ]
            }
          },
          "not": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "guardianOnline_Feature_featureType",
            "enum": [
              "DASHBOARD",
              "ACCOUNT_SUMMARY",
              "NOTIFICATIONS",
              "DOCUMENTS"
            ]
          }
        }
      },
      "guardianOnline_JsonFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {},
          "path": {
            "type": [
              "string",
              "null"
            ]
          },
          "string_contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "string_starts_with": {
            "type": [
              "string",
              "null"
            ]
          },
          "string_ends_with": {
            "type": [
              "string",
              "null"
            ]
          },
          "array_contains": {},
          "array_starts_with": {},
          "array_ends_with": {},
          "lt": {},
          "lte": {},
          "gt": {},
          "gte": {},
          "not": {}
        }
      },
      "guardianOnline_UserWhereInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/guardianOnline_UserWhereInput"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/guardianOnline_UserWhereInput"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/guardianOnline_UserWhereInput"
          },
          "id": {
            "$ref": "#/components/schemas/guardianOnline_StringFilter"
          },
          "username": {
            "$ref": "#/components/schemas/guardianOnline_StringFilter"
          },
          "password": {
            "$ref": "#/components/schemas/guardianOnline_StringFilter"
          },
          "role": {
            "$ref": "#/components/schemas/guardianOnline_EnumUser_roleFilter"
          }
        }
      },
      "guardianOnline_StringFilter_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/guardianOnline_NestedStringFilter"
          }
        }
      },
      "guardianOnline_NestedStringFilter_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/guardianOnline_NestedStringFilter_2"
          }
        }
      },
      "guardianOnline_EnumUser_roleFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "guardianOnline_User_role",
            "enum": [
              "ADMIN",
              "AGENT",
              "CUSTOMER",
              "FINANCIAL_REP"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ],
              "x-graphql-enum-name": "guardianOnline_User_role",
              "enum": [
                "ADMIN",
                "AGENT",
                "CUSTOMER",
                "FINANCIAL_REP"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ],
              "x-graphql-enum-name": "guardianOnline_User_role",
              "enum": [
                "ADMIN",
                "AGENT",
                "CUSTOMER",
                "FINANCIAL_REP"
              ]
            }
          },
          "not": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "guardianOnline_User_role",
            "enum": [
              "ADMIN",
              "AGENT",
              "CUSTOMER",
              "FINANCIAL_REP"
            ]
          }
        }
      },
      "guardianOnline_UserLogWhereInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/guardianOnline_UserLogWhereInput"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/guardianOnline_UserLogWhereInput"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/guardianOnline_UserLogWhereInput"
          },
          "id": {
            "$ref": "#/components/schemas/guardianOnline_StringFilter"
          },
          "logType": {
            "$ref": "#/components/schemas/guardianOnline_EnumUserLog_logTypeFilter"
          },
          "contentType": {
            "$ref": "#/components/schemas/guardianOnline_EnumUserLog_contentTypeFilter"
          },
          "timestamp": {
            "$ref": "#/components/schemas/guardianOnline_DateTimeFilter"
          },
          "details": {
            "$ref": "#/components/schemas/guardianOnline_JsonFilter"
          },
          "userId": {
            "$ref": "#/components/schemas/guardianOnline_StringFilter"
          }
        }
      },
      "guardianOnline_StringFilter_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/guardianOnline_NestedStringFilter"
          }
        }
      },
      "guardianOnline_NestedStringFilter_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/guardianOnline_NestedStringFilter_3"
          }
        }
      },
      "guardianOnline_EnumUserLog_logTypeFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "guardianOnline_UserLog_logType",
            "enum": [
              "LOGIN",
              "LOGOUT",
              "FEATURE_ACCESS",
              "DOCUMENT_DOWNLOAD"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ],
              "x-graphql-enum-name": "guardianOnline_UserLog_logType",
              "enum": [
                "LOGIN",
                "LOGOUT",
                "FEATURE_ACCESS",
                "DOCUMENT_DOWNLOAD"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ],
              "x-graphql-enum-name": "guardianOnline_UserLog_logType",
              "enum": [
                "LOGIN",
                "LOGOUT",
                "FEATURE_ACCESS",
                "DOCUMENT_DOWNLOAD"
              ]
            }
          },
          "not": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "guardianOnline_UserLog_logType",
            "enum": [
              "LOGIN",
              "LOGOUT",
              "FEATURE_ACCESS",
              "DOCUMENT_DOWNLOAD"
            ]
          }
        }
      },
      "guardianOnline_EnumUserLog_contentTypeFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "guardianOnline_UserLog_contentType",
            "enum": [
              "CALL",
              "CHAT",
              "EMAIL",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIAL",
              "TEXT"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ],
              "x-graphql-enum-name": "guardianOnline_UserLog_contentType",
              "enum": [
                "CALL",
                "CHAT",
                "EMAIL",
                "WEB_USAGE",
                "IVR_HUGO_USAGE",
                "OUTBOUND_CORRESPONDENCE",
                "MARKETING_MATERIAL",
                "TEXT"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ],
              "x-graphql-enum-name": "guardianOnline_UserLog_contentType",
              "enum": [
                "CALL",
                "CHAT",
                "EMAIL",
                "WEB_USAGE",
                "IVR_HUGO_USAGE",
                "OUTBOUND_CORRESPONDENCE",
                "MARKETING_MATERIAL",
                "TEXT"
              ]
            }
          },
          "not": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "guardianOnline_UserLog_contentType",
            "enum": [
              "CALL",
              "CHAT",
              "EMAIL",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIAL",
              "TEXT"
            ]
          }
        }
      },
      "guardianOnline_DateTimeFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/guardianOnline_NestedDateTimeFilter"
          }
        }
      },
      "guardianOnline_NestedDateTimeFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/guardianOnline_NestedDateTimeFilter"
          }
        }
      },
      "guardianOnline_FeatureWhereUniqueInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "guardianOnline_UserWhereUniqueInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "guardianOnline_UserLogWhereUniqueInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "guardianOnline_FeatureUpdateManyMutationInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/guardianOnline_StringFieldUpdateOperationsInput"
          },
          "featureType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "guardianOnline_Feature_featureType",
            "enum": [
              "DASHBOARD",
              "ACCOUNT_SUMMARY",
              "NOTIFICATIONS",
              "DOCUMENTS"
            ]
          },
          "content": {},
          "userId": {
            "$ref": "#/components/schemas/guardianOnline_StringFieldUpdateOperationsInput"
          }
        }
      },
      "guardianOnline_StringFieldUpdateOperationsInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "set": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "guardianOnline_FeatureWhereInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/guardianOnline_FeatureWhereInput_2"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/guardianOnline_FeatureWhereInput_2"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/guardianOnline_FeatureWhereInput_2"
          },
          "id": {
            "$ref": "#/components/schemas/guardianOnline_StringFilter"
          },
          "featureType": {
            "$ref": "#/components/schemas/guardianOnline_EnumFeature_featureTypeFilter"
          },
          "content": {
            "$ref": "#/components/schemas/guardianOnline_JsonFilter"
          },
          "userId": {
            "$ref": "#/components/schemas/guardianOnline_StringFilter"
          }
        }
      },
      "guardianOnline_StringFilter_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/guardianOnline_NestedStringFilter"
          }
        }
      },
      "guardianOnline_NestedStringFilter_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/guardianOnline_NestedStringFilter_4"
          }
        }
      },
      "guardianOnline_UserUpdateManyMutationInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/guardianOnline_StringFieldUpdateOperationsInput"
          },
          "username": {
            "$ref": "#/components/schemas/guardianOnline_StringFieldUpdateOperationsInput"
          },
          "password": {
            "$ref": "#/components/schemas/guardianOnline_StringFieldUpdateOperationsInput"
          },
          "role": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "guardianOnline_User_role",
            "enum": [
              "ADMIN",
              "AGENT",
              "CUSTOMER",
              "FINANCIAL_REP"
            ]
          }
        }
      },
      "guardianOnline_UserWhereInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/guardianOnline_UserWhereInput_2"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/guardianOnline_UserWhereInput_2"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/guardianOnline_UserWhereInput_2"
          },
          "id": {
            "$ref": "#/components/schemas/guardianOnline_StringFilter"
          },
          "username": {
            "$ref": "#/components/schemas/guardianOnline_StringFilter"
          },
          "password": {
            "$ref": "#/components/schemas/guardianOnline_StringFilter"
          },
          "role": {
            "$ref": "#/components/schemas/guardianOnline_EnumUser_roleFilter"
          }
        }
      },
      "guardianOnline_StringFilter_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/guardianOnline_NestedStringFilter"
          }
        }
      },
      "guardianOnline_NestedStringFilter_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/guardianOnline_NestedStringFilter_5"
          }
        }
      },
      "guardianOnline_UserLogUpdateManyMutationInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/guardianOnline_StringFieldUpdateOperationsInput"
          },
          "logType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "guardianOnline_UserLog_logType",
            "enum": [
              "LOGIN",
              "LOGOUT",
              "FEATURE_ACCESS",
              "DOCUMENT_DOWNLOAD"
            ]
          },
          "contentType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "guardianOnline_UserLog_contentType",
            "enum": [
              "CALL",
              "CHAT",
              "EMAIL",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIAL",
              "TEXT"
            ]
          },
          "timestamp": {
            "$ref": "#/components/schemas/guardianOnline_DateTimeFieldUpdateOperationsInput"
          },
          "details": {},
          "userId": {
            "$ref": "#/components/schemas/guardianOnline_StringFieldUpdateOperationsInput"
          }
        }
      },
      "guardianOnline_DateTimeFieldUpdateOperationsInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "set": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "guardianOnline_UserLogWhereInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/guardianOnline_UserLogWhereInput_2"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/guardianOnline_UserLogWhereInput_2"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/guardianOnline_UserLogWhereInput_2"
          },
          "id": {
            "$ref": "#/components/schemas/guardianOnline_StringFilter"
          },
          "logType": {
            "$ref": "#/components/schemas/guardianOnline_EnumUserLog_logTypeFilter"
          },
          "contentType": {
            "$ref": "#/components/schemas/guardianOnline_EnumUserLog_contentTypeFilter"
          },
          "timestamp": {
            "$ref": "#/components/schemas/guardianOnline_DateTimeFilter"
          },
          "details": {
            "$ref": "#/components/schemas/guardianOnline_JsonFilter"
          },
          "userId": {
            "$ref": "#/components/schemas/guardianOnline_StringFilter"
          }
        }
      },
      "guardianOnline_StringFilter_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/guardianOnline_NestedStringFilter"
          }
        }
      },
      "guardianOnline_NestedStringFilter_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/guardianOnline_NestedStringFilter_6"
          }
        }
      },
      "guardianOnline_DateTimeFilter_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/guardianOnline_NestedDateTimeFilter"
          }
        }
      },
      "guardianOnline_NestedDateTimeFilter_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/guardianOnline_NestedDateTimeFilter_2"
          }
        }
      },
      "guardianOnline_FeatureUpdateInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/guardianOnline_StringFieldUpdateOperationsInput"
          },
          "featureType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "guardianOnline_Feature_featureType",
            "enum": [
              "DASHBOARD",
              "ACCOUNT_SUMMARY",
              "NOTIFICATIONS",
              "DOCUMENTS"
            ]
          },
          "content": {},
          "userId": {
            "$ref": "#/components/schemas/guardianOnline_StringFieldUpdateOperationsInput"
          }
        }
      },
      "guardianOnline_UserUpdateInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/guardianOnline_StringFieldUpdateOperationsInput"
          },
          "username": {
            "$ref": "#/components/schemas/guardianOnline_StringFieldUpdateOperationsInput"
          },
          "password": {
            "$ref": "#/components/schemas/guardianOnline_StringFieldUpdateOperationsInput"
          },
          "role": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "guardianOnline_User_role",
            "enum": [
              "ADMIN",
              "AGENT",
              "CUSTOMER",
              "FINANCIAL_REP"
            ]
          }
        }
      },
      "guardianOnline_UserLogUpdateInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/guardianOnline_StringFieldUpdateOperationsInput"
          },
          "logType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "guardianOnline_UserLog_logType",
            "enum": [
              "LOGIN",
              "LOGOUT",
              "FEATURE_ACCESS",
              "DOCUMENT_DOWNLOAD"
            ]
          },
          "contentType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "guardianOnline_UserLog_contentType",
            "enum": [
              "CALL",
              "CHAT",
              "EMAIL",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIAL",
              "TEXT"
            ]
          },
          "timestamp": {
            "$ref": "#/components/schemas/guardianOnline_DateTimeFieldUpdateOperationsInput"
          },
          "details": {},
          "userId": {
            "$ref": "#/components/schemas/guardianOnline_StringFieldUpdateOperationsInput"
          }
        }
      },
      "guardianOnline_FeatureUpdateInput_2": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/guardianOnline_StringFieldUpdateOperationsInput"
          },
          "featureType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "guardianOnline_Feature_featureType",
            "enum": [
              "DASHBOARD",
              "ACCOUNT_SUMMARY",
              "NOTIFICATIONS",
              "DOCUMENTS"
            ]
          },
          "content": {},
          "userId": {
            "$ref": "#/components/schemas/guardianOnline_StringFieldUpdateOperationsInput"
          }
        }
      },
      "guardianOnline_UserUpdateInput_2": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/guardianOnline_StringFieldUpdateOperationsInput"
          },
          "username": {
            "$ref": "#/components/schemas/guardianOnline_StringFieldUpdateOperationsInput"
          },
          "password": {
            "$ref": "#/components/schemas/guardianOnline_StringFieldUpdateOperationsInput"
          },
          "role": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "guardianOnline_User_role",
            "enum": [
              "ADMIN",
              "AGENT",
              "CUSTOMER",
              "FINANCIAL_REP"
            ]
          }
        }
      },
      "guardianOnline_UserLogUpdateInput_2": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/guardianOnline_StringFieldUpdateOperationsInput"
          },
          "logType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "guardianOnline_UserLog_logType",
            "enum": [
              "LOGIN",
              "LOGOUT",
              "FEATURE_ACCESS",
              "DOCUMENT_DOWNLOAD"
            ]
          },
          "contentType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "guardianOnline_UserLog_contentType",
            "enum": [
              "CALL",
              "CHAT",
              "EMAIL",
              "WEB_USAGE",
              "IVR_HUGO_USAGE",
              "OUTBOUND_CORRESPONDENCE",
              "MARKETING_MATERIAL",
              "TEXT"
            ]
          },
          "timestamp": {
            "$ref": "#/components/schemas/guardianOnline_DateTimeFieldUpdateOperationsInput"
          },
          "details": {},
          "userId": {
            "$ref": "#/components/schemas/guardianOnline_StringFieldUpdateOperationsInput"
          }
        }
      },
      "livingBalanceSheet_AssetCreateManyInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "assetType": {
            "type": "string",
            "x-graphql-enum-name": "livingBalanceSheet_Asset_assetType",
            "enum": [
              "REAL_ESTATE",
              "STOCKS",
              "BONDS",
              "CASH"
            ]
          },
          "value": {
            "type": "number"
          },
          "userId": {
            "type": "string"
          }
        }
      },
      "livingBalanceSheet_FinancialGoalCreateManyInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "goalType": {
            "type": "string",
            "x-graphql-enum-name": "livingBalanceSheet_FinancialGoal_goalType",
            "enum": [
              "RETIREMENT",
              "EDUCATION",
              "VACATION",
              "EMERGENCY_FUND"
            ]
          },
          "target": {
            "type": "number"
          },
          "deadline": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        }
      },
      "livingBalanceSheet_LiabilityCreateManyInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "liabilityType": {
            "type": "string",
            "x-graphql-enum-name": "livingBalanceSheet_Liability_liabilityType",
            "enum": [
              "MORTGAGE",
              "LOAN",
              "CREDIT_CARD_DEBT"
            ]
          },
          "amount": {
            "type": "number"
          },
          "userId": {
            "type": "string"
          }
        }
      },
      "livingBalanceSheet_UserCreateManyInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "x-graphql-enum-name": "livingBalanceSheet_User_role",
            "enum": [
              "ADMIN",
              "FINANCIAL_ADVISOR",
              "CLIENT"
            ]
          }
        }
      },
      "livingBalanceSheet_AssetCreateInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "assetType": {
            "type": "string",
            "x-graphql-enum-name": "livingBalanceSheet_Asset_assetType",
            "enum": [
              "REAL_ESTATE",
              "STOCKS",
              "BONDS",
              "CASH"
            ]
          },
          "value": {
            "type": "number"
          },
          "userId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "assetType",
          "value",
          "userId"
        ]
      },
      "livingBalanceSheet_FinancialGoalCreateInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "goalType": {
            "type": "string",
            "x-graphql-enum-name": "livingBalanceSheet_FinancialGoal_goalType",
            "enum": [
              "RETIREMENT",
              "EDUCATION",
              "VACATION",
              "EMERGENCY_FUND"
            ]
          },
          "target": {
            "type": "number"
          },
          "deadline": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "goalType",
          "target",
          "deadline",
          "userId"
        ]
      },
      "livingBalanceSheet_LiabilityCreateInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "liabilityType": {
            "type": "string",
            "x-graphql-enum-name": "livingBalanceSheet_Liability_liabilityType",
            "enum": [
              "MORTGAGE",
              "LOAN",
              "CREDIT_CARD_DEBT"
            ]
          },
          "amount": {
            "type": "number"
          },
          "userId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "liabilityType",
          "amount",
          "userId"
        ]
      },
      "livingBalanceSheet_UserCreateInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "x-graphql-enum-name": "livingBalanceSheet_User_role",
            "enum": [
              "ADMIN",
              "FINANCIAL_ADVISOR",
              "CLIENT"
            ]
          }
        },
        "required": [
          "id",
          "username",
          "password",
          "role"
        ]
      },
      "livingBalanceSheet_AssetWhereInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/livingBalanceSheet_AssetWhereInput"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/livingBalanceSheet_AssetWhereInput"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/livingBalanceSheet_AssetWhereInput"
          },
          "id": {
            "$ref": "#/components/schemas/livingBalanceSheet_StringFilter"
          },
          "assetType": {
            "$ref": "#/components/schemas/livingBalanceSheet_EnumAsset_assetTypeFilter"
          },
          "value": {
            "$ref": "#/components/schemas/livingBalanceSheet_FloatFilter"
          },
          "userId": {
            "$ref": "#/components/schemas/livingBalanceSheet_StringFilter"
          }
        }
      },
      "livingBalanceSheet_StringFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/livingBalanceSheet_NestedStringFilter"
          }
        }
      },
      "livingBalanceSheet_NestedStringFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/livingBalanceSheet_NestedStringFilter"
          }
        }
      },
      "livingBalanceSheet_EnumAsset_assetTypeFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "livingBalanceSheet_Asset_assetType",
            "enum": [
              "REAL_ESTATE",
              "STOCKS",
              "BONDS",
              "CASH"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ],
              "x-graphql-enum-name": "livingBalanceSheet_Asset_assetType",
              "enum": [
                "REAL_ESTATE",
                "STOCKS",
                "BONDS",
                "CASH"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ],
              "x-graphql-enum-name": "livingBalanceSheet_Asset_assetType",
              "enum": [
                "REAL_ESTATE",
                "STOCKS",
                "BONDS",
                "CASH"
              ]
            }
          },
          "not": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "livingBalanceSheet_Asset_assetType",
            "enum": [
              "REAL_ESTATE",
              "STOCKS",
              "BONDS",
              "CASH"
            ]
          }
        }
      },
      "livingBalanceSheet_FloatFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "number",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "number",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "number",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "number",
              "null"
            ]
          },
          "lte": {
            "type": [
              "number",
              "null"
            ]
          },
          "gt": {
            "type": [
              "number",
              "null"
            ]
          },
          "gte": {
            "type": [
              "number",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/livingBalanceSheet_NestedFloatFilter"
          }
        }
      },
      "livingBalanceSheet_NestedFloatFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "number",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "number",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "number",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "number",
              "null"
            ]
          },
          "lte": {
            "type": [
              "number",
              "null"
            ]
          },
          "gt": {
            "type": [
              "number",
              "null"
            ]
          },
          "gte": {
            "type": [
              "number",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/livingBalanceSheet_NestedFloatFilter"
          }
        }
      },
      "livingBalanceSheet_FinancialGoalWhereInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/livingBalanceSheet_FinancialGoalWhereInput"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/livingBalanceSheet_FinancialGoalWhereInput"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/livingBalanceSheet_FinancialGoalWhereInput"
          },
          "id": {
            "$ref": "#/components/schemas/livingBalanceSheet_StringFilter"
          },
          "goalType": {
            "$ref": "#/components/schemas/livingBalanceSheet_EnumFinancialGoal_goalTypeFilter"
          },
          "target": {
            "$ref": "#/components/schemas/livingBalanceSheet_FloatFilter"
          },
          "deadline": {
            "$ref": "#/components/schemas/livingBalanceSheet_DateTimeFilter"
          },
          "userId": {
            "$ref": "#/components/schemas/livingBalanceSheet_StringFilter"
          }
        }
      },
      "livingBalanceSheet_StringFilter_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/livingBalanceSheet_NestedStringFilter"
          }
        }
      },
      "livingBalanceSheet_NestedStringFilter_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/livingBalanceSheet_NestedStringFilter_2"
          }
        }
      },
      "livingBalanceSheet_EnumFinancialGoal_goalTypeFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "livingBalanceSheet_FinancialGoal_goalType",
            "enum": [
              "RETIREMENT",
              "EDUCATION",
              "VACATION",
              "EMERGENCY_FUND"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ],
              "x-graphql-enum-name": "livingBalanceSheet_FinancialGoal_goalType",
              "enum": [
                "RETIREMENT",
                "EDUCATION",
                "VACATION",
                "EMERGENCY_FUND"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ],
              "x-graphql-enum-name": "livingBalanceSheet_FinancialGoal_goalType",
              "enum": [
                "RETIREMENT",
                "EDUCATION",
                "VACATION",
                "EMERGENCY_FUND"
              ]
            }
          },
          "not": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "livingBalanceSheet_FinancialGoal_goalType",
            "enum": [
              "RETIREMENT",
              "EDUCATION",
              "VACATION",
              "EMERGENCY_FUND"
            ]
          }
        }
      },
      "livingBalanceSheet_FloatFilter_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "number",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "number",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "number",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "number",
              "null"
            ]
          },
          "lte": {
            "type": [
              "number",
              "null"
            ]
          },
          "gt": {
            "type": [
              "number",
              "null"
            ]
          },
          "gte": {
            "type": [
              "number",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/livingBalanceSheet_NestedFloatFilter"
          }
        }
      },
      "livingBalanceSheet_NestedFloatFilter_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "number",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "number",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "number",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "number",
              "null"
            ]
          },
          "lte": {
            "type": [
              "number",
              "null"
            ]
          },
          "gt": {
            "type": [
              "number",
              "null"
            ]
          },
          "gte": {
            "type": [
              "number",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/livingBalanceSheet_NestedFloatFilter_2"
          }
        }
      },
      "livingBalanceSheet_DateTimeFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/livingBalanceSheet_NestedDateTimeFilter"
          }
        }
      },
      "livingBalanceSheet_NestedDateTimeFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/livingBalanceSheet_NestedDateTimeFilter"
          }
        }
      },
      "livingBalanceSheet_LiabilityWhereInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/livingBalanceSheet_LiabilityWhereInput"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/livingBalanceSheet_LiabilityWhereInput"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/livingBalanceSheet_LiabilityWhereInput"
          },
          "id": {
            "$ref": "#/components/schemas/livingBalanceSheet_StringFilter"
          },
          "liabilityType": {
            "$ref": "#/components/schemas/livingBalanceSheet_EnumLiability_liabilityTypeFilter"
          },
          "amount": {
            "$ref": "#/components/schemas/livingBalanceSheet_FloatFilter"
          },
          "userId": {
            "$ref": "#/components/schemas/livingBalanceSheet_StringFilter"
          }
        }
      },
      "livingBalanceSheet_StringFilter_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/livingBalanceSheet_NestedStringFilter"
          }
        }
      },
      "livingBalanceSheet_NestedStringFilter_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/livingBalanceSheet_NestedStringFilter_3"
          }
        }
      },
      "livingBalanceSheet_EnumLiability_liabilityTypeFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "livingBalanceSheet_Liability_liabilityType",
            "enum": [
              "MORTGAGE",
              "LOAN",
              "CREDIT_CARD_DEBT"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ],
              "x-graphql-enum-name": "livingBalanceSheet_Liability_liabilityType",
              "enum": [
                "MORTGAGE",
                "LOAN",
                "CREDIT_CARD_DEBT"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ],
              "x-graphql-enum-name": "livingBalanceSheet_Liability_liabilityType",
              "enum": [
                "MORTGAGE",
                "LOAN",
                "CREDIT_CARD_DEBT"
              ]
            }
          },
          "not": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "livingBalanceSheet_Liability_liabilityType",
            "enum": [
              "MORTGAGE",
              "LOAN",
              "CREDIT_CARD_DEBT"
            ]
          }
        }
      },
      "livingBalanceSheet_FloatFilter_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "number",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "number",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "number",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "number",
              "null"
            ]
          },
          "lte": {
            "type": [
              "number",
              "null"
            ]
          },
          "gt": {
            "type": [
              "number",
              "null"
            ]
          },
          "gte": {
            "type": [
              "number",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/livingBalanceSheet_NestedFloatFilter"
          }
        }
      },
      "livingBalanceSheet_NestedFloatFilter_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "number",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "number",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "number",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "number",
              "null"
            ]
          },
          "lte": {
            "type": [
              "number",
              "null"
            ]
          },
          "gt": {
            "type": [
              "number",
              "null"
            ]
          },
          "gte": {
            "type": [
              "number",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/livingBalanceSheet_NestedFloatFilter_3"
          }
        }
      },
      "livingBalanceSheet_UserWhereInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/livingBalanceSheet_UserWhereInput"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/livingBalanceSheet_UserWhereInput"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/livingBalanceSheet_UserWhereInput"
          },
          "id": {
            "$ref": "#/components/schemas/livingBalanceSheet_StringFilter"
          },
          "username": {
            "$ref": "#/components/schemas/livingBalanceSheet_StringFilter"
          },
          "password": {
            "$ref": "#/components/schemas/livingBalanceSheet_StringFilter"
          },
          "role": {
            "$ref": "#/components/schemas/livingBalanceSheet_EnumUser_roleFilter"
          }
        }
      },
      "livingBalanceSheet_StringFilter_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/livingBalanceSheet_NestedStringFilter"
          }
        }
      },
      "livingBalanceSheet_NestedStringFilter_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/livingBalanceSheet_NestedStringFilter_4"
          }
        }
      },
      "livingBalanceSheet_EnumUser_roleFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "livingBalanceSheet_User_role",
            "enum": [
              "ADMIN",
              "FINANCIAL_ADVISOR",
              "CLIENT"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ],
              "x-graphql-enum-name": "livingBalanceSheet_User_role",
              "enum": [
                "ADMIN",
                "FINANCIAL_ADVISOR",
                "CLIENT"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ],
              "x-graphql-enum-name": "livingBalanceSheet_User_role",
              "enum": [
                "ADMIN",
                "FINANCIAL_ADVISOR",
                "CLIENT"
              ]
            }
          },
          "not": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "livingBalanceSheet_User_role",
            "enum": [
              "ADMIN",
              "FINANCIAL_ADVISOR",
              "CLIENT"
            ]
          }
        }
      },
      "livingBalanceSheet_AssetWhereUniqueInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "livingBalanceSheet_FinancialGoalWhereUniqueInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "livingBalanceSheet_LiabilityWhereUniqueInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "livingBalanceSheet_UserWhereUniqueInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "livingBalanceSheet_AssetUpdateManyMutationInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/livingBalanceSheet_StringFieldUpdateOperationsInput"
          },
          "assetType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "livingBalanceSheet_Asset_assetType",
            "enum": [
              "REAL_ESTATE",
              "STOCKS",
              "BONDS",
              "CASH"
            ]
          },
          "value": {
            "$ref": "#/components/schemas/livingBalanceSheet_FloatFieldUpdateOperationsInput"
          },
          "userId": {
            "$ref": "#/components/schemas/livingBalanceSheet_StringFieldUpdateOperationsInput"
          }
        }
      },
      "livingBalanceSheet_StringFieldUpdateOperationsInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "set": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "livingBalanceSheet_FloatFieldUpdateOperationsInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "set": {
            "type": [
              "number",
              "null"
            ]
          },
          "increment": {
            "type": [
              "number",
              "null"
            ]
          },
          "decrement": {
            "type": [
              "number",
              "null"
            ]
          },
          "multiply": {
            "type": [
              "number",
              "null"
            ]
          },
          "divide": {
            "type": [
              "number",
              "null"
            ]
          }
        }
      },
      "livingBalanceSheet_AssetWhereInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/livingBalanceSheet_AssetWhereInput_2"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/livingBalanceSheet_AssetWhereInput_2"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/livingBalanceSheet_AssetWhereInput_2"
          },
          "id": {
            "$ref": "#/components/schemas/livingBalanceSheet_StringFilter"
          },
          "assetType": {
            "$ref": "#/components/schemas/livingBalanceSheet_EnumAsset_assetTypeFilter"
          },
          "value": {
            "$ref": "#/components/schemas/livingBalanceSheet_FloatFilter"
          },
          "userId": {
            "$ref": "#/components/schemas/livingBalanceSheet_StringFilter"
          }
        }
      },
      "livingBalanceSheet_StringFilter_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/livingBalanceSheet_NestedStringFilter"
          }
        }
      },
      "livingBalanceSheet_NestedStringFilter_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/livingBalanceSheet_NestedStringFilter_5"
          }
        }
      },
      "livingBalanceSheet_FloatFilter_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "number",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "number",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "number",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "number",
              "null"
            ]
          },
          "lte": {
            "type": [
              "number",
              "null"
            ]
          },
          "gt": {
            "type": [
              "number",
              "null"
            ]
          },
          "gte": {
            "type": [
              "number",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/livingBalanceSheet_NestedFloatFilter"
          }
        }
      },
      "livingBalanceSheet_NestedFloatFilter_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "number",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "number",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "number",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "number",
              "null"
            ]
          },
          "lte": {
            "type": [
              "number",
              "null"
            ]
          },
          "gt": {
            "type": [
              "number",
              "null"
            ]
          },
          "gte": {
            "type": [
              "number",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/livingBalanceSheet_NestedFloatFilter_4"
          }
        }
      },
      "livingBalanceSheet_FinancialGoalUpdateManyMutationInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/livingBalanceSheet_StringFieldUpdateOperationsInput"
          },
          "goalType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "livingBalanceSheet_FinancialGoal_goalType",
            "enum": [
              "RETIREMENT",
              "EDUCATION",
              "VACATION",
              "EMERGENCY_FUND"
            ]
          },
          "target": {
            "$ref": "#/components/schemas/livingBalanceSheet_FloatFieldUpdateOperationsInput"
          },
          "deadline": {
            "$ref": "#/components/schemas/livingBalanceSheet_DateTimeFieldUpdateOperationsInput"
          },
          "userId": {
            "$ref": "#/components/schemas/livingBalanceSheet_StringFieldUpdateOperationsInput"
          }
        }
      },
      "livingBalanceSheet_DateTimeFieldUpdateOperationsInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "set": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "livingBalanceSheet_FinancialGoalWhereInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/livingBalanceSheet_FinancialGoalWhereInput_2"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/livingBalanceSheet_FinancialGoalWhereInput_2"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/livingBalanceSheet_FinancialGoalWhereInput_2"
          },
          "id": {
            "$ref": "#/components/schemas/livingBalanceSheet_StringFilter"
          },
          "goalType": {
            "$ref": "#/components/schemas/livingBalanceSheet_EnumFinancialGoal_goalTypeFilter"
          },
          "target": {
            "$ref": "#/components/schemas/livingBalanceSheet_FloatFilter"
          },
          "deadline": {
            "$ref": "#/components/schemas/livingBalanceSheet_DateTimeFilter"
          },
          "userId": {
            "$ref": "#/components/schemas/livingBalanceSheet_StringFilter"
          }
        }
      },
      "livingBalanceSheet_StringFilter_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/livingBalanceSheet_NestedStringFilter"
          }
        }
      },
      "livingBalanceSheet_NestedStringFilter_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/livingBalanceSheet_NestedStringFilter_6"
          }
        }
      },
      "livingBalanceSheet_FloatFilter_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "number",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "number",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "number",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "number",
              "null"
            ]
          },
          "lte": {
            "type": [
              "number",
              "null"
            ]
          },
          "gt": {
            "type": [
              "number",
              "null"
            ]
          },
          "gte": {
            "type": [
              "number",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/livingBalanceSheet_NestedFloatFilter"
          }
        }
      },
      "livingBalanceSheet_NestedFloatFilter_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "number",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "number",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "number",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "number",
              "null"
            ]
          },
          "lte": {
            "type": [
              "number",
              "null"
            ]
          },
          "gt": {
            "type": [
              "number",
              "null"
            ]
          },
          "gte": {
            "type": [
              "number",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/livingBalanceSheet_NestedFloatFilter_5"
          }
        }
      },
      "livingBalanceSheet_DateTimeFilter_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/livingBalanceSheet_NestedDateTimeFilter"
          }
        }
      },
      "livingBalanceSheet_NestedDateTimeFilter_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/livingBalanceSheet_NestedDateTimeFilter_2"
          }
        }
      },
      "livingBalanceSheet_LiabilityUpdateManyMutationInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/livingBalanceSheet_StringFieldUpdateOperationsInput"
          },
          "liabilityType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "livingBalanceSheet_Liability_liabilityType",
            "enum": [
              "MORTGAGE",
              "LOAN",
              "CREDIT_CARD_DEBT"
            ]
          },
          "amount": {
            "$ref": "#/components/schemas/livingBalanceSheet_FloatFieldUpdateOperationsInput"
          },
          "userId": {
            "$ref": "#/components/schemas/livingBalanceSheet_StringFieldUpdateOperationsInput"
          }
        }
      },
      "livingBalanceSheet_LiabilityWhereInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/livingBalanceSheet_LiabilityWhereInput_2"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/livingBalanceSheet_LiabilityWhereInput_2"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/livingBalanceSheet_LiabilityWhereInput_2"
          },
          "id": {
            "$ref": "#/components/schemas/livingBalanceSheet_StringFilter"
          },
          "liabilityType": {
            "$ref": "#/components/schemas/livingBalanceSheet_EnumLiability_liabilityTypeFilter"
          },
          "amount": {
            "$ref": "#/components/schemas/livingBalanceSheet_FloatFilter"
          },
          "userId": {
            "$ref": "#/components/schemas/livingBalanceSheet_StringFilter"
          }
        }
      },
      "livingBalanceSheet_StringFilter_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/livingBalanceSheet_NestedStringFilter"
          }
        }
      },
      "livingBalanceSheet_NestedStringFilter_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/livingBalanceSheet_NestedStringFilter_7"
          }
        }
      },
      "livingBalanceSheet_FloatFilter_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "number",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "number",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "number",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "number",
              "null"
            ]
          },
          "lte": {
            "type": [
              "number",
              "null"
            ]
          },
          "gt": {
            "type": [
              "number",
              "null"
            ]
          },
          "gte": {
            "type": [
              "number",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/livingBalanceSheet_NestedFloatFilter"
          }
        }
      },
      "livingBalanceSheet_NestedFloatFilter_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "number",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "number",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "number",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "number",
              "null"
            ]
          },
          "lte": {
            "type": [
              "number",
              "null"
            ]
          },
          "gt": {
            "type": [
              "number",
              "null"
            ]
          },
          "gte": {
            "type": [
              "number",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/livingBalanceSheet_NestedFloatFilter_6"
          }
        }
      },
      "livingBalanceSheet_UserUpdateManyMutationInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/livingBalanceSheet_StringFieldUpdateOperationsInput"
          },
          "username": {
            "$ref": "#/components/schemas/livingBalanceSheet_StringFieldUpdateOperationsInput"
          },
          "password": {
            "$ref": "#/components/schemas/livingBalanceSheet_StringFieldUpdateOperationsInput"
          },
          "role": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "livingBalanceSheet_User_role",
            "enum": [
              "ADMIN",
              "FINANCIAL_ADVISOR",
              "CLIENT"
            ]
          }
        }
      },
      "livingBalanceSheet_UserWhereInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/livingBalanceSheet_UserWhereInput_2"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/livingBalanceSheet_UserWhereInput_2"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/livingBalanceSheet_UserWhereInput_2"
          },
          "id": {
            "$ref": "#/components/schemas/livingBalanceSheet_StringFilter"
          },
          "username": {
            "$ref": "#/components/schemas/livingBalanceSheet_StringFilter"
          },
          "password": {
            "$ref": "#/components/schemas/livingBalanceSheet_StringFilter"
          },
          "role": {
            "$ref": "#/components/schemas/livingBalanceSheet_EnumUser_roleFilter"
          }
        }
      },
      "livingBalanceSheet_StringFilter_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/livingBalanceSheet_NestedStringFilter"
          }
        }
      },
      "livingBalanceSheet_NestedStringFilter_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/livingBalanceSheet_NestedStringFilter_8"
          }
        }
      },
      "livingBalanceSheet_AssetUpdateInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/livingBalanceSheet_StringFieldUpdateOperationsInput"
          },
          "assetType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "livingBalanceSheet_Asset_assetType",
            "enum": [
              "REAL_ESTATE",
              "STOCKS",
              "BONDS",
              "CASH"
            ]
          },
          "value": {
            "$ref": "#/components/schemas/livingBalanceSheet_FloatFieldUpdateOperationsInput"
          },
          "userId": {
            "$ref": "#/components/schemas/livingBalanceSheet_StringFieldUpdateOperationsInput"
          }
        }
      },
      "livingBalanceSheet_FinancialGoalUpdateInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/livingBalanceSheet_StringFieldUpdateOperationsInput"
          },
          "goalType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "livingBalanceSheet_FinancialGoal_goalType",
            "enum": [
              "RETIREMENT",
              "EDUCATION",
              "VACATION",
              "EMERGENCY_FUND"
            ]
          },
          "target": {
            "$ref": "#/components/schemas/livingBalanceSheet_FloatFieldUpdateOperationsInput"
          },
          "deadline": {
            "$ref": "#/components/schemas/livingBalanceSheet_DateTimeFieldUpdateOperationsInput"
          },
          "userId": {
            "$ref": "#/components/schemas/livingBalanceSheet_StringFieldUpdateOperationsInput"
          }
        }
      },
      "livingBalanceSheet_LiabilityUpdateInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/livingBalanceSheet_StringFieldUpdateOperationsInput"
          },
          "liabilityType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "livingBalanceSheet_Liability_liabilityType",
            "enum": [
              "MORTGAGE",
              "LOAN",
              "CREDIT_CARD_DEBT"
            ]
          },
          "amount": {
            "$ref": "#/components/schemas/livingBalanceSheet_FloatFieldUpdateOperationsInput"
          },
          "userId": {
            "$ref": "#/components/schemas/livingBalanceSheet_StringFieldUpdateOperationsInput"
          }
        }
      },
      "livingBalanceSheet_UserUpdateInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/livingBalanceSheet_StringFieldUpdateOperationsInput"
          },
          "username": {
            "$ref": "#/components/schemas/livingBalanceSheet_StringFieldUpdateOperationsInput"
          },
          "password": {
            "$ref": "#/components/schemas/livingBalanceSheet_StringFieldUpdateOperationsInput"
          },
          "role": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "livingBalanceSheet_User_role",
            "enum": [
              "ADMIN",
              "FINANCIAL_ADVISOR",
              "CLIENT"
            ]
          }
        }
      },
      "livingBalanceSheet_AssetUpdateInput_2": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/livingBalanceSheet_StringFieldUpdateOperationsInput"
          },
          "assetType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "livingBalanceSheet_Asset_assetType",
            "enum": [
              "REAL_ESTATE",
              "STOCKS",
              "BONDS",
              "CASH"
            ]
          },
          "value": {
            "$ref": "#/components/schemas/livingBalanceSheet_FloatFieldUpdateOperationsInput"
          },
          "userId": {
            "$ref": "#/components/schemas/livingBalanceSheet_StringFieldUpdateOperationsInput"
          }
        }
      },
      "livingBalanceSheet_FinancialGoalUpdateInput_2": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/livingBalanceSheet_StringFieldUpdateOperationsInput"
          },
          "goalType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "livingBalanceSheet_FinancialGoal_goalType",
            "enum": [
              "RETIREMENT",
              "EDUCATION",
              "VACATION",
              "EMERGENCY_FUND"
            ]
          },
          "target": {
            "$ref": "#/components/schemas/livingBalanceSheet_FloatFieldUpdateOperationsInput"
          },
          "deadline": {
            "$ref": "#/components/schemas/livingBalanceSheet_DateTimeFieldUpdateOperationsInput"
          },
          "userId": {
            "$ref": "#/components/schemas/livingBalanceSheet_StringFieldUpdateOperationsInput"
          }
        }
      },
      "livingBalanceSheet_LiabilityUpdateInput_2": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/livingBalanceSheet_StringFieldUpdateOperationsInput"
          },
          "liabilityType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "livingBalanceSheet_Liability_liabilityType",
            "enum": [
              "MORTGAGE",
              "LOAN",
              "CREDIT_CARD_DEBT"
            ]
          },
          "amount": {
            "$ref": "#/components/schemas/livingBalanceSheet_FloatFieldUpdateOperationsInput"
          },
          "userId": {
            "$ref": "#/components/schemas/livingBalanceSheet_StringFieldUpdateOperationsInput"
          }
        }
      },
      "livingBalanceSheet_UserUpdateInput_2": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/livingBalanceSheet_StringFieldUpdateOperationsInput"
          },
          "username": {
            "$ref": "#/components/schemas/livingBalanceSheet_StringFieldUpdateOperationsInput"
          },
          "password": {
            "$ref": "#/components/schemas/livingBalanceSheet_StringFieldUpdateOperationsInput"
          },
          "role": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "livingBalanceSheet_User_role",
            "enum": [
              "ADMIN",
              "FINANCIAL_ADVISOR",
              "CLIENT"
            ]
          }
        }
      },
      "smartOffice_ClientCreateManyInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        }
      },
      "smartOffice_SaleCreateManyInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "saleType": {
            "type": "string",
            "x-graphql-enum-name": "smartOffice_Sale_saleType",
            "enum": [
              "NEW_POLICY",
              "RENEWAL",
              "UPGRADE"
            ]
          },
          "amount": {
            "type": "number"
          },
          "timestamp": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        }
      },
      "smartOffice_TaskCreateManyInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "taskType": {
            "type": "string",
            "x-graphql-enum-name": "smartOffice_Task_taskType",
            "enum": [
              "MEETING",
              "CALL",
              "EMAIL",
              "FOLLOW_UP"
            ]
          },
          "status": {
            "type": "string",
            "x-graphql-enum-name": "smartOffice_Task_status",
            "enum": [
              "PENDING",
              "COMPLETED",
              "CANCELLED"
            ]
          },
          "details": {},
          "userId": {
            "type": "string"
          }
        }
      },
      "smartOffice_UserCreateManyInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "x-graphql-enum-name": "smartOffice_User_role",
            "enum": [
              "ADMIN",
              "AGENT",
              "SALES_REP"
            ]
          }
        }
      },
      "smartOffice_ClientCreateInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "email",
          "phone",
          "userId"
        ]
      },
      "smartOffice_SaleCreateInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "saleType": {
            "type": "string",
            "x-graphql-enum-name": "smartOffice_Sale_saleType",
            "enum": [
              "NEW_POLICY",
              "RENEWAL",
              "UPGRADE"
            ]
          },
          "amount": {
            "type": "number"
          },
          "timestamp": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "saleType",
          "amount",
          "timestamp",
          "userId"
        ]
      },
      "smartOffice_TaskCreateInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "taskType": {
            "type": "string",
            "x-graphql-enum-name": "smartOffice_Task_taskType",
            "enum": [
              "MEETING",
              "CALL",
              "EMAIL",
              "FOLLOW_UP"
            ]
          },
          "status": {
            "type": "string",
            "x-graphql-enum-name": "smartOffice_Task_status",
            "enum": [
              "PENDING",
              "COMPLETED",
              "CANCELLED"
            ]
          },
          "details": {},
          "userId": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "taskType",
          "status",
          "details",
          "userId"
        ]
      },
      "smartOffice_UserCreateInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "x-graphql-enum-name": "smartOffice_User_role",
            "enum": [
              "ADMIN",
              "AGENT",
              "SALES_REP"
            ]
          }
        },
        "required": [
          "id",
          "username",
          "password",
          "role"
        ]
      },
      "smartOffice_ClientWhereInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/smartOffice_ClientWhereInput"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/smartOffice_ClientWhereInput"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/smartOffice_ClientWhereInput"
          },
          "id": {
            "$ref": "#/components/schemas/smartOffice_StringFilter"
          },
          "name": {
            "$ref": "#/components/schemas/smartOffice_StringFilter"
          },
          "email": {
            "$ref": "#/components/schemas/smartOffice_StringFilter"
          },
          "phone": {
            "$ref": "#/components/schemas/smartOffice_StringFilter"
          },
          "userId": {
            "$ref": "#/components/schemas/smartOffice_StringFilter"
          }
        }
      },
      "smartOffice_StringFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/smartOffice_NestedStringFilter"
          }
        }
      },
      "smartOffice_NestedStringFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/smartOffice_NestedStringFilter"
          }
        }
      },
      "smartOffice_SaleWhereInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/smartOffice_SaleWhereInput"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/smartOffice_SaleWhereInput"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/smartOffice_SaleWhereInput"
          },
          "id": {
            "$ref": "#/components/schemas/smartOffice_StringFilter"
          },
          "saleType": {
            "$ref": "#/components/schemas/smartOffice_EnumSale_saleTypeFilter"
          },
          "amount": {
            "$ref": "#/components/schemas/smartOffice_FloatFilter"
          },
          "timestamp": {
            "$ref": "#/components/schemas/smartOffice_DateTimeFilter"
          },
          "userId": {
            "$ref": "#/components/schemas/smartOffice_StringFilter"
          }
        }
      },
      "smartOffice_StringFilter_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/smartOffice_NestedStringFilter"
          }
        }
      },
      "smartOffice_NestedStringFilter_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/smartOffice_NestedStringFilter_2"
          }
        }
      },
      "smartOffice_EnumSale_saleTypeFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "smartOffice_Sale_saleType",
            "enum": [
              "NEW_POLICY",
              "RENEWAL",
              "UPGRADE"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ],
              "x-graphql-enum-name": "smartOffice_Sale_saleType",
              "enum": [
                "NEW_POLICY",
                "RENEWAL",
                "UPGRADE"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ],
              "x-graphql-enum-name": "smartOffice_Sale_saleType",
              "enum": [
                "NEW_POLICY",
                "RENEWAL",
                "UPGRADE"
              ]
            }
          },
          "not": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "smartOffice_Sale_saleType",
            "enum": [
              "NEW_POLICY",
              "RENEWAL",
              "UPGRADE"
            ]
          }
        }
      },
      "smartOffice_FloatFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "number",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "number",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "number",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "number",
              "null"
            ]
          },
          "lte": {
            "type": [
              "number",
              "null"
            ]
          },
          "gt": {
            "type": [
              "number",
              "null"
            ]
          },
          "gte": {
            "type": [
              "number",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/smartOffice_NestedFloatFilter"
          }
        }
      },
      "smartOffice_NestedFloatFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "number",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "number",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "number",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "number",
              "null"
            ]
          },
          "lte": {
            "type": [
              "number",
              "null"
            ]
          },
          "gt": {
            "type": [
              "number",
              "null"
            ]
          },
          "gte": {
            "type": [
              "number",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/smartOffice_NestedFloatFilter"
          }
        }
      },
      "smartOffice_DateTimeFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/smartOffice_NestedDateTimeFilter"
          }
        }
      },
      "smartOffice_NestedDateTimeFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/smartOffice_NestedDateTimeFilter"
          }
        }
      },
      "smartOffice_TaskWhereInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/smartOffice_TaskWhereInput"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/smartOffice_TaskWhereInput"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/smartOffice_TaskWhereInput"
          },
          "id": {
            "$ref": "#/components/schemas/smartOffice_StringFilter"
          },
          "taskType": {
            "$ref": "#/components/schemas/smartOffice_EnumTask_taskTypeFilter"
          },
          "status": {
            "$ref": "#/components/schemas/smartOffice_EnumTask_statusFilter"
          },
          "details": {
            "$ref": "#/components/schemas/smartOffice_JsonFilter"
          },
          "userId": {
            "$ref": "#/components/schemas/smartOffice_StringFilter"
          }
        }
      },
      "smartOffice_StringFilter_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/smartOffice_NestedStringFilter"
          }
        }
      },
      "smartOffice_NestedStringFilter_3": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/smartOffice_NestedStringFilter_3"
          }
        }
      },
      "smartOffice_EnumTask_taskTypeFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "smartOffice_Task_taskType",
            "enum": [
              "MEETING",
              "CALL",
              "EMAIL",
              "FOLLOW_UP"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ],
              "x-graphql-enum-name": "smartOffice_Task_taskType",
              "enum": [
                "MEETING",
                "CALL",
                "EMAIL",
                "FOLLOW_UP"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ],
              "x-graphql-enum-name": "smartOffice_Task_taskType",
              "enum": [
                "MEETING",
                "CALL",
                "EMAIL",
                "FOLLOW_UP"
              ]
            }
          },
          "not": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "smartOffice_Task_taskType",
            "enum": [
              "MEETING",
              "CALL",
              "EMAIL",
              "FOLLOW_UP"
            ]
          }
        }
      },
      "smartOffice_EnumTask_statusFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "smartOffice_Task_status",
            "enum": [
              "PENDING",
              "COMPLETED",
              "CANCELLED"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ],
              "x-graphql-enum-name": "smartOffice_Task_status",
              "enum": [
                "PENDING",
                "COMPLETED",
                "CANCELLED"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ],
              "x-graphql-enum-name": "smartOffice_Task_status",
              "enum": [
                "PENDING",
                "COMPLETED",
                "CANCELLED"
              ]
            }
          },
          "not": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "smartOffice_Task_status",
            "enum": [
              "PENDING",
              "COMPLETED",
              "CANCELLED"
            ]
          }
        }
      },
      "smartOffice_JsonFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {},
          "path": {
            "type": [
              "string",
              "null"
            ]
          },
          "string_contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "string_starts_with": {
            "type": [
              "string",
              "null"
            ]
          },
          "string_ends_with": {
            "type": [
              "string",
              "null"
            ]
          },
          "array_contains": {},
          "array_starts_with": {},
          "array_ends_with": {},
          "lt": {},
          "lte": {},
          "gt": {},
          "gte": {},
          "not": {}
        }
      },
      "smartOffice_UserWhereInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/smartOffice_UserWhereInput"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/smartOffice_UserWhereInput"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/smartOffice_UserWhereInput"
          },
          "id": {
            "$ref": "#/components/schemas/smartOffice_StringFilter"
          },
          "username": {
            "$ref": "#/components/schemas/smartOffice_StringFilter"
          },
          "password": {
            "$ref": "#/components/schemas/smartOffice_StringFilter"
          },
          "role": {
            "$ref": "#/components/schemas/smartOffice_EnumUser_roleFilter"
          }
        }
      },
      "smartOffice_StringFilter_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/smartOffice_NestedStringFilter"
          }
        }
      },
      "smartOffice_NestedStringFilter_4": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/smartOffice_NestedStringFilter_4"
          }
        }
      },
      "smartOffice_EnumUser_roleFilter": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "smartOffice_User_role",
            "enum": [
              "ADMIN",
              "AGENT",
              "SALES_REP"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ],
              "x-graphql-enum-name": "smartOffice_User_role",
              "enum": [
                "ADMIN",
                "AGENT",
                "SALES_REP"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ],
              "x-graphql-enum-name": "smartOffice_User_role",
              "enum": [
                "ADMIN",
                "AGENT",
                "SALES_REP"
              ]
            }
          },
          "not": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "smartOffice_User_role",
            "enum": [
              "ADMIN",
              "AGENT",
              "SALES_REP"
            ]
          }
        }
      },
      "smartOffice_ClientWhereUniqueInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "smartOffice_SaleWhereUniqueInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "smartOffice_TaskWhereUniqueInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "smartOffice_UserWhereUniqueInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "smartOffice_ClientUpdateManyMutationInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/smartOffice_StringFieldUpdateOperationsInput"
          },
          "name": {
            "$ref": "#/components/schemas/smartOffice_StringFieldUpdateOperationsInput"
          },
          "email": {
            "$ref": "#/components/schemas/smartOffice_StringFieldUpdateOperationsInput"
          },
          "phone": {
            "$ref": "#/components/schemas/smartOffice_StringFieldUpdateOperationsInput"
          },
          "userId": {
            "$ref": "#/components/schemas/smartOffice_StringFieldUpdateOperationsInput"
          }
        }
      },
      "smartOffice_StringFieldUpdateOperationsInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "set": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "smartOffice_ClientWhereInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/smartOffice_ClientWhereInput_2"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/smartOffice_ClientWhereInput_2"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/smartOffice_ClientWhereInput_2"
          },
          "id": {
            "$ref": "#/components/schemas/smartOffice_StringFilter"
          },
          "name": {
            "$ref": "#/components/schemas/smartOffice_StringFilter"
          },
          "email": {
            "$ref": "#/components/schemas/smartOffice_StringFilter"
          },
          "phone": {
            "$ref": "#/components/schemas/smartOffice_StringFilter"
          },
          "userId": {
            "$ref": "#/components/schemas/smartOffice_StringFilter"
          }
        }
      },
      "smartOffice_StringFilter_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/smartOffice_NestedStringFilter"
          }
        }
      },
      "smartOffice_NestedStringFilter_5": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/smartOffice_NestedStringFilter_5"
          }
        }
      },
      "smartOffice_SaleUpdateManyMutationInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/smartOffice_StringFieldUpdateOperationsInput"
          },
          "saleType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "smartOffice_Sale_saleType",
            "enum": [
              "NEW_POLICY",
              "RENEWAL",
              "UPGRADE"
            ]
          },
          "amount": {
            "$ref": "#/components/schemas/smartOffice_FloatFieldUpdateOperationsInput"
          },
          "timestamp": {
            "$ref": "#/components/schemas/smartOffice_DateTimeFieldUpdateOperationsInput"
          },
          "userId": {
            "$ref": "#/components/schemas/smartOffice_StringFieldUpdateOperationsInput"
          }
        }
      },
      "smartOffice_FloatFieldUpdateOperationsInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "set": {
            "type": [
              "number",
              "null"
            ]
          },
          "increment": {
            "type": [
              "number",
              "null"
            ]
          },
          "decrement": {
            "type": [
              "number",
              "null"
            ]
          },
          "multiply": {
            "type": [
              "number",
              "null"
            ]
          },
          "divide": {
            "type": [
              "number",
              "null"
            ]
          }
        }
      },
      "smartOffice_DateTimeFieldUpdateOperationsInput": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "set": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "smartOffice_SaleWhereInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/smartOffice_SaleWhereInput_2"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/smartOffice_SaleWhereInput_2"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/smartOffice_SaleWhereInput_2"
          },
          "id": {
            "$ref": "#/components/schemas/smartOffice_StringFilter"
          },
          "saleType": {
            "$ref": "#/components/schemas/smartOffice_EnumSale_saleTypeFilter"
          },
          "amount": {
            "$ref": "#/components/schemas/smartOffice_FloatFilter"
          },
          "timestamp": {
            "$ref": "#/components/schemas/smartOffice_DateTimeFilter"
          },
          "userId": {
            "$ref": "#/components/schemas/smartOffice_StringFilter"
          }
        }
      },
      "smartOffice_StringFilter_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/smartOffice_NestedStringFilter"
          }
        }
      },
      "smartOffice_NestedStringFilter_6": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/smartOffice_NestedStringFilter_6"
          }
        }
      },
      "smartOffice_FloatFilter_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "number",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "number",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "number",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "number",
              "null"
            ]
          },
          "lte": {
            "type": [
              "number",
              "null"
            ]
          },
          "gt": {
            "type": [
              "number",
              "null"
            ]
          },
          "gte": {
            "type": [
              "number",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/smartOffice_NestedFloatFilter"
          }
        }
      },
      "smartOffice_NestedFloatFilter_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "number",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "number",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "number",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "number",
              "null"
            ]
          },
          "lte": {
            "type": [
              "number",
              "null"
            ]
          },
          "gt": {
            "type": [
              "number",
              "null"
            ]
          },
          "gte": {
            "type": [
              "number",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/smartOffice_NestedFloatFilter_2"
          }
        }
      },
      "smartOffice_DateTimeFilter_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/smartOffice_NestedDateTimeFilter"
          }
        }
      },
      "smartOffice_NestedDateTimeFilter_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/smartOffice_NestedDateTimeFilter_2"
          }
        }
      },
      "smartOffice_TaskUpdateManyMutationInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/smartOffice_StringFieldUpdateOperationsInput"
          },
          "taskType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "smartOffice_Task_taskType",
            "enum": [
              "MEETING",
              "CALL",
              "EMAIL",
              "FOLLOW_UP"
            ]
          },
          "status": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "smartOffice_Task_status",
            "enum": [
              "PENDING",
              "COMPLETED",
              "CANCELLED"
            ]
          },
          "details": {},
          "userId": {
            "$ref": "#/components/schemas/smartOffice_StringFieldUpdateOperationsInput"
          }
        }
      },
      "smartOffice_TaskWhereInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/smartOffice_TaskWhereInput_2"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/smartOffice_TaskWhereInput_2"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/smartOffice_TaskWhereInput_2"
          },
          "id": {
            "$ref": "#/components/schemas/smartOffice_StringFilter"
          },
          "taskType": {
            "$ref": "#/components/schemas/smartOffice_EnumTask_taskTypeFilter"
          },
          "status": {
            "$ref": "#/components/schemas/smartOffice_EnumTask_statusFilter"
          },
          "details": {
            "$ref": "#/components/schemas/smartOffice_JsonFilter"
          },
          "userId": {
            "$ref": "#/components/schemas/smartOffice_StringFilter"
          }
        }
      },
      "smartOffice_StringFilter_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/smartOffice_NestedStringFilter"
          }
        }
      },
      "smartOffice_NestedStringFilter_7": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/smartOffice_NestedStringFilter_7"
          }
        }
      },
      "smartOffice_UserUpdateManyMutationInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/smartOffice_StringFieldUpdateOperationsInput"
          },
          "username": {
            "$ref": "#/components/schemas/smartOffice_StringFieldUpdateOperationsInput"
          },
          "password": {
            "$ref": "#/components/schemas/smartOffice_StringFieldUpdateOperationsInput"
          },
          "role": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "smartOffice_User_role",
            "enum": [
              "ADMIN",
              "AGENT",
              "SALES_REP"
            ]
          }
        }
      },
      "smartOffice_UserWhereInput_2": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "AND": {
            "$ref": "#/components/schemas/smartOffice_UserWhereInput_2"
          },
          "OR": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/components/schemas/smartOffice_UserWhereInput_2"
            }
          },
          "NOT": {
            "$ref": "#/components/schemas/smartOffice_UserWhereInput_2"
          },
          "id": {
            "$ref": "#/components/schemas/smartOffice_StringFilter"
          },
          "username": {
            "$ref": "#/components/schemas/smartOffice_StringFilter"
          },
          "password": {
            "$ref": "#/components/schemas/smartOffice_StringFilter"
          },
          "role": {
            "$ref": "#/components/schemas/smartOffice_EnumUser_roleFilter"
          }
        }
      },
      "smartOffice_StringFilter_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/smartOffice_NestedStringFilter"
          }
        }
      },
      "smartOffice_NestedStringFilter_8": {
        "additionalProperties": false,
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "equals": {
            "type": [
              "string",
              "null"
            ]
          },
          "in": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "notIn": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "lt": {
            "type": [
              "string",
              "null"
            ]
          },
          "lte": {
            "type": [
              "string",
              "null"
            ]
          },
          "gt": {
            "type": [
              "string",
              "null"
            ]
          },
          "gte": {
            "type": [
              "string",
              "null"
            ]
          },
          "contains": {
            "type": [
              "string",
              "null"
            ]
          },
          "startsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "endsWith": {
            "type": [
              "string",
              "null"
            ]
          },
          "not": {
            "$ref": "#/components/schemas/smartOffice_NestedStringFilter_8"
          }
        }
      },
      "smartOffice_ClientUpdateInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/smartOffice_StringFieldUpdateOperationsInput"
          },
          "name": {
            "$ref": "#/components/schemas/smartOffice_StringFieldUpdateOperationsInput"
          },
          "email": {
            "$ref": "#/components/schemas/smartOffice_StringFieldUpdateOperationsInput"
          },
          "phone": {
            "$ref": "#/components/schemas/smartOffice_StringFieldUpdateOperationsInput"
          },
          "userId": {
            "$ref": "#/components/schemas/smartOffice_StringFieldUpdateOperationsInput"
          }
        }
      },
      "smartOffice_SaleUpdateInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/smartOffice_StringFieldUpdateOperationsInput"
          },
          "saleType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "smartOffice_Sale_saleType",
            "enum": [
              "NEW_POLICY",
              "RENEWAL",
              "UPGRADE"
            ]
          },
          "amount": {
            "$ref": "#/components/schemas/smartOffice_FloatFieldUpdateOperationsInput"
          },
          "timestamp": {
            "$ref": "#/components/schemas/smartOffice_DateTimeFieldUpdateOperationsInput"
          },
          "userId": {
            "$ref": "#/components/schemas/smartOffice_StringFieldUpdateOperationsInput"
          }
        }
      },
      "smartOffice_TaskUpdateInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/smartOffice_StringFieldUpdateOperationsInput"
          },
          "taskType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "smartOffice_Task_taskType",
            "enum": [
              "MEETING",
              "CALL",
              "EMAIL",
              "FOLLOW_UP"
            ]
          },
          "status": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "smartOffice_Task_status",
            "enum": [
              "PENDING",
              "COMPLETED",
              "CANCELLED"
            ]
          },
          "details": {},
          "userId": {
            "$ref": "#/components/schemas/smartOffice_StringFieldUpdateOperationsInput"
          }
        }
      },
      "smartOffice_UserUpdateInput": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/smartOffice_StringFieldUpdateOperationsInput"
          },
          "username": {
            "$ref": "#/components/schemas/smartOffice_StringFieldUpdateOperationsInput"
          },
          "password": {
            "$ref": "#/components/schemas/smartOffice_StringFieldUpdateOperationsInput"
          },
          "role": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "smartOffice_User_role",
            "enum": [
              "ADMIN",
              "AGENT",
              "SALES_REP"
            ]
          }
        }
      },
      "smartOffice_ClientUpdateInput_2": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/smartOffice_StringFieldUpdateOperationsInput"
          },
          "name": {
            "$ref": "#/components/schemas/smartOffice_StringFieldUpdateOperationsInput"
          },
          "email": {
            "$ref": "#/components/schemas/smartOffice_StringFieldUpdateOperationsInput"
          },
          "phone": {
            "$ref": "#/components/schemas/smartOffice_StringFieldUpdateOperationsInput"
          },
          "userId": {
            "$ref": "#/components/schemas/smartOffice_StringFieldUpdateOperationsInput"
          }
        }
      },
      "smartOffice_SaleUpdateInput_2": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/smartOffice_StringFieldUpdateOperationsInput"
          },
          "saleType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "smartOffice_Sale_saleType",
            "enum": [
              "NEW_POLICY",
              "RENEWAL",
              "UPGRADE"
            ]
          },
          "amount": {
            "$ref": "#/components/schemas/smartOffice_FloatFieldUpdateOperationsInput"
          },
          "timestamp": {
            "$ref": "#/components/schemas/smartOffice_DateTimeFieldUpdateOperationsInput"
          },
          "userId": {
            "$ref": "#/components/schemas/smartOffice_StringFieldUpdateOperationsInput"
          }
        }
      },
      "smartOffice_TaskUpdateInput_2": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/smartOffice_StringFieldUpdateOperationsInput"
          },
          "taskType": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "smartOffice_Task_taskType",
            "enum": [
              "MEETING",
              "CALL",
              "EMAIL",
              "FOLLOW_UP"
            ]
          },
          "status": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "smartOffice_Task_status",
            "enum": [
              "PENDING",
              "COMPLETED",
              "CANCELLED"
            ]
          },
          "details": {},
          "userId": {
            "$ref": "#/components/schemas/smartOffice_StringFieldUpdateOperationsInput"
          }
        }
      },
      "smartOffice_UserUpdateInput_2": {
        "additionalProperties": false,
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/smartOffice_StringFieldUpdateOperationsInput"
          },
          "username": {
            "$ref": "#/components/schemas/smartOffice_StringFieldUpdateOperationsInput"
          },
          "password": {
            "$ref": "#/components/schemas/smartOffice_StringFieldUpdateOperationsInput"
          },
          "role": {
            "type": [
              "string",
              "null"
            ],
            "x-graphql-enum-name": "smartOffice_User_role",
            "enum": [
              "ADMIN",
              "AGENT",
              "SALES_REP"
            ]
          }
        }
      },
      "8c71da61a2019e240cfce16b6043fb2f1f5ebf5e": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "temperature": {
            "type": "number"
          }
        },
        "required": [
          "city",
          "country",
          "temperature"
        ]
      },
      "ChatCompletionRequestMessage": {
        "type": "object",
        "properties": {
          "role": {
            "description": "The role of the messages author. One of `system`, `user`, `assistant`, or `function`.",
            "type": "{string}"
          },
          "content": {
            "description": "The contents of the message. `content` is required for all messages except assistant messages with function calls.",
            "type": "{string}"
          },
          "name": {
            "description": "The name of the author of this message. `name` is required if role is `function`, and it should be the name of the function whose response is in the `content`. May contain a-z, A-Z, 0-9, and underscores, with a maximum length of 64 characters.",
            "type": "{string}"
          },
          "function_call": {
            "type": "{ChatCompletionRequestMessageFunctionCall}"
          }
        },
        "required": [
          "role"
        ]
      }
    }
  }
}