{
  "version": 3,
  "sources": ["../../wundergraph.config.ts", "../../wundergraph.generate.ts", "../../wundergraph.operations.ts", "../../wundergraph.server.ts"],
  "sourcesContent": ["import {\n  EnvironmentVariable,\n  configureWunderGraphApplication,\n  cors,\n  introspect,\n} from \"@wundergraph/sdk\"\n\nimport generate from \"./wundergraph.generate\"\nimport operations from \"./wundergraph.operations\"\nimport server from \"./wundergraph.server\"\n\nconst countries = introspect.graphql({\n  apiNamespace: \"countries\",\n  url: \"https://countries.trevorblades.com/\",\n})\n\nconst weather = introspect.graphql({\n  id: \"weather\",\n  apiNamespace: \"weather\",\n  url: \"https://weather-api.wundergraph.com/\",\n  introspection: {\n    pollingIntervalSeconds: 5,\n  },\n})\n\nconst customerCommunicationHub = introspect.prisma({\n  apiNamespace: \"customerCommunication\",\n  prismaFilePath: \"../prisma/customer-communication-hub.prisma\",\n})\n\nconst clientPortal = introspect.planetscale({\n  apiNamespace: \"clientPortal\",\n  databaseURL: new EnvironmentVariable(\"CLIENT_PORTAL_DATABASE_URL\"),\n  introspection: {\n    pollingIntervalSeconds: 5,\n  },\n})\n\nconst gpac = introspect.planetscale({\n  apiNamespace: \"gpac\",\n  databaseURL: new EnvironmentVariable(\"GPAC_DATABASE_URL\"),\n  introspection: {\n    pollingIntervalSeconds: 5,\n  },\n})\n\nconst guardianOnline = introspect.planetscale({\n  apiNamespace: \"guardianOnline\",\n  databaseURL: new EnvironmentVariable(\"GUARDIAN_ONLINE_DATABASE_URL\"),\n  introspection: {\n    pollingIntervalSeconds: 5,\n  },\n})\n\nconst livingBalanceSheet = introspect.planetscale({\n  apiNamespace: \"livingBalanceSheet\",\n  databaseURL: new EnvironmentVariable(\"LIVING_BALANCE_DATABASE_URL\"),\n})\n\nconst smartOffice = introspect.planetscale({\n  apiNamespace: \"smartOffice\",\n  databaseURL: new EnvironmentVariable(\"SMART_OFFICE_DATABASE_URL\"),\n  introspection: {\n    pollingIntervalSeconds: 5,\n  },\n})\n\nconfigureWunderGraphApplication({\n  apis: [\n    countries,\n    customerCommunicationHub,\n    weather,\n    clientPortal,\n    gpac,\n    guardianOnline,\n    livingBalanceSheet,\n    smartOffice,\n  ],\n  server,\n  operations,\n  generate,\n  cors: {\n    ...cors.allowAll,\n    allowedOrigins:\n      process.env.NODE_ENV === \"production\"\n        ? [\n            new EnvironmentVariable(\"NEXTAUTH_URL\"),\n            \"https://gg-test-repo.vercel.app/\",\n            \"https://d2vp238439bu7d.cloudfront.net\",\n            \"https://gg-test-repo-production.up.railway.app\",\n            new EnvironmentVariable(\"DATABASE_URL\"),\n          ]\n        : [\n            \"http://localhost:3000\",\n            new EnvironmentVariable(\"WG_ALLOWED_ORIGIN\"),\n            new EnvironmentVariable(\"DATABASE_URL\"),\n          ],\n  },\n  security: {\n    enableGraphQLEndpoint:\n      process.env.NODE_ENV !== \"production\" ||\n      process.env.GITPOD_WORKSPACE_ID !== undefined,\n  },\n})\n", "import { configureWunderGraphGeneration } from \"@wundergraph/sdk\"\n\nexport default configureWunderGraphGeneration({\n  codeGenerators: [],\n  operationsGenerator: (config) => {\n    config.includeNamespaces(\n      \"customerCommunication\",\n      \"clientPortal\",\n      \"gpac\",\n      \"guardianOnline\",\n      \"livingBalanceSheet\",\n      \"smartOffice\"\n    )\n  },\n})\n", "import { configureWunderGraphOperations } from \"@wundergraph/sdk\"\n\nimport type { OperationsConfiguration } from \"./generated/wundergraph.operations\"\n\nexport default configureWunderGraphOperations<OperationsConfiguration>({\n  operations: {\n    defaultConfig: {\n      authentication: {\n        required: false,\n      },\n    },\n    queries: (config) => ({\n      ...config,\n      caching: {\n        enable: false,\n        staleWhileRevalidate: 5,\n        maxAge: 10,\n        public: true,\n      },\n      liveQuery: {\n        enable: true,\n        pollingIntervalSeconds: 1,\n      },\n    }),\n    mutations: (config) => ({\n      ...config,\n    }),\n    subscriptions: (config) => ({\n      ...config,\n    }),\n    custom: {},\n  },\n})\n", "import { configureWunderGraphServer } from \"@wundergraph/sdk/server\"\n\nexport default configureWunderGraphServer(() => ({\n  hooks: {\n    queries: {\n      Countries: {\n        preResolve: async ({ operations }) => {},\n      },\n    },\n    mutations: {},\n  },\n}))\n"],
  "mappings": "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",
  "names": ["import_sdk", "import_sdk"]
}
