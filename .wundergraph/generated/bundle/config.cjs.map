{
  "version": 3,
  "sources": ["../../wundergraph.config.ts", "../../wundergraph.generate.ts", "../../wundergraph.operations.ts", "../../wundergraph.server.ts"],
  "sourcesContent": ["import {\n  EnvironmentVariable,\n  configureWunderGraphApplication,\n  cors,\n  introspect,\n} from \"@wundergraph/sdk\"\n\nimport generate from \"./wundergraph.generate\"\nimport operations from \"./wundergraph.operations\"\nimport server from \"./wundergraph.server\"\n\nconst countries = introspect.graphql({\n  apiNamespace: \"countries\",\n  url: \"https://countries.trevorblades.com/\",\n})\n\nconst weather = introspect.graphql({\n  id: \"weather\",\n  apiNamespace: \"weather\",\n  url: \"https://weather-api.wundergraph.com/\",\n  introspection: {\n    pollingIntervalSeconds: 5,\n  },\n})\n\nconst customerCommunicationHub = introspect.prisma({\n  apiNamespace: \"customerCommunication\",\n  prismaFilePath: \"../prisma/customer-communication-hub.prisma\",\n})\n\nconst clientPortal = introspect.planetscale({\n  apiNamespace: \"clientPortal\",\n  databaseURL: new EnvironmentVariable(\"CLIENT_PORTAL_DATABASE_URL\"),\n})\n\nconst gpac = introspect.planetscale({\n  apiNamespace: \"gpac\",\n  databaseURL: new EnvironmentVariable(\"GPAC_DATABASE_URL\"),\n})\n\nconst guardianOnline = introspect.planetscale({\n  apiNamespace: \"guardianOnline\",\n  databaseURL: new EnvironmentVariable(\"GUARDIAN_ONLINE_DATABASE_URL\"),\n})\n\nconst livingBalanceSheet = introspect.planetscale({\n  apiNamespace: \"livingBalanceSheet\",\n  databaseURL: new EnvironmentVariable(\"LIVING_BALANCE_DATABASE_URL\"),\n})\n\nconst smartOffice = introspect.planetscale({\n  apiNamespace: \"smartOffice\",\n  databaseURL: new EnvironmentVariable(\"SMART_OFFICE_DATABASE_URL\"),\n})\n\nconfigureWunderGraphApplication({\n  apis: [\n    countries,\n    customerCommunicationHub,\n    weather,\n    clientPortal,\n    gpac,\n    guardianOnline,\n    livingBalanceSheet,\n    smartOffice,\n  ],\n  server,\n  operations,\n  generate,\n  cors: {\n    ...cors.allowAll,\n    allowedOrigins:\n      process.env.NODE_ENV === \"production\"\n        ? [\n            new EnvironmentVariable(\"NEXTAUTH_URL\"),\n            \"https://gg-test-repo.vercel.app/\",\n            \"https://d2vp238439bu7d.cloudfront.net\",\n            \"https://gg-test-repo-production.up.railway.app\",\n            new EnvironmentVariable(\"DATABASE_URL\"),\n          ]\n        : [\n            \"http://localhost:3000\",\n            new EnvironmentVariable(\"WG_ALLOWED_ORIGIN\"),\n            new EnvironmentVariable(\"DATABASE_URL\"),\n          ],\n  },\n  security: {\n    enableGraphQLEndpoint:\n      process.env.NODE_ENV !== \"production\" ||\n      process.env.GITPOD_WORKSPACE_ID !== undefined,\n  },\n})\n", "import { configureWunderGraphGeneration, templates } from \"@wundergraph/sdk\"\n\nexport default configureWunderGraphGeneration({\n  codeGenerators: [\n    {\n      templates: [templates.typescript.client],\n      path: \"../generated\",\n    },\n  ],\n  operationsGenerator: (config) => {\n    config.includeNamespaces(\n      \"customerCommunication\",\n      \"clientPortal\",\n      \"gpac\",\n      \"guardianOnline\",\n      \"livingBalanceSheet\",\n      \"smartOffice\"\n    )\n  },\n})\n", "import { configureWunderGraphOperations } from \"@wundergraph/sdk\"\n\nimport type { OperationsConfiguration } from \"./generated/wundergraph.operations\"\n\nexport default configureWunderGraphOperations<OperationsConfiguration>({\n  operations: {\n    defaultConfig: {\n      authentication: {\n        required: false,\n      },\n    },\n    queries: (config) => ({\n      ...config,\n      caching: {\n        enable: false,\n        staleWhileRevalidate: 5,\n        maxAge: 10,\n        public: true,\n      },\n      liveQuery: {\n        enable: true,\n        pollingIntervalSeconds: 1,\n      },\n    }),\n    mutations: (config) => ({\n      ...config,\n    }),\n    subscriptions: (config) => ({\n      ...config,\n    }),\n    custom: {},\n  },\n})\n", "import { configureWunderGraphServer } from \"@wundergraph/sdk/server\"\n\nexport default configureWunderGraphServer(() => ({\n  hooks: {\n    queries: {\n      Countries: {\n        preResolve: async ({ operations }) => {},\n      },\n    },\n    mutations: {},\n  },\n}))\n"],
  "mappings": "AAAA,IAAAA,EAKO,4BCLP,IAAAC,EAA0D,4BAEnDC,KAAQ,kCAA+B,CAC5C,eAAgB,CACd,CACE,UAAW,CAAC,YAAU,WAAW,MAAM,EACvC,KAAM,cACR,CACF,EACA,oBAAsBC,GAAW,CAC/BA,EAAO,kBACL,wBACA,eACA,OACA,iBACA,qBACA,aACF,CACF,CACF,CAAC,ECnBD,IAAAC,EAA+C,4BAIxCC,KAAQ,kCAAwD,CACrE,WAAY,CACV,cAAe,CACb,eAAgB,CACd,SAAU,EACZ,CACF,EACA,QAAUC,IAAY,CACpB,GAAGA,EACH,QAAS,CACP,OAAQ,GACR,qBAAsB,EACtB,OAAQ,GACR,OAAQ,EACV,EACA,UAAW,CACT,OAAQ,GACR,uBAAwB,CAC1B,CACF,GACA,UAAYA,IAAY,CACtB,GAAGA,CACL,GACA,cAAgBA,IAAY,CAC1B,GAAGA,CACL,GACA,OAAQ,CAAC,CACX,CACF,CAAC,EChCD,IAAAC,EAA2C,mCAEpCC,KAAQ,8BAA2B,KAAO,CAC/C,MAAO,CACL,QAAS,CACP,UAAW,CACT,WAAY,MAAO,CAAE,WAAAC,CAAW,IAAM,CAAC,CACzC,CACF,EACA,UAAW,CAAC,CACd,CACF,EAAE,EHAF,IAAMC,EAAY,aAAW,QAAQ,CACnC,aAAc,YACd,IAAK,qCACP,CAAC,EAEKC,EAAU,aAAW,QAAQ,CACjC,GAAI,UACJ,aAAc,UACd,IAAK,uCACL,cAAe,CACb,uBAAwB,CAC1B,CACF,CAAC,EAEKC,EAA2B,aAAW,OAAO,CACjD,aAAc,wBACd,eAAgB,6CAClB,CAAC,EAEKC,EAAe,aAAW,YAAY,CAC1C,aAAc,eACd,YAAa,IAAI,sBAAoB,4BAA4B,CACnE,CAAC,EAEKC,EAAO,aAAW,YAAY,CAClC,aAAc,OACd,YAAa,IAAI,sBAAoB,mBAAmB,CAC1D,CAAC,EAEKC,EAAiB,aAAW,YAAY,CAC5C,aAAc,iBACd,YAAa,IAAI,sBAAoB,8BAA8B,CACrE,CAAC,EAEKC,EAAqB,aAAW,YAAY,CAChD,aAAc,qBACd,YAAa,IAAI,sBAAoB,6BAA6B,CACpE,CAAC,EAEKC,EAAc,aAAW,YAAY,CACzC,aAAc,cACd,YAAa,IAAI,sBAAoB,2BAA2B,CAClE,CAAC,KAED,mCAAgC,CAC9B,KAAM,CACJP,EACAE,EACAD,EACAE,EACAC,EACAC,EACAC,EACAC,CACF,EACA,OAAAC,EACA,WAAAC,EACA,SAAAC,EACA,KAAM,CACJ,GAAG,OAAK,SACR,eACE,QAAQ,IAAI,WAAa,aACrB,CACE,IAAI,sBAAoB,cAAc,EACtC,mCACA,wCACA,iDACA,IAAI,sBAAoB,cAAc,CACxC,EACA,CACE,wBACA,IAAI,sBAAoB,mBAAmB,EAC3C,IAAI,sBAAoB,cAAc,CACxC,CACR,EACA,SAAU,CACR,sBACE,QAAQ,IAAI,WAAa,cACzB,QAAQ,IAAI,sBAAwB,MACxC,CACF,CAAC",
  "names": ["import_sdk", "import_sdk", "wundergraph_generate_default", "config", "import_sdk", "wundergraph_operations_default", "config", "import_server", "wundergraph_server_default", "operations", "countries", "weather", "customerCommunicationHub", "clientPortal", "gpac", "guardianOnline", "livingBalanceSheet", "smartOffice", "wundergraph_server_default", "wundergraph_operations_default", "wundergraph_generate_default"]
}
